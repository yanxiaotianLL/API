<#@ include file="EF.Utility.CS.ttinclude" #><#@
 output extension=".cs" encoding="UTF-8" #><#

    var efHost = (EfTextTemplateHost)Host;
    var code = new CodeGenerationTools(this);
    
#>
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
// <copyright file="<#= efHost.EntityContainer.Name #>.cs">
//        Copyright(c)2015  rights reserved.
//        CLR版本：4.0.30319.23920 
//        生成时间：<#= DateTime.Now.ToString("yyyy-MM-dd HH:mm") #>
// </copyright>
//------------------------------------------------------------------------------

using System.Data.Entity;
using System.Data.Entity.Infrastructure;
using <#= code.EscapeNamespace(efHost.MappingNamespace) #>;

namespace <#= code.EscapeNamespace(efHost.Namespace) #>
{
    public partial class <#= efHost.EntityContainer.Name #> : DbContext
    {
        static <#= efHost.EntityContainer.Name #>()
        {
            Database.SetInitializer<<#= efHost.EntityContainer.Name #>>(null);
        }

        public <#= efHost.EntityContainer.Name #>()
            : base("Name=<#= efHost.EntityContainer.Name #>")
        {
        }

<#
    var summary="";
    foreach (var set in efHost.EntityContainer.BaseEntitySets.OfType<EntitySet>())
    {
        if(set.Documentation !=null && set.Documentation.Summary!=null)
            summary=set.Documentation.Summary;

        else if(set.Documentation !=null && set.Documentation.LongDescription!=null)
            summary=set.Documentation.LongDescription;
        else
            summary=string.Format("[{0}]", set.ElementType.Name);
#>
        /// <summary>
        /// <#= summary #>
        /// </summary>
        public DbSet<<#= set.ElementType.Name #>> <#= set.Name #> { get; set; }
<#
    }
#>

        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
<#
    foreach (var set in efHost.EntityContainer.BaseEntitySets.OfType<EntitySet>())
    {
#>
            modelBuilder.Configurations.Add(new <#= set.ElementType.Name #>Map());
<#
    }
#>
        }
    }
}