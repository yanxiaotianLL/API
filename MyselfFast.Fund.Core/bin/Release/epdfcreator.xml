<?xml version=\"1.0\"?>
<doc>
    <assembly>
        <name>ExpertPdf.PdfCreator</name>
    </assembly>
    <members>
        <member name=\"T:ExpertPdf.PdfCreator.AddElementResult\">
            <summary>
            The result of adding a PDF element to the renderer
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.AddElementResult.pageIndex\">
            <summary>
            The end page index
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.AddElementResult.pageBounds\">
            <summary>
            The bounds inside the end page
            </summary>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.AddElementResult.#ctor\">
            <summary>
            Construct a AddElementResult object with no page information
            </summary>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.AddElementResult.#ctor(System.Int32,System.Drawing.RectangleF)\">
            <summary>
            Constructs AddElementResult object based on the page index and the bounds
            inside the page where the element rendering ended.
            </summary>
            <param name=\"endPageIndex\"></param>
            <param name=\"endPageBounds\"></param>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.AddElementResult.EndPageIndex\">
            <summary>
            The index of the page where the rendering of a page element ended.
            This information is useful for paged output of elements to continue adding new elements after this element
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.AddElementResult.EndPageBounds\">
            <summary>
            The bounds inside the page where the rendering of a page element ended.
            This information is useful for paged output of elements to continue adding new elements after this element
            </summary>
        </member>
        <member name=\"T:ExpertPdf.PdfCreator.AddTextElementResult\">
            <summary>
            The result of adding a text element to the renderer
            </summary>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.AddTextElementResult.#ctor(System.String)\">
            <summary>
            Construct a AddTextElementResult object with the not rendered text
            </summary>
            <param name=\"remainingText\">The not rendered text</param>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.AddTextElementResult.#ctor(System.String,System.Int32,System.Drawing.RectangleF)\">
            <summary>
            Constructs a AddTextElementResult object with the not rendered text and the page
            where rendering of this text element ended
            </summary>
            <param name=\"remainingText\">The not rendered text</param>
            <param name=\"endPageIndex\">The index of the page where the rendering of text ended</param>
            <param name=\"endPageBounds\">The bounds inside the page where the rendering of the text ended</param>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.AddTextElementResult.RemainingText\">
            <summary>
            Gets the text after remained not rendered after the rendering ended. A text can be partially
            rendered if the text cannot fit the specified bounds of the text element.
            </summary>
        </member>
        <member name=\"T:ExpertPdf.PdfCreator.AuthOptions\">
            <summary>
            Authentication options for accessing a URL in HTML to PDF converter (e.g IIS authentication). 
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.AuthOptions.Username\">
            <summary>
            The username
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.AuthOptions.Password\">
            <summary>
            The password
            </summary>
        </member>
        <member name=\"T:ExpertPdf.PdfCreator.BeforeCreateNextPageHandler\">
            <summary>
            BeforeCreateNextPage event handler
            </summary>
            <param name=\"bcnpEventArgs\">The BeforeCreateNextPage event handler</param>
        </member>
        <member name=\"T:ExpertPdf.PdfCreator.BeforeCreateNextPageEventArgs\">
            <summary>
            BeforeCreateNextPage event arguments
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.BeforeCreateNextPageEventArgs.Cancel\">
            <summary>
            Set this property true to cancel automatic creation of next page. 
            This will also end the rendering of the next page.
            </summary>
        </member>
        <member name=\"T:ExpertPdf.PdfCreator.BeforeRenderNextPageHandler\">
            <summary>
            BeforeRenderNextPage event handler
            </summary>
            <param name=\"brnpEventArgs\">The BeforeRenderNextPage event handler</param>
        </member>
        <member name=\"T:ExpertPdf.PdfCreator.BeforeRenderNextPageEventArgs\">
            <summary>
            BeforeRenderNextPage event arguments
            </summary>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.BeforeRenderNextPageEventArgs.#ctor(System.Int32,System.Drawing.RectangleF)\">
            <summary>
            Constructor
            </summary>
            <param name=\"pageIndex\">The next page index</param>
            <param name=\"rectangle\">The rectangle rendered on the next page</param>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.BeforeRenderNextPageEventArgs.Cancel\">
            <summary>
            Set this property true to cancel rendering on next page
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.BeforeRenderNextPageEventArgs.Rectangle\">
            <summary>
            The rectangle that will be rendered on the next page
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.BeforeRenderNextPageEventArgs.PageIndex\">
            <summary>
            The index of the next page
            </summary>
        </member>
        <member name=\"T:ExpertPdf.PdfCreator.BezierCurveElement\">
            <summary>
            Represents a Bezier curve
            </summary>
        </member>
        <member name=\"T:ExpertPdf.PdfCreator.PageGraphicElement\">
            <summary>
            The base class for all graphic elements
            </summary>
        </member>
        <member name=\"T:ExpertPdf.PdfCreator.PageElement\">
            <summary>
            The base class for all page elements
            </summary>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.PageElement.Render(ExpertPdf.PdfCreator.ElementsRenderer)\">
            <summary>
            Render this page element using the specified renderer. A renderer can be a page or a template
            </summary>
            <param name=\"renderer\">The renderer to render this element. Can be a document page or template</param>
            <returns>The result of adding this element</returns>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.PageGraphicElement.#ctor\">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.PageGraphicElement.Translate(System.Single,System.Single)\">
            <summary>
            Translates the coordinate system before rendering the element.         
            The coordinates of the element are relative to the translated coordinate system.
            </summary>
            <param name=\"tx\">The distance to translate the origin of the coordinate system in the horizontal dimension</param>
            <param name=\"ty\">The distance to translate the origin of the coordinate system in the horizontal dimension</param>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.PageGraphicElement.Scale(System.Single,System.Single)\">
            <summary>
            Scales the coordinates so that 1 unit in the horizontal and vertical dimensions of the new coordinate system 
            is the same size as sx and sy units, respectively, in the previous coordinate system.
            </summary>
            <param name=\"sx\">The value by which to scale coordinate system in the x-axis direction.</param>
            <param name=\"sy\">The value by which to scale coordinate system in the y-axis direction.</param>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.PageGraphicElement.Rotate(System.Single)\">
            <summary>
            Rotates the coordinate system axes clockwise by the specified angle before rendering the element. 
            The coordinates of the element are relative to the rotated coordinates system.
            </summary>
            <param name=\"rotateAngle\">The angle of the rotation in degrees.</param>
            <remarks>For text rotation use the TextAngle property of the TextElement.</remarks>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.PageGraphicElement.Skew(System.Single,System.Single)\">
            <summary>
            Skews the x axis by an skewXAngle and the y axis by an skewYAngle
            before rendering the element.
            </summary>
            <param name=\"skewXAngle\">Skew x angle.</param>
            <param name=\"skewYAngle\">Skew y angle.</param>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.PageGraphicElement.BackColor\">
            <summary>
            Gets or sets element background color.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.PageGraphicElement.ForeColor\">
            <summary>
            Gets or sets the element foreground color.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.PageGraphicElement.ColorSpace\">
            <summary>
            Gets or sets color space for element rendering.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.PageGraphicElement.Transparency\">
            <summary>
            Gets or sets element transparency. The transparency is expressed as a value between 0 and 100. 
            0 means completely transparent and 100 completely opaque.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.PageGraphicElement.Blending\">
            <summary>
            Gets or sets blending mode for transparent rendering mode of the element.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.PageGraphicElement.LineStyle\">
            <summary>
            Gets or sets the line style for elements rendering lines.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.PageGraphicElement.Gradient\">
            <summary>
            The gradient used to fill a shape.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.PageGraphicElement.Translated\">
            <summary>
            A flag to indicate if this element was translated.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.PageGraphicElement.Scaled\">
            <summary>
            A flag to indicate if this element was scaled.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.PageGraphicElement.Rotated\">
            <summary>
            A flag to indicate if this element was rotated.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.PageGraphicElement.Skewed\">
            <summary>
            A flag to indicate if this element was skewed.
            </summary>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.BezierCurveElement.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)\">
            <summary>
            Constructs a Bezier curve element
            </summary>
            <param name=\"x1\">The first point X coordinate</param>
            <param name=\"y1\">The first point Y coordinate</param>
            <param name=\"x2\">The second point X coordinate</param>
            <param name=\"y2\">The second point Y coordinate</param>
            <param name=\"x3\">The third point X coordinate</param>
            <param name=\"y3\">The third point Y coordinate</param>
            <param name=\"x4\">The fourth point X coordinate</param>
            <param name=\"y4\">The fourth point Y coordinate</param>
        </member>
        <member name=\"T:ExpertPdf.PdfCreator.Blending\">
            <summary>
            The blending function for transparent rendering mode.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.Blending.Normal\">
            <summary>
            Selects the source color, ignoring the backdrop.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.Blending.Multiply\">
            <summary>
            Multiplies the backdrop and source color values.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.Blending.Screen\">
            <summary>
            Multiplies the complements of the backdrop and source color values, then complements the result.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.Blending.Overlay\">
            <summary>
            Multiplies or screens the colors, depending on the backdrop color value. 
            Source colors overlay the backdrop while preserving its highlights and shadows. 
            The backdrop color is not replaced but is mixed with the source color to reflect 
            the lightness or darkness of the backdrop
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.Blending.Darken\">
            <summary>
            Selects the darker of the backdrop and source colors.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.Blending.Lighten\">
            <summary>
            Selects the lighter of the backdrop and source colors.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.Blending.ColorDodge\">
            <summary>
            Brightens the backdrop color to reflect the source color. Painting with black produces no changes.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.Blending.ColorBurn\">
            <summary>
            Darkens the backdrop color to reflect the source color. Painting with white produces no change.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.Blending.HardLight\">
            <summary>
            Multiplies or screens the colors, depending on the source color value. 
            The effect is similar to shining a harsh spotlight on the backdrop.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.Blending.SoftLight\">
            <summary>
            Darkens or lightens the colors, depending on the source color value. 
            The effect is similar to shining a diffused spotlight on the backdrop.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.Blending.Difference\">
            <summary>
            Subtracts the darker of the two constituent colors from the lighter color.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.Blending.Exclusion\">
            <summary>
            Produces an effect similar to that of the Difference mode but lower in contrast. 
            Painting with white inverts the backdrop color; painting with black produces no change.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.Blending.Hue\">
            <summary>
            Creates a color with the hue of the source color and the saturation and luminosity of the backdrop color.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.Blending.Saturation\">
            <summary>
            Creates a color with the saturation of the source color and the hue and luminosity of the backdrop color. 
            Painting with this mode in an area of the backdrop that is a pure gray (no saturation) produces no change.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.Blending.Color\">
            <summary>
            Creates a color with the hue and saturation of the source color and the luminosity of the backdrop color. 
            This preserves the gray levels of the backdrop and is useful for coloring monochrome images or tinting color images.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.Blending.Luminosity\">
            <summary>
            Creates a color with the luminosity of the source color and the hue and saturation of the backdrop color. 
            This produces an inverse effect to that of the Color mode.
            </summary>
        </member>
        <member name=\"T:ExpertPdf.PdfCreator.Bookmark\">
            <summary>
            Represents a bookmark in the PDF document
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.Bookmark.Text\">
            <summary>
            Gets or sets the bookmark text.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.Bookmark.Color\">
            <summary>
            Gets or sets the bookmark text color.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.Bookmark.Style\">
            <summary>
            Gets or sets the bookmark text style.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.Bookmark.Destination\">
            <summary>
            Gets or sets the bookmark destination.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.Bookmark.ParentBookmark\">
            <summary>
            Gets the parent bookmark of this bookmark or null if the bookmark has no parent.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.Bookmark.DescendantBookmarks\">
            <summary>
            Gets a collection of all the descendant bookmarks of this bookmark.
            </summary>
        </member>
        <member name=\"T:ExpertPdf.PdfCreator.BookmarksCollection\">
            <summary>
            Represents a collection of bookmarks of a document.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.BookmarksCollection.document\">
            <summary>
            The parent PDF Document.
            </summary>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.BookmarksCollection.#ctor(ExpertPdf.PdfCreator.Document)\">
            <summary>
            Creates a collection of bookmarks for this document.
            </summary>
            <param name=\"document\">The PDF document for which this collection is created.</param>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.BookmarksCollection.GetEnumerator\">
            <summary>
            Gets the collection enumerator.
            </summary>
            <returns>The collection enumerator.</returns>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.BookmarksCollection.AddNewBookmark(System.String,ExpertPdf.PdfCreator.ExplicitDestination)\">
            <summary>
            Adds a new bookmark to the collection.
            </summary>
            <param name=\"text\">The bookmark text.</param>
            <param name=\"destination\">The bookmark destination.</param>
            <returns>The newly created PDF bookmark.</returns>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.BookmarksCollection.InsertNewBookmark(System.Int32,System.String,ExpertPdf.PdfCreator.ExplicitDestination)\">
            <summary>
            Creates a new bookmark and inserts it at the specified zero based position index in collection.
            </summary>
            <param name=\"positionIndex\">The zero based position index where to insert the bookmark.</param>
            <param name=\"text\">The bookmark text.</param>
            <param name=\"destination\">The bookmark destination.</param>
            <returns>The newly created PDF bookmark.</returns>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.BookmarksCollection.Remove(ExpertPdf.PdfCreator.Bookmark)\">
            <summary>
            Removes the specified PDF bookmark.
            </summary>
            <param name=\"bookmark\">The PDF bookmark to be removed.</param>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.BookmarksCollection.Remove(System.Int32)\">
            <summary>
            Removes the PDF bookmark at the specified index in collection.
            </summary>
            <param name=\"bookmarkIndex\">The zero based index of the PDF bookmark to be removed.</param>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.BookmarksCollection.Document\">
            <summary>
            The parent document of this collection
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.BookmarksCollection.Item(System.Int32)\">
            <summary>
            Gets the bookmark at the specified zero based index in the bookmarks collection.
            </summary>
            <param name=\"bookmarkIndex\">The zero based bookmark index in the collection.</param>
            <returns>The PDF bookmark at the specified index</returns>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.BookmarksCollection.Count\">
            <summary>
            The number of bookmarks in collection.
            </summary>
        </member>
        <member name=\"T:ExpertPdf.PdfCreator.PdfBookmarkStyle\">
            <summary>
            The bookmark text style.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.PdfBookmarkStyle.Normal\">
            <summary>
            Normal text style.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.PdfBookmarkStyle.Italic\">
            <summary>
            The text is italic.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.PdfBookmarkStyle.Bold\">
            <summary>
            The text is bold.
            </summary>
        </member>
        <member name=\"T:ExpertPdf.PdfCreator.CertSystemStore\">
            <summary>
            The types of system certificates stores.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.CertSystemStore.PersonalCertificates\">
            <summary>
            A certificate store that holds certificates with associated private keys (Personal Certificates store).
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.CertSystemStore.RootCertificationAuthorities\">
            <summary>
            Root certificates (Trusted Root Certification Authorities store).
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.CertSystemStore.CertificationAuthorities\">
            <summary>
            Certification authority certificates (Intermediate Certification Authorities store).
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.CertSystemStore.SoftwarePublisherCertificates\">
            <summary>
            Software Publisher Certificates store.
            </summary>
        </member>
        <member name=\"T:ExpertPdf.PdfCreator.CircleElement\">
            <summary>
            Represents an ellipse shape 
            </summary>
        </member>
        <member name=\"T:ExpertPdf.PdfCreator.EllipseElement\">
            <summary>
            Represents an ellipse shape 
            </summary>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.EllipseElement.#ctor(System.Single,System.Single,System.Single,System.Single)\">
            <summary>
            Ellipse element constructor
            </summary>
            <param name=\"x\">The X coordinate where the ellipse will be rendered</param>
            <param name=\"y\">Y coordinate where the ellipse will be rendered</param>
            <param name=\"xRadius\">The X radius of the ellipse</param>
            <param name=\"yRadius\">The Y radius of the ellipse</param>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.CircleElement.#ctor(System.Single,System.Single,System.Single)\">
            <summary>
            Ellipse element constructor
            </summary>
            <param name=\"x\">The X coordinate where the ellipse will be rendered</param>
            <param name=\"y\">Y coordinate where the ellipse will be rendered</param>
            <param name=\"radius\">The circle radius</param>
        </member>
        <member name=\"T:ExpertPdf.PdfCreator.ColorSpace\">
            <summary>
            Available color spaces
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.ColorSpace.RGB\">
            <summary>
            RGB color space.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.ColorSpace.CMYK\">
            <summary>
            CMYK color space.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.ColorSpace.Gray\">
            <summary>
            Gray color space.
            </summary>
        </member>
        <member name=\"T:ExpertPdf.PdfCreator.CompressionLevel\">
            <summary>
            The PDF streams compression level.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.CompressionLevel.NoCompression\">
            <summary>
            The PDF document is not compressed.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.CompressionLevel.NormalCompression\">
            <summary>
            Normal compression level. This is the default compression level of the PDF document.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.CompressionLevel.BestCompression\">
            <summary>
            Produces the smallest PDF document but it takes longer to compress the streams.
            </summary>
        </member>
        <member name=\"T:ExpertPdf.PdfCreator.DestinationViewMode\">
            <summary>
            The view mode when an explicit destination is displayed in the viewer.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.DestinationViewMode.XYZ\">
            <summary>
            Display the page designated by page, with the coordinates (left, top) positioned 
            at the upper-left corner of the window and the contents of the page magnified by the factor zoom. 
            A null value for any of the parameters left, top, or zoom specifies that the current value of that parameter is to be retained unchanged.
            A zoom value of 0 has the same meaning as a null value.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.DestinationViewMode.Fit\">
            <summary>
            Display the page designated by page, with its contents magnified just enough to fit the entire page 
            within the window both horizontally and vertically. 
            If the required horizontal and vertical magnification factors are different, 
            use the smaller of the two, centering the page within the window in the other dimension.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.DestinationViewMode.FitH\">
            <summary>
            Display the page designated by page, with the vertical coordinate top positioned
            at the top edge of the window and the contents of the page magnified
            just enough to fit the entire width of the page within the window.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.DestinationViewMode.FitV\">
            <summary>
            Display the page designated by page, with the horizontal coordinate left positioned
            at the left edge of the window and the contents of the page magnified
            just enough to fit the entire height of the page within the window.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.DestinationViewMode.FitB\">
            <summary>
            Display the page designated by page, with its contents magnified
            just enough to fit its bounding box entirely within the window both horizontally
            and vertically. If the required horizontal and vertical magnification
            factors are different, use the smaller of the two, centering the bounding box
            within the window in the other dimension.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.DestinationViewMode.FitBH\">
            <summary>
            Display the page designated by page, with the vertical coordinate top positioned at the top edge 
            of the window and the contents of the page magnified just enough to fit the entire width of its 
            bounding box within the window. A null value for top specifies that the current value of that 
            parameter is to be retained unchanged.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.DestinationViewMode.FitBV\">
            <summary>
            Display the page designated by page, with the horizontal coordinate left positioned at the left 
            edge of the window and the contents of the page magnified just enough to fit the entire height 
            of its bounding box within the window. A null value for left specifies that the current value of that 
            parameter is to be retained unchanged.
            </summary>
        </member>
        <member name=\"T:ExpertPdf.PdfCreator.DigitalCertificate\">
            <summary>
            This class represents a certificate used for digital signatures
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.DigitalCertificate.Version\">
            <summary>
            Gets the certificate version number.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.DigitalCertificate.SerialNumber\">
            <summary>
            Gets the certificate serial number.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.DigitalCertificate.Issuer\">
            <summary>
            Gets the certificate issuer name. 
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.DigitalCertificate.Subject\">
            <summary>
            Gets the certificate subject  name.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.DigitalCertificate.StartDate\">
            <summary>
            Gets the start date of the certificate.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.DigitalCertificate.EndDate\">
            <summary>
            Gets the end date of the certificate.
            </summary>
        </member>
        <member name=\"T:ExpertPdf.PdfCreator.DigitalCertificatesCollection\">
            <summary>
            This class is used to manage a collection of certificates.
            </summary>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.DigitalCertificatesCollection.GetEnumerator\">
            <summary>
            Gets the collection enumerator.
            </summary>
            <returns>The collection enumerator.</returns>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.DigitalCertificatesCollection.GetCertBySerialNumber(System.Byte[])\">
            <summary>
            Searches the certificate by the specified serial number.
            </summary>
            <param name=\"serialNumber\">Serial number to search.</param>
            <returns>The certificate with the specified serial number or null if no certificate was found.</returns>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.DigitalCertificatesCollection.GetCertByIssuer(System.String)\">
            <summary>
            Searches the certificate by issuer name.
            </summary>
            <param name=\"issuerName\">Issuer name.</param>
            <returns>The certificate with the specified issuer name or null if no certificate was found.</returns>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.DigitalCertificatesCollection.GetCertBySubject(System.String)\">
            <summary>
            Searches the certificate by subject name.
            </summary>
            <param name=\"subjectName\">Subject name.</param>
            <returns>The certificate with the specified subject name or null if no certificate was found.</returns>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.DigitalCertificatesCollection.Item(System.Int32)\">
            <summary>
            Gets the certificate at the specified zero besed index from collection.
            </summary>
            <param name=\"index\">The zero based certificate index.</param>
            <returns>The certificate at the specified index.</returns>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.DigitalCertificatesCollection.Count\">
            <summary>
            Gets the number of certificates in collection.
            </summary>
        </member>
        <member name=\"T:ExpertPdf.PdfCreator.DigitalCertificatesStore\">
            <summary>
            Provides and interface for getting digital certificates from system certificates store or from a password protected 
            PKCS#12 file. 
            A PKCS#12 file stores both the private and the public keys and such a file can be for example a file with extension .pfx 
            generated by IIS from the SSL certificate installed for a website. 
            </summary>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.DigitalCertificatesStore.GetCertificates\">
            <summary>
            Gets the certificates collection from the Personal Certificates store. 
            The Personal Certificates store can be accessed from Control Panel/Internet Options,
            Content, Certificates.
            </summary>
            <returns>The Personal certificates collection.</returns>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.DigitalCertificatesStore.GetCertificates(ExpertPdf.PdfCreator.CertSystemStore)\">
            <summary>
            Gets the certificates collection from the specified system certificates store.
            </summary>
            <param name=\"sysCertStore\">The system certificates store</param>
            <returns>The certificates collection</returns>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.DigitalCertificatesStore.GetCertificates(System.String)\">
            <summary>
            Gets the certificates collection from the specified PKCS#12 file. This method uses a NULL 
            password to get the certificates from packet.
            A PKCS#12 file stores both the private and the public key and such a file can be for example a file with extension .pfx 
            generated by IIS from the SSL certificate installed for a website.
            </summary>
            <param name=\"certFileName\">The path of the .pfx or .p12 file storing the certificates.</param>
            <returns>The certificates collection.</returns>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.DigitalCertificatesStore.GetCertificates(System.String,System.String)\">
            <summary>
            Gets the certificates collection from the specified password protected PKCS#12 file. 
            A PKCS#12 file stores both the private and the public key and such a file can be for example a file with extension .pfx 
            generated by IIS from the SSL certificate installed for a website.
            </summary>
            <param name=\"certFileName\">The path of the .pfx or .p12 file storing the certificates.</param>
            <param name=\"password\">The password used to decrypt and verify the PFX packet.
            This password must be exactly the same as the password that was used to encrypt the packet. 
            If the password used to encrypt the packet was blank, pass NULL for the value of this parameter.
            </param>
            <returns>The certificates collection.</returns>
        </member>
        <member name=\"T:ExpertPdf.PdfCreator.DigitalSignatureElement\">
            <summary>
            Represents a digital signature in the PDF document. An instance of this class can be created by 
            a call to Document.Security.CreateSignature()
            </summary>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.DigitalSignatureElement.#ctor(System.Drawing.RectangleF,ExpertPdf.PdfCreator.DigitalCertificate)\">
            <summary>
            Constructs a digital signature object that can be added to a PDF page.
            </summary>
            <param name=\"bounds\">The digital signature rectangle inside the PDF page.</param>
            <param name=\"certificate\">The digital certificate obtained from the digital certificates store.</param>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.DigitalSignatureElement.Certificate\">
            <summary>
            Gets the certificate used to create the signature.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.DigitalSignatureElement.Reason\">
            <summary>
            Gets or sets the reason The reason for the signing, such as ( I agree … ).
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.DigitalSignatureElement.Location\">
            <summary>
            Gets or sets the CPU host name or physical location of the signing.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.DigitalSignatureElement.ContactInfo\">
            <summary>
            Information provided by the signer to enable a recipient to contact the signer 
            to verify the signature; for example, a phone number.
            </summary>
        </member>
        <member name=\"T:ExpertPdf.PdfCreator.Document\">
            <summary>
            Represents a PDF document
            </summary>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.Document.#ctor\">
            <summary>
            Creates an empty PDF document.
            </summary>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.Document.#ctor(ExpertPdf.PdfCreator.PdfStandardSubset)\">
            <summary>
            Creates a PDF document based on the specified PDF standard. By default the Full PDF stadard is used.
            This property can be used to create PDF/A, PDF/X or PDF/SiqQ compliant documents.
            </summary>
            <param name=\"pdfSubset\">The PDF standard used to create the PDF document.
            </param>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.Document.#ctor(ExpertPdf.PdfCreator.ColorSpace)\">
            <summary>
            Creates a PDF document with the specified color space. This property can be used to create 
            PDF documents in RGB, Grayscale or CMYK color spaces. By default the document uses the RGB color space.
            </summary>
            <param name=\"colorSpace\">The color space of the document.</param>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.Document.#ctor(ExpertPdf.PdfCreator.PdfStandardSubset,ExpertPdf.PdfCreator.ColorSpace)\">
            <summary>
            Creates a PDF document based on the specified PDF standard and using the specified color space. 
            By default the Full PDF stadard is used. This property can be used to create PDF/A, PDF/X or PDF/SiqQ
            compliant documents using the specified color space. Plese note that the PDF/X standard will force the
            CMYK color space even if a different color space was specified.
            </summary>
            <param name=\"pdfSubset\">The PDF standard used to create the PDF document.</param>
            <param name=\"colorSpace\">The color space of the document.</param>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.Document.#ctor(System.IO.Stream)\">
            <summary>
            Creates a PDF document object from the specified stream containing the PDF document.
            </summary>
            <param name=\"pdfStream\">The PDF document stream.</param>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.Document.#ctor(System.String)\">
            <summary>
            Creates a PDF document from and existing PDF file.
            </summary>
            <param name=\"pdfFileName\">The full path of an existing PDF document file.
            </param>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.Document.#ctor(System.IO.Stream,System.String)\">
            <summary>
            Creates a PDF document from a stream cotaining a password protected PDF document. 
            The specified password can be a user or owner password.
            </summary>
            <param name=\"pdfStream\">The stream containing the PDF document.</param>
            <param name=\"pdfPassword\">The password to open the specified PDF document.</param>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.Document.#ctor(System.String,System.String)\">
            <summary>
            Creates a PDF Document object from an existing password protected PDF file.
            </summary>
            <param name=\"pdfFileName\">The full path to the PDF file.</param>
            <param name=\"pdfPassword\">The password to open the specified PDF document.</param>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.Document.Close\">
            <summary>
            Releases all the resources allocated by this PDF document. Always call this method after the document was saved.
            If the document was created from a stream or file, the stream will be closed if it was not explicitly detached 
            by calling the DetachStream() before the document is closed.
            </summary>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.Document.DetachStream\">
            <summary>
            Call this method to detach the stream from which this document was created. When this method is called before 
            calling Close(), the Close method will not close the detached stream.
            </summary>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.Document.Save(System.String)\">
            <summary>
            Saves the PDF document into the specified file.
            </summary>
            <param name=\"pdfFilePath\">The name of the file where to save the document. It can be a full path or a relative path.</param>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.Document.Save(System.IO.Stream)\">
            <summary>
            Saves the document into the specified stream.
            </summary>
            <param name=\"outStream\">The stream where to save the PDF document.</param>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.Document.Save\">
            <summary>
            Saves the PDF document as byte array that can be further saved into a file or send over HTTP.
            </summary>
            <returns>The byte array representation of the document.</returns>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.Document.Save(System.Web.HttpResponse,System.Boolean,System.String)\">
            <summary>
            Saves the document into a HTTP stream.
            </summary>
            <param name=\"httpResponse\">The HTTP response object.</param>
            <param name=\"inline\">If inline is true the PDF document will be automatically opened in browser, otherwise the 
            user will be asked to save or open the downloaded PDF document.</param>
            <param name=\"downloadFileName\">The name given to the PDF document. This name is used by the browser when it opens the PDF document inline 
            or the name suggested for saving the document when the document is sent as an attachement</param>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.Document.AddTemplate(System.Single,System.Single)\">
            <summary>
            Add a new template with the specified width and height to the document templates collection.
            The template location is top left corner of the page.
            </summary>
            <param name=\"width\">The template width</param>
            <param name=\"height\">The template height</param>
            <returns>The newly added template</returns>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.Document.AddTemplate(System.Drawing.RectangleF)\">
            <summary>
            Add a new template with the specified bounds to the document templates collection.
            </summary>
            <param name=\"bounds\">The template element bounds</param>
            <returns>The newly added template.</returns>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.Document.AddPage\">
            <summary>
            Creates a new PDF page and adds it to the collection. If there is a previous page in the
            collection, the orientation and size are inherited from the that page otherwise a first page with
            the default A4 size and Portrait orientation is created. The page margins are inherited from the
            default document margins
            </summary>
            <returns>The newly created PDF page</returns>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.Document.AddPage(ExpertPdf.PdfCreator.Margins)\">
            <summary>
            Creates a new PDF page and adds it to the collection. If there is a previous page in the
            collection, the orientation and size are inherited from the that page otherwise a first page with
            the default A4 size and Portrait orientation is created
            </summary>
            <param name=\"pageMargins\">The PDF page margins</param>
            <returns>The newly created PDF page</returns>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.Document.AddPage(ExpertPdf.PdfCreator.PageSize,ExpertPdf.PdfCreator.Margins)\">
            <summary>
            Creates a new PDF page and adds it to the collection. If there is a previous page in the
            collection, the page orientation is inherited from the that page otherwise a first page with
            the specified size and Portrait orientation is created
            </summary>
            <param name=\"pageSize\">The page size in points</param>
            <param name=\"pageMargins\">The page mergins in points</param>
            <returns>The newly created PDF page</returns>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.Document.AddPage(ExpertPdf.PdfCreator.PageSize,ExpertPdf.PdfCreator.Margins,ExpertPdf.PdfCreator.PageOrientation)\">
            <summary>
            Creates a new PDF page with the specified size, margins and orientation and adds it to the collection.
            </summary>
            <param name=\"pageSize\">The PDF page size in points</param>
            <param name=\"pageMargins\">The PDF page margins in points</param>
            <param name=\"pageOrientation\">The PDF page orientation</param>
            <returns>The newly created PDF page</returns>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.Document.AddPage(ExpertPdf.PdfCreator.PdfPage)\">
            <summary>
            Adds the specified page to the document pages collection. The page to be added is allowed to be
            from another document. The source document of the page to be added must remain opened until the
            current document is saved.
            </summary>
            <param name=\"pdfPage\">The page to be added to the collection.</param>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.Document.InsertPage(System.Int32,ExpertPdf.PdfCreator.PageSize,ExpertPdf.PdfCreator.Margins,ExpertPdf.PdfCreator.PageOrientation)\">
            <summary>
            Creates a new PDF page with the specified size, margins and orientation and inserts it into the collection
            at the specified index.
            </summary>
            <param name=\"index\">The index where to insert the new page.</param>
            <param name=\"pageSize\">The PDF page size in points</param>
            <param name=\"pageMargins\">The PDF page margins in points</param>
            <param name=\"pageOrientation\">The PDF page orientation</param>
            <returns>The newly created PDF page</returns>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.Document.InsertPage(System.Int32,ExpertPdf.PdfCreator.PdfPage)\">
            <summary>
            Inserts the specified page into the document pages collection at the specified index. 
            The page to be added is allowed to be from another document. 
            The source document of the page to be inserted must remain opened until the
            current document is saved.
            </summary>
            <param name=\"pageIndex\">The index where the page will be inserted.</param>
            <param name=\"pdfPage\">The PDF page to be inserted.</param>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.Document.AppendDocument(ExpertPdf.PdfCreator.Document)\">
            <summary>
            Appends all pages from the another document specified as parameter to the current document. 
            A custom range of pages from another document can be appended to the current document calling the
            Document.Pages.Add(PdfPage pdfPage) method for each page to be appended.
            The appended document must remain open until the current document is saved.
            </summary>
            <remarks>The appended document must remain open until the current document is saved.</remarks>
            <param name=\"doc\">The document to be appended.</param>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.Document.RemovePage(ExpertPdf.PdfCreator.PdfPage)\">
            <summary>
            Removes the specified PDF page from the pages collection.
            </summary>
            <param name=\"pdfPage\">The PDF page to be removed.</param>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.Document.RemovePage(System.Int32)\">
            <summary>
            Removes the PDF page at the specified index in pages collection.
            </summary>
            <param name=\"pageIndex\">The zero based index of the PDF page to be removed.</param>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.Document.AddFont(System.Drawing.Font)\">
            <summary>
            Adds a system font to the fonts collection. If the font was already added 
            the method returns the existing font. By default the font
            is embedded in the PDF document in order to support Unicode texts.
            </summary>
            <param name=\"font\">The font to be added to the collection.</param>
            <returns>The font added to the collection.</returns>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.Document.AddFont(System.Drawing.Font,System.Boolean)\">
            <summary>
            Adds a system font to the fonts collection. If the font was already added 
            the method returns the existing font. The embedFont property indicates if the added font 
            will be embedded into the PDF document.
            </summary>
            <param name=\"font\">Font for adding.</param>
            <param name=\"embedFont\">When true the font will be embedded in the PDF document.</param>
            <returns>The font added to the collection.</returns>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.Document.AddFont(System.String)\">
            <summary>
            Adds a system font to the fonts collection. The font is created from the specified file.
            If the font was already added the method returns the existing font. 
            </summary>
            <param name=\"fontFilename\">The file name of the font to be added.</param>
            <returns>The font added to the collection.</returns>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.Document.AddFont(ExpertPdf.PdfCreator.StdFontBaseFamily)\">
            <summary>
            Adds a standard font to the collection.
            If the font was already added the method returns the existing font.
            </summary>
            <param name=\"stdFont\">The standard font family.</param>
            <returns>The font added to the collection.</returns>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.Document.AddFont(ExpertPdf.PdfCreator.StandardCJKFont)\">
            <summary>
            Adds a standard CJK font to the collection.
            If the font was already added the method returns the existing font.
            </summary>
            <param name=\"stdCJKFont\">The standard CJK font to add to the document fonts collection.</param>
            <returns>The CJK font added to the collection.</returns>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.Document.GetPageCount(System.String)\">
            <summary>
            A fast method to obtain the page count of a specified PDF document.
            </summary>
            <param name=\"pdfFilePath\">The path of the PDF file for which to get the page count.</param>
            <returns>The number of pages in the specified PDF document.</returns>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.Document.GetPageCount(System.IO.Stream)\">
            <summary>
            A fast method to obtain the page count of a specified PDF document.
            </summary>
            <param name=\"pdfStream\">The stream containing the PDF document for which to get the page count.</param>
            <returns>The number of pages in the specified PDF document.</returns>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.Document.AddBookmark(System.String,ExpertPdf.PdfCreator.ExplicitDestination)\">
            <summary>
            Creates a root bookmark for the document
            </summary>
            <param name=\"text\">The bookmark text</param>
            <param name=\"destination\">The bookmark destination</param>
            <returns>The newly added bookmark.</returns>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.Document.AddBookmark(System.String,ExpertPdf.PdfCreator.ExplicitDestination,ExpertPdf.PdfCreator.Bookmark)\">
            <summary>
            Creates a child bookmark for the existing parentBookmark
            </summary>
            <param name=\"text\">The text of the child bookmark</param>
            <param name=\"destination\">The destination of the child bookmark</param>
            <param name=\"parentBookmark\">The parent bookmark</param>
            <returns>The newly added bookmark.</returns>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.Document.HtmlToPdfConcurrencyLevel\">
            <summary>
            This static parameter gives the maximum number of threads in the current .NET application domain that can convert HTML to PDF simultaneously.
            This parameter must be set before the first conversion performed in the current application domain.
            When this property is set with a negative value or zero the concurrency level is maximum. The default value is 4.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.Document.xDf\">
            <summary>
            Internal use only
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.Document.Pages\">
            <summary>
            Gets the document pages collection.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.Document.Fonts\">
            <summary>
            Gets the document fonts collection.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.Document.Templates\">
            <summary>
            Gets the document templates collection.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.Document.Margins\">
            <summary>
            The default document margins. The new pages will use the default margins
            if no marings is specified
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.Document.AutoCloseAppendedDocs\">
            <summary>
            Gets or sets a value indicating if the PDF documents appended to this document using the
            AppendDocument() method are automatically closed when the current document is closed using the 
            Close() method. The default value is false.
            The appended documents must remain open until the current document is saved.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.Document.HeaderTemplate\">
            <summary>
            Represents the default PDF document header template. This header is automatically considered
            when calculating the available space for drawing in a PDF page. This template is automatically 
            docked to the top of the PDF page. 
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.Document.FooterTemplate\">
            <summary>
            Represents the default PDF document footer template. This footer is automatically considered
            when calculating the available space for rendering in a PDF page. This template is automatically 
            docked to the bottom of the PDF page.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.Document.LeftTemplate\">
            <summary>
            Represents the default PDF document left template. This left template is automatically considered
            when calculating the available space for rendering in a PDF page. This template is automatically 
            docked to the left side of the PDF page.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.Document.RightTemplate\">
            <summary>
            Represents the default PDF document right template. This right template is automatically considered
            when calculating the available space for rendering in a PDF page. This template is automatically 
            docked to the right side of the PDF page.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.Document.Security\">
            <summary>
            Offers access to security features of the PDF document like encryption and digital signatures.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.Document.DocumentInformation\">
            <summary>
            Offers access to the document information object where the document's 
            title, subject, keywords, etc can be set.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.Document.ViewerPreferences\">
            <summary>
            Offers access to the viewer preferences settings for the document.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.Document.OpenAction\">
            <summary>
            The Go To or JavaScript action to be performed when the PDF document is opened.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.Document.UseCrossRefStreams\">
            <summary>
            When this property is true, the generated PDF will store the PDF cross-reference table and PDF trailer in compressed cross-reference streams
            and therefore the generated PDF document will be smaller in size.
            Set this false for compatibility with third party tools unable to understand the cross-reference streams.
            The default value is false for the new documents.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.Document.TransparencyEnabled\">
            <summary>
            Gets or sets a flag indicating if the transparency is enabled in the generated PDF document.
            Default value is true. This property can be set to false to eliminate the additional flattening time 
            when the document is sent to the printer from Adobe Reader viewer.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.Document.Bookmarks\">
            <summary>
            Gets the bookmarks collection of the document.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.Document.CompressionLevel\">
            <summary>
            Gets or sets the PDF document compression level
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.Document.JpegCompressionEnabled\">
            <summary>
            Gets or sets a flag indicating if the JPEG compression is enabled or not for the images in the generated PDF.
            By default the JPEG compression is enabled to reduce the size of the generated PDF. When the JPEG compression is enabled
            the quality of the images in the generated PDF is lower than the quality of the original images in the HTML document,
            function of the JpegCompressionLevel parameter. When the JpegCompressionLevel is increased, the quality of the images in PDF decreases.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.Document.JpegCompressionLevel\">
            <summary>
            Gets or sets the compression level of images in the generated PDF as an integer value between 0 and 100. 
            This property has effect only when the JpegCompressionEnabled is true.
            When the JpegCompressionLevel is 0, the compression rate is the lowest and the quality of the images is the best.
            When the JpegCompressionLevel is 100, the compression rate is the highest and quality of the images in PDF is the worst.
            The default JPEG compression level is 10, which should offer a good balance between the compression rate and 
            the quality of the images in PDF.
            </summary>
        </member>
        <member name=\"T:ExpertPdf.PdfCreator.DocumentInformation\">
            <summary>
            This class encapsulates the options to control the PDF document
            description (author, title, keywords, etc). The PDFConverter class define 
            a reference to an object of this type
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.DocumentInformation.Title\">
            <summary>
            Gets or sets the document’s title..
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.DocumentInformation.Author\">
            <summary>
            Gets or sets the name of the person who created the document..
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.DocumentInformation.Subject\">
            <summary>
            Gets or sets the subject of the document.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.DocumentInformation.Keywords\">
            <summary>
            Gets or sets the keywords associated with the document..
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.DocumentInformation.Producer\">
            <summary>
            Gets or sets the name of the application that produced the PDF document
            if for example the document was converted to PDF from another format. 
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.DocumentInformation.CreationDate\">
            <summary>
            Gets or sets the date and time the document was created, in human-readable form.
            </summary>
        </member>
        <member name=\"T:ExpertPdf.PdfCreator.DocumentOpenAction\">
            <summary>
            Encapsulates a Go To or JavaScript action to be performed when the document is opened.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.DocumentOpenAction.Action\">
            <summary>
            The open document action as an instance of the PdfActionGoTo or PdfActionJavaScript classes. 
            </summary>
        </member>
        <member name=\"T:ExpertPdf.PdfCreator.ElementsRenderer\">
            <summary>
            Base class for classes capable of rendering page elements
            </summary>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.ElementsRenderer.AddElement(ExpertPdf.PdfCreator.PageElement)\">
            <summary>
            Add a page element to the renderer
            </summary>
            <param name=\"pageElement\">The page element to be rendered</param>
            <returns>The result of adding the element</returns>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.ElementsRenderer.MeasureString(System.String,ExpertPdf.PdfCreator.PdfFont)\">
            <summary>
            Measures the size of the specified string when rendered with the specified font.
            </summary>
            <param name=\"text\">String to measure.</param>
            <param name=\"font\">The font used to render the string.</param>
            <returns>The size of the string.</returns>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.ElementsRenderer.ClientRectangle\">
            <summary>
            Gets the drawable area of the renderer. The margins, document header and footer are excluded.
            </summary>
        </member>
        <member name=\"T:ExpertPdf.PdfCreator.EllipseArcElement\">
            <summary>
            Represents an ellipse arc element
            </summary>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.EllipseArcElement.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)\">
            <summary>
            Constructs an ellipse arc element
            </summary>
            <param name=\"x\">X coordinate of the rectangle eclosing the ellipse.</param>
            <param name=\"y\">Y coordinate of the rectangle eclosing the ellipse.</param>
            <param name=\"width\">Width of the rectangle eclosing the ellipse.</param>
            <param name=\"height\">Height of the rectangle eclosing the ellipse.</param>
            <param name=\"startAngle\">The start angle in degrees of the ellipse arc measured counter-clockwise from the X axis centered in the enclosing rectangle.</param>
            <param name=\"sweepAngle\">The angle in degrees of the ellipse arc measured counter-clockwise from the start angle of the slice.</param>
        </member>
        <member name=\"T:ExpertPdf.PdfCreator.EllipseSliceElement\">
            <summary>
            Represents a slice from an ellipse
            </summary>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.EllipseSliceElement.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)\">
            <summary>
            Constructs an ellipse slice element
            </summary>
            <param name=\"x\">X coordinate of the rectangle eclosing the ellipse.</param>
            <param name=\"y\">Y coordinate of the rectangle eclosing the ellipse.</param>
            <param name=\"width\">Width of the rectangle eclosing the ellipse.</param>
            <param name=\"height\">Height of the rectangle eclosing the ellipse.</param>
            <param name=\"startAngle\">The start angle in degrees of the ellipse slice measured counter-clockwise from the X axis centered in the enclosing rectangle.</param>
            <param name=\"sweepAngle\">The angle in degrees of the ellipse slice measured counter-clockwise from the start angle of the slice.</param>
        </member>
        <member name=\"T:ExpertPdf.PdfCreator.EncryptionKeySize\">
            <summary>
            The length of the encryption key
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.EncryptionKeySize.EncryptKey128Bit\">
            <summary>
            A 128 bit length.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.EncryptionKeySize.EncryptKey40Bit\">
            <summary>
            A 40 bit length.
            </summary>
        </member>
        <member name=\"T:ExpertPdf.PdfCreator.ExplicitDestination\">
            <summary>
            Represents a destination in the PDF document for links, bookmarks and other interactive PDF features. 
            </summary>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.ExplicitDestination.#ctor(ExpertPdf.PdfCreator.PdfPage)\">
            <summary>
            Constructs a destination to the specified page
            </summary>
            <param name=\"page\">The destination page</param>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.ExplicitDestination.#ctor(ExpertPdf.PdfCreator.PdfPage,System.Drawing.PointF)\">
            <summary>
            Constructs a destination to the specified location in the specified page
            </summary>
            <param name=\"page\">The destination poge</param>
            <param name=\"point\">The destination point in page</param>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.ExplicitDestination.#ctor(ExpertPdf.PdfCreator.PdfPage,System.Drawing.PointF,ExpertPdf.PdfCreator.DestinationViewMode)\">
            <summary>
            Constructs a destination to the specified location in the specified page and with the specified view mode
            of the destination page
            </summary>
            <param name=\"page\">The destination page</param>
            <param name=\"point\">The destination point in page</param>
            <param name=\"viewMode\">The destination view mode</param>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.ExplicitDestination.Point\">
            <summary>
            Gets or sets the destination point in destination page.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.ExplicitDestination.ZoomPercentage\">
            <summary>
            Gets or sets the zoom percentage of the destination page when viewed in the viewer and the 
            view mode is XYZ (for example a 100 value will not zoom the page).
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.ExplicitDestination.DestPage\">
            <summary>
            Gets or sets the destination page.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.ExplicitDestination.ViewMode\">
            <summary>
            Gets or sets the view mode of the destination page.
            </summary>
        </member>
        <member name=\"T:ExpertPdf.PdfCreator.FileAttachmentElement\">
            <summary>
            Represents a file attachment in the PDF document.
            </summary>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.FileAttachmentElement.#ctor(System.Drawing.RectangleF,System.String)\">
            <summary>
            Creates a file attachment and a link in page to the attachment
            </summary>
            <param name=\"linkRectangle\">The attachment link rectangle in page</param>
            <param name=\"filePath\">The path to file to be attached</param>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.FileAttachmentElement.#ctor(System.Drawing.RectangleF,System.IO.Stream,System.String)\">
            <summary>
            Creates a file attachment from a stream and a link in page to the attachment
            </summary>
            <param name=\"linkRectangle\">The attachment link rectangle in page</param>
            <param name=\"fileStream\">The file stream</param>
            <param name=\"attachmentName\">A name for attachment</param>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.FileAttachmentElement.#ctor(System.String)\">
            <summary>
            Creates a file attachment and link in page to the attachment
            </summary>
            <param name=\"filePath\">The path to file to be attached</param>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.FileAttachmentElement.#ctor(System.IO.Stream,System.String)\">
            <summary>
            Creates a file attachment from a stream
            </summary>
            <param name=\"fileStream\">The file stream</param>
            <param name=\"attachmentName\">A name for attachment</param>
        </member>
        <member name=\"T:ExpertPdf.PdfCreator.FileLinkElement\">
            <summary>
            Represents a link to an external file
            </summary>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.FileLinkElement.#ctor(System.Drawing.RectangleF,System.String)\">
            <summary>
            Constructs a file link element
            </summary>
            <param name=\"linkRectangle\">The link rectangle in page</param>
            <param name=\"filePath\">The link file</param>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.FileLinkElement.LinkRectangle\">
            <summary>
            Gets or sets the link rectangle in page
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.FileLinkElement.FilePath\">
            <summary>
            Gets or sets the external file path
            </summary>
        </member>
        <member name=\"T:ExpertPdf.PdfCreator.FontCollection\">
            <summary>
            Represents a collection of fonts in a PDF document.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.FontCollection.document\">
            <summary>
            The parent PDF Document
            </summary>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.FontCollection.#ctor(ExpertPdf.PdfCreator.Document)\">
            <summary>
            Creates a font collection for the specified PDF document
            </summary>
            <param name=\"document\"></param>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.FontCollection.GetEnumerator\">
            <summary>
            Gets the collection enumerator.
            </summary>
            <returns>The collection enumerator.</returns>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.FontCollection.Add(System.Drawing.Font)\">
            <summary>
            Adds a system font to the fonts collection. If the font was already added 
            the method returns the existing font
            </summary>
            <param name=\"font\">The font to be added to the collection.</param>
            <returns>The font added to the collection.</returns>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.FontCollection.Add(System.Drawing.Font,System.Boolean)\">
            <summary>
            Adds a system font to the fonts collection. If the font was already added 
            the method returns the existing font. The embedFont property says if the added font 
            will be embedded into the PDF document
            </summary>
            <param name=\"font\">Font for adding.</param>
            <param name=\"embedFont\">When true the font will be embedded in the PDF document.</param>
            <returns>The font added to the collection.</returns>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.FontCollection.Add(System.String)\">
            <summary>
            Adds a system font to the fonts collection. The font is created from the specified file.
            If the font was already added the method returns the existing font.
            </summary>
            <param name=\"fontFilename\">The file name of the font to be added.</param>
            <returns>The font added to the collection.</returns>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.FontCollection.Add(ExpertPdf.PdfCreator.StdFontBaseFamily)\">
            <summary>
            Adds a standard font to the collection.
            If the font was already added the method returns the existing font.
            </summary>
            <param name=\"stdFont\">The standard font family.</param>
            <returns>The font added to the collection.</returns>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.FontCollection.Add(ExpertPdf.PdfCreator.StandardCJKFont)\">
            <summary>
            Adds a standard CJK font to the collection.
            If the font was already added the method returns the existing font.
            </summary>
            <param name=\"stdCJKFont\">The standard CJK font to add to the document fonts collection.</param>
            <returns>The CJK font added to the collection.</returns>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.FontCollection.Add(ExpertPdf.PdfCreator.PdfFont)\">
            <summary>
            Adds a PDF font to the fonts collection.
            If the font was already added the method returns the existing font.
            </summary>
            <param name=\"font\">Font object to add to the collection.</param>
            <returns>Added to the collection font.</returns>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.FontCollection.AddRange(ExpertPdf.PdfCreator.PdfFont[])\">
            <summary>
            Adds a set of fonts to the fonts collection.
            </summary>
            <param name=\"fonts\">The set of fonts to be added.</param>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.FontCollection.Contains(ExpertPdf.PdfCreator.PdfFont)\">
            <summary>
            Checks if the specified font belongs to the fonts collection.
            </summary>
            <param name=\"font\">Font to search.</param>
            <returns>True if the font is found in the collection, otherwise returns false.</returns>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.FontCollection.IndexOf(ExpertPdf.PdfCreator.PdfFont)\">
            <summary>
            Returns the index of the specified font in the fonts collection.
            </summary>
            <param name=\"font\">The font to search in collection.</param>
            <returns>The index of font or -1 if the font does not exist.</returns>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.FontCollection.Remove(ExpertPdf.PdfCreator.PdfFont)\">
            <summary>
            Removes the specified font from the fonts collection.
            </summary>
            <param name=\"font\">The font to be removed from collection.</param>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.FontCollection.Insert(System.Int32,ExpertPdf.PdfCreator.PdfFont)\">
            <summary>
            Inserts a font to the specified index in collection.
            </summary>
            <param name=\"font\">The font to be inserted in the collection.</param>
            <param name=\"index\">Index in collection where to insert the font.</param>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.FontCollection.Item(System.Int32)\">
            <summary>
            Gets the font from the specified index.
            </summary>
        </member>
        <member name=\"T:ExpertPdf.PdfCreator.GradientColor\">
            <summary>
            Used to fill a shape
            </summary>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.GradientColor.#ctor(ExpertPdf.PdfCreator.GradientDirection,ExpertPdf.PdfCreator.PdfColor,ExpertPdf.PdfCreator.PdfColor)\">
            <summary>
            Gradient contructor
            </summary>
            <param name=\"gradientDirection\">The gradient direction</param>
            <param name=\"start\">The start color of the gradient</param>
            <param name=\"end\">The end color of the gradient</param>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.GradientColor.StartColor\">
            <summary>
            The gradient start color
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.GradientColor.EndColor\">
            <summary>
            The gradient end color
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.GradientColor.GradientDirection\">
            <summary>
            The gradient direction
            </summary>
        </member>
        <member name=\"T:ExpertPdf.PdfCreator.GradientDirection\">
            <summary>
            The direction of the gradient color.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.GradientDirection.Horizontal\">
            <summary>
            Horizontal gradient from left to right
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.GradientDirection.Vertical\">
            <summary>
            Vertical gradient from top to bottom
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.GradientDirection.ForwardDiagonal\">
            <summary>
            Diagonal gradient from top left to bottom right
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.GradientDirection.BackwardDiagonal\">
            <summary>
            Diagonal gradient from top right bottm left
            </summary>
        </member>
        <member name=\"T:ExpertPdf.PdfCreator.HorizontalTextAlign\">
            <summary>
            Specifies horizontal alignment of text.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.HorizontalTextAlign.Default\">
            <summary>
            Align default.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.HorizontalTextAlign.Left\">
            <summary>
            Align left.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.HorizontalTextAlign.Center\">
            <summary>
            Align center.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.HorizontalTextAlign.Right\">
            <summary>
            Align right.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.HorizontalTextAlign.Justify\">
            <summary>
            Align justify.
            </summary>
        </member>
        <member name=\"T:ExpertPdf.PdfCreator.HTMLConvertAPI.ImgConverter\">
            <summary>
            This class offers the necessary API to create images in various formats from
            a specified web page
            </summary>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.HTMLConvertAPI.ImgConverter.#ctor\">
            <summary>
            Creates an image converter to autodetect the width and height
            of the web page
            </summary>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.HTMLConvertAPI.ImgConverter.#ctor(System.Int32)\">
            <summary>
            Creates an image converter for a web page with the specified width and 
            an autodected height
            </summary>
            <param name=\"pageWidth\">The web page width </param>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.HTMLConvertAPI.ImgConverter.#ctor(System.Int32,System.Int32)\">
            <summary>
            Creates an image converter for a web page with the specified width and height
            </summary>
            <param name=\"pageWidth\">The web page width</param>
            <param name=\"pageHeight\">The web page height</param>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.HTMLConvertAPI.ImgConverter.GetImageFromUrl(System.String,System.Drawing.Imaging.ImageFormat)\">
            <summary>
            Gets an System.Drawing.Image object from the specified URL in the 
            the specified System.Drawing.Imaging.ImageFormat format
            </summary>
            <param name=\"url\">The web page URL</param>
            <param name=\"format\">The image format</param>
            <returns>The rendered System.Drawing.Image object</returns>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.HTMLConvertAPI.ImgConverter.GetImageFromHtmlString(System.String,System.Drawing.Imaging.ImageFormat)\">
            <summary>
            Gets an System.Drawing.Image object from the specified HTML string in the 
            the specified System.Drawing.Imaging.ImageFormat format
            </summary>
            <param name=\"htmlString\">The HTML string to convert</param>
            <param name=\"format\">The image format</param>
            <returns>The rendered System.Drawing.Image object</returns>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.HTMLConvertAPI.ImgConverter.GetImageFromHtmlString(System.String,System.Drawing.Imaging.ImageFormat,System.String)\">
            <summary>
            Gets an System.Drawing.Image object from the specified HTML string in the 
            the specified System.Drawing.Imaging.ImageFormat format. The urlBase parameter allows the converter to
            determine the full URLs from relative URLs for images and CSS files appearing 
            in the HTML code from htmlString parameter. 
            </summary>
            <param name=\"htmlString\">The HTML string to convert</param>
            <param name=\"format\">The image format</param>
            <returns>The rendered System.Drawing.Image object</returns>
            <param name=\"urlBase\">The URL base of the page</param>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.HTMLConvertAPI.ImgConverter.GetImageFromHtmlFile(System.String,System.Drawing.Imaging.ImageFormat)\">
            <summary>
            Gets an System.Drawing.Image object from the specified HTML file in the 
            the specified System.Drawing.Imaging.ImageFormat format
            </summary>
            <param name=\"htmlFilePath\">The HTMl file full path</param>
            <param name=\"format\">The image format</param>
            <returns>The rendered System.Drawing.Image object</returns>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.HTMLConvertAPI.ImgConverter.GetImageFromHtmlStream(System.IO.Stream,System.Text.Encoding,System.Drawing.Imaging.ImageFormat)\">
            <summary>
            Gets an System.Drawing.Image object from the specified HTML stream in the 
            the specified System.Drawing.Imaging.ImageFormat format 
            </summary>
            <param name=\"htmlStream\">The HTML stream</param>
            <param name=\"streamEncoding\">The encoding of the HTML stream</param>
            <param name=\"format\">The image format</param>
            <returns>The rendered System.Drawing.Image object</returns>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.HTMLConvertAPI.ImgConverter.GetImageFromHtmlStream(System.IO.Stream,System.Text.Encoding,System.Drawing.Imaging.ImageFormat,System.String)\">
            <summary>
            Gets an System.Drawing.Image object from the specified HTML stream in the 
            the specified System.Drawing.Imaging.ImageFormat format. The urlBase parameter allows the converter to
            determine the full URLs from relative URLs for images and CSS files appearing 
            in the HTML code from htmlStream parameter. 
            </summary>
            <param name=\"htmlStream\">The HTML stream</param>
            <param name=\"streamEncoding\">The encoding of the HTML stream</param>
            <param name=\"format\">The image format</param>
            <param name=\"urlBase\">The URL base of the page</param>
            <returns>The rendered System.Drawing.Image object</returns>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.HTMLConvertAPI.ImgConverter.GetImageFromHtmlStringWithTempFile(System.String,System.Drawing.Imaging.ImageFormat)\">
            <summary>
            Gets an System.Drawing.Image object from the specified HTML string in the 
            the specified System.Drawing.Imaging.ImageFormat format by writing first the HTML
            string in a temporary file
            </summary>
            <param name=\"htmlString\">The HTML string to be converted to PDF</param>
            <param name=\"format\">The image format</param>
            <returns>The rendered System.Drawing.Image object</returns>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.HTMLConvertAPI.ImgConverter.GetImageFromHtmlStringWithTempFile(System.String,System.Drawing.Imaging.ImageFormat,System.String)\">
            <summary>
            Gets an System.Drawing.Image object from the specified HTML string in the 
            the specified System.Drawing.Imaging.ImageFormat format by writing first the HTML
            string in a temporary file. The urlBase parameter allows the converter to
            determine the full URLs from relative URLs for images and CSS files appearing 
            in the HTML code from htmlString parameter. 
            </summary>
            <param name=\"htmlString\">The HTML string to be converted to PDF</param>
            <param name=\"format\">The image format</param>
            <param name=\"urlBase\">The URL base of the page</param>
            <returns>The rendered System.Drawing.Image object</returns>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.HTMLConvertAPI.ImgConverter.GetImageFromHtmlStreamWithTempFile(System.IO.Stream,System.Text.Encoding,System.Drawing.Imaging.ImageFormat)\">
            <summary>
            Gets an System.Drawing.Image object from the specified HTML stream in the 
            the specified System.Drawing.Imaging.ImageFormat format by writing first the
            stream in a temporary file
            </summary>
            <param name=\"htmlStream\">The HTML stream</param>
            <param name=\"streamEncoding\">The encoding of the HTML stream</param>
            <param name=\"format\">The image format</param>
            <returns>The rendered System.Drawing.Image object</returns>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.HTMLConvertAPI.ImgConverter.GetImageFromHtmlStreamWithTempFile(System.IO.Stream,System.Text.Encoding,System.Drawing.Imaging.ImageFormat,System.String)\">
            <summary>
            Gets an System.Drawing.Image object from the specified HTML stream in the 
            the specified System.Drawing.Imaging.ImageFormat format by writing first the
            stream in a temporary file. The urlBase parameter allows the converter to
            determine the full URLs from relative URLs for images and CSS files appearing 
            in the HTML code from htmlString parameter. 
            </summary>
            <param name=\"htmlStream\">The HTML stream</param>
            <param name=\"streamEncoding\">The encoding of the HTML stream</param>
            <param name=\"format\">The image format</param>
            <param name=\"urlBase\">The URL base of the page</param>
            <returns>The rendered System.Drawing.Image object</returns>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.HTMLConvertAPI.ImgConverter.GetImageFromUrlBytes(System.String,System.Drawing.Imaging.ImageFormat)\">
            <summary>
            Gets binary format of an image generated from the specified URL in the 
            the specified System.Drawing.Imaging.ImageFormat format. The bytes can be further written in
            any stream like a disk file or a web response.
            </summary>
            <param name=\"url\">The web page URL</param>
            <param name=\"format\">The image format</param>
            <returns>The binary representation of the image as byte[] object</returns>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.HTMLConvertAPI.ImgConverter.GetImageBytesFromHtmlFile(System.String,System.Drawing.Imaging.ImageFormat)\">
            <summary>
            Gets binary format of an image generated from the specified HTML file in the 
            the specified System.Drawing.Imaging.ImageFormat format. The bytes can be further written in
            any stream like a disk file or a web response.
            </summary>
            <param name=\"htmlFilePath\">The full path of the HTML file to be converted to image</param>
            <param name=\"format\">The image format</param>
            <returns>The binary representation of the image as byte[] object</returns>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.HTMLConvertAPI.ImgConverter.GetImageBytesFromHtmlString(System.String,System.Drawing.Imaging.ImageFormat)\">
            <summary>
            Gets binary format of an image generated from the specified HTML string in the 
            the specified System.Drawing.Imaging.ImageFormat format. The bytes can be further written in
            any stream like a disk file or a web response.
            </summary>
            <param name=\"htmlString\">The HTML string to be converted to image</param>
            <param name=\"format\">The image format</param>
            <returns>The binary representation of the image as byte[] object</returns>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.HTMLConvertAPI.ImgConverter.GetImageBytesFromHtmlString(System.String,System.Drawing.Imaging.ImageFormat,System.String)\">
            <summary>
            Gets binary format of an image generated from the specified HTML string in the 
            the specified System.Drawing.Imaging.ImageFormat format. The bytes can be further written in
            any stream like a disk file or a web response. The urlBase parameter allows the converter to
            determine the full URLs from relative URLs for images and CSS files appearing 
            in the HTML code from htmlString parameter. 
            </summary>
            <param name=\"htmlString\">The HTML string to be converted to image</param>
            <param name=\"format\">The image format</param>
            <param name=\"urlBase\">The URL base of the page</param>
            <returns>The binary representation of the image as byte[] object</returns>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.HTMLConvertAPI.ImgConverter.GetImageBytesFromHtmlStringWithTempFile(System.String,System.Drawing.Imaging.ImageFormat)\">
            <summary>
            Gets binary format of an image generated from the specified HTML string in the 
            the specified System.Drawing.Imaging.ImageFormat format. The htmlString is first saved into  
            a temporary file before performing the conversion
            The bytes can be further written in
            any stream like a disk file or a web response.
            </summary>
            <param name=\"htmlString\">The HTML string to be converted to image</param>
            <param name=\"format\">The image format</param>
            <returns>The binary representation of the image as byte[] object</returns>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.HTMLConvertAPI.ImgConverter.GetImageBytesFromHtmlStringWithTempFile(System.String,System.Drawing.Imaging.ImageFormat,System.String)\">
            <summary>
            Gets binary format of an image generated from the specified HTML string in the 
            the specified System.Drawing.Imaging.ImageFormat format. The htmlString is first saved into  
            a temporary file before performing the conversion. The urlBase parameter allows the converter to
            determine the full URLs from relative URLs for images and CSS files appearing 
            in the HTML code from htmlString parameter. 
            The bytes can be further written in any stream like a disk file or a web response.
            </summary>
            <param name=\"htmlString\">The HTML string to be converted to image</param>
            <param name=\"format\">The image format</param>
            <param name=\"urlBase\">The URL base of the page</param>
            <returns>The binary representation of the image as byte[] object</returns>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.HTMLConvertAPI.ImgConverter.GetImageBytesFromHtmlStream(System.IO.Stream,System.Text.Encoding,System.Drawing.Imaging.ImageFormat)\">
            <summary>
            Gets binary format of an image generated from the specified HTML stream in the 
            the specified System.Drawing.Imaging.ImageFormat format. The bytes can be further written in
            any stream like a disk file or a web response. 
            </summary>
            <param name=\"htmlStream\">The HTML stream</param>
            <param name=\"streamEncoding\">The encoding of the HTML stream</param>
            <param name=\"format\">The image format</param>
            <returns>The binary representation of the image as byte[] object</returns>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.HTMLConvertAPI.ImgConverter.GetImageBytesFromHtmlStream(System.IO.Stream,System.Text.Encoding,System.Drawing.Imaging.ImageFormat,System.String)\">
            <summary>
            Gets binary format of an image generated from the specified HTML stream in the 
            the specified System.Drawing.Imaging.ImageFormat format. The urlBase parameter allows the converter to
            determine the full URLs from relative URLs for images and CSS files appearing 
            in the HTML code from htmlString parameter. 
            The bytes can be further written in any stream like a disk file or a web response.
            </summary>
            <param name=\"htmlStream\">The HTML stream</param>
            <param name=\"streamEncoding\">The encoding of the HTML stream</param>
            <param name=\"format\">The image format</param>
            <param name=\"urlBase\">The URL base of the page</param>
            <returns>The binary representation of the image as byte[] object</returns>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.HTMLConvertAPI.ImgConverter.GetImageBytesFromHtmlStreamWithTempFile(System.IO.Stream,System.Text.Encoding,System.Drawing.Imaging.ImageFormat)\">
            <summary>
            Gets binary format of an image generated from the specified HTML stream in the 
            the specified System.Drawing.Imaging.ImageFormat format. The htmlStream is first saved in a temporary file.
            The bytes can be further written in any stream like a disk file or a web response.
            </summary>
            <param name=\"htmlStream\">The HTML stream</param>
            <param name=\"streamEncoding\">The encoding of the HTML stream</param>
            <param name=\"format\">The image format</param>
            <returns>The binary representation of the image as byte[] object</returns>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.HTMLConvertAPI.ImgConverter.GetImageBytesFromHtmlStreamWithTempFile(System.IO.Stream,System.Text.Encoding,System.Drawing.Imaging.ImageFormat,System.String)\">
            <summary>
            Gets binary format of an image generated from the specified HTML stream in the 
            the specified System.Drawing.Imaging.ImageFormat format. The htmlStream is first saved in a temporary file.
            The urlBase parameter allows the converter to
            determine the full URLs from relative URLs for images and CSS files appearing 
            in the HTML code from htmlStream parameter. 
            The bytes can be further written in any stream like a disk file or a web response.
            </summary>
            <param name=\"htmlStream\">The HTML stream</param>
            <param name=\"streamEncoding\">The encoding of the HTML stream</param>
            <param name=\"format\">The image format</param>
            <param name=\"urlBase\">The URL base of the page</param>
            <returns>The binary representation of the image as byte[] object</returns>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.HTMLConvertAPI.ImgConverter.SaveImageFromUrlToFile(System.String,System.Drawing.Imaging.ImageFormat,System.String)\">
            <summary>
            This method produces a image from the specified URL in the specified format
            and saves the image in the specified disk file. The existing file will be 
            overwritten
            </summary>
            <param name=\"url\">The web page URL</param>
            <param name=\"format\">The output image format</param>
            <param name=\"outFile\">The output file full path</param>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.HTMLConvertAPI.ImgConverter.SaveImageFromHtmlFileToFile(System.String,System.Drawing.Imaging.ImageFormat,System.String)\">
            <summary>
            This method produces a image from the specified HTML file in the specified format
            and saves the image in the specified disk file. The existing file will be 
            overwritten
            </summary>
            <param name=\"htmlFilePath\">The HTML file full path to be converted to image</param>
            <param name=\"format\">The output image format</param>
            <param name=\"outFile\">The output file full path</param>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.HTMLConvertAPI.ImgConverter.SaveImageFromHtmlStringToFile(System.String,System.Drawing.Imaging.ImageFormat,System.String)\">
            <summary>
            This method produces a image from the specified HTML string in the specified format
            and saves the image in the specified disk file. The existing file will be 
            overwritten
            </summary>
            <param name=\"htmlString\">The HTML string to be converted to image</param>
            <param name=\"format\">The output image format</param>
            <param name=\"outFile\">The output file full path</param>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.HTMLConvertAPI.ImgConverter.SaveImageFromHtmlStringToFile(System.String,System.Drawing.Imaging.ImageFormat,System.String,System.String)\">
            <summary>
            This method produces a image from the specified HTML string in the specified format
            and saves the image in the specified disk file. The existing file will be 
            overwritten
            </summary>
            <param name=\"htmlString\">The HTML string to be converted to image</param>
            <param name=\"format\">The output image format</param>
            <param name=\"outFile\">The output file full path</param>
            <param name=\"urlBase\">The URL base of the page</param>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.HTMLConvertAPI.ImgConverter.SaveImageFromHtmlStreamToFile(System.IO.Stream,System.Text.Encoding,System.Drawing.Imaging.ImageFormat,System.String)\">
            <summary>
            This method produces a image from the specified HTML stream in the specified format
            and saves the image in the specified disk file. The existing file will be 
            overwritten
            </summary>
            <param name=\"htmlStream\">The HTML stream</param>
            <param name=\"streamEncoding\">The encoding of the HTML stream</param>
            <param name=\"format\">The output image format</param>
            <param name=\"outFile\">The output file full path</param>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.HTMLConvertAPI.ImgConverter.SaveImageFromHtmlStreamToFile(System.IO.Stream,System.Text.Encoding,System.Drawing.Imaging.ImageFormat,System.String,System.String)\">
            <summary>
            This method produces a image from the specified HTML stream in the specified format
            and saves the image in the specified disk file. The existing file will be 
            overwritten
            </summary>
            <param name=\"htmlStream\">The HTML stream</param>
            <param name=\"streamEncoding\">The encoding of the HTML stream</param>
            <param name=\"format\">The output image format</param>
            <param name=\"outFile\">The output file full path</param>
            <param name=\"urlBase\">The URL base of the page</param>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.HTMLConvertAPI.ImgConverter.SaveImageFromHtmlStringToFileWithTempFile(System.String,System.Drawing.Imaging.ImageFormat,System.String)\">
            <summary>
            This method produces a image from the specified HTML string in the specified format
            and saves the image in the specified disk file by writing first the HTML string into a temporary file. 
            The existing file will be overwritten.
            </summary>
            <param name=\"htmlString\">The HTML string to be converted to image</param>
            <param name=\"format\">The output image format</param>
            <param name=\"outFile\">The output file full path</param>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.HTMLConvertAPI.ImgConverter.SaveImageFromHtmlStringToFileWithTempFile(System.String,System.Drawing.Imaging.ImageFormat,System.String,System.String)\">
            <summary>
            This method produces a image from the specified HTML string in the specified format
            and saves the image in the specified disk file by writing first the HTML string into a temporary file. 
            The existing file will be overwritten.
            </summary>
            <param name=\"htmlString\">The HTML string to be converted to image</param>
            <param name=\"format\">The output image format</param>
            <param name=\"outFile\">The output file full path</param>
            <param name=\"urlBase\">The URL base of the page</param>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.HTMLConvertAPI.ImgConverter.SaveImageFromHtmlStreamToFileWithTempFile(System.IO.Stream,System.Text.Encoding,System.Drawing.Imaging.ImageFormat,System.String)\">
            <summary>
            This method produces a image from the specified HTML stream in the specified format
            and saves the image in the specified disk file by writing first the HTML stream into a temporary file. 
            The existing file will be overwritten.
            </summary>
            <param name=\"htmlStream\">The HTML stream</param>
            <param name=\"streamEncoding\">The encoding of the HTML stream</param>
            <param name=\"format\">The output image format</param>
            <param name=\"outFile\">The output file full path</param>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.HTMLConvertAPI.ImgConverter.SaveImageFromHtmlStreamToFileWithTempFile(System.IO.Stream,System.Text.Encoding,System.Drawing.Imaging.ImageFormat,System.String,System.String)\">
            <summary>
            This method produces a image from the specified HTML stream in the specified format
            and saves the image in the specified disk file by writing first the HTML stream into a temporary file. 
            The existing file will be overwritten.
            </summary>
            <param name=\"htmlStream\">The HTML stream</param>
            <param name=\"streamEncoding\">The encoding of the HTML stream</param>
            <param name=\"format\">The output image format</param>
            <param name=\"outFile\">The output file full path</param>
            <param name=\"urlBase\">The URL base of the page</param>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HTMLConvertAPI.ImgConverter.xDf\">
            <summary>
            Internal use only
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HTMLConvertAPI.ImgConverter.InternalFileName\">
            <summary>
            Sets the full path of the helper file. 
            
            Note: This is used only by the WebKit rendering engine.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HTMLConvertAPI.ImgConverter.CacheFolder\">
            <summary>
            Use this property to enable caching of web requests. Sets the full path of the local cache folder. 
            
            Note: This is used only by the WebKit rendering engine.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HTMLConvertAPI.ImgConverter.RenderElementId\">
            <summary>
            Use this property to convert only a certain section of the page, specified by the html element ID.
            
            Note: This is used only by the WebKit rendering engine.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HTMLConvertAPI.ImgConverter.StartupMode\">
            <summary>
            Use this property to specify the converter startup mode. By default this is set to Automatic and the conversion is started as soon as the page loads (and ConversionDelay elapses). 
            If set to Manual, the conversion is started only by a javascript call to ExpertPdfJSObj.startConversion()
            
            Note: This is used only by the WebKit rendering engine.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HTMLConvertAPI.ImgConverter.StartupScript\">
            <summary>
            Use this property to specify some JavaScript code that will be injected into the page that is converted. The JavaScript code specified here will run before any other script on the page.
            
            Note: This is used only by the WebKit rendering engine.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HTMLConvertAPI.ImgConverter.RenderingEngine\">
            <summary>
            Gets or sets the rendering engine used by the converter to load and render the html. The possible values are WebKit and IE. 
            The Webkit rendering engine is internal and renders similar to Chrome and Safari. For IE, the component uses the IE engine from the machine.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HTMLConvertAPI.ImgConverter.PageWidth\">
            <summary>
            Gets or sets the web page width
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HTMLConvertAPI.ImgConverter.PageHeight\">
            <summary>
            Gets or sets the web page height. If the width was not set aswell, 
            this property has no effect
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HTMLConvertAPI.ImgConverter.ClipHtmlView\">
            <summary>
            If the HTML content is not entirely visible in the HTML viewer at the specified width, the ClipHtmlView property will control whether the 
            HTML content is clipped or the HTML viewer width is automatically extended to make visible the whole HTML content. 
            The HTML viewer width is given by the PageWidth property. 
            The default value of this property is false.
            
            Note: This is used only by the WebKit rendering engine.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HTMLConvertAPI.ImgConverter.BatchConversion\">
            <summary>
            Set this true when using the converter for batch conversion
            
            Note: This is used only by the IE rendering engine.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HTMLConvertAPI.ImgConverter.ScriptsEnabled\">
            <summary>
            Enable scripts when rendering HTML to image. 
            Default is true.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HTMLConvertAPI.ImgConverter.PluginsEnabled\">
            <summary>
            A flag indicating if plugins are enabled in converter. 
            The default is true.
            
            Note: This is used only by the WebKit rendering engine.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HTMLConvertAPI.ImgConverter.UseGlyphs\">
            <summary>
            A flag indicating if texts are rendered using glyphs or regular characters.
            The default is false and regular characters are used if possible. Glyphs are forced for special languages (such as right to left or Asian).
            
            Note: This is used only by the WebKit rendering engine.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HTMLConvertAPI.ImgConverter.RenderOnTimeout\">
            <summary>
            A flag indicating if the page is rendered even if a navigation timeout occurs. The default value is false and a navigation timeout exception is raised.
            
            Note: This is used only by the WebKit rendering engine.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HTMLConvertAPI.ImgConverter.ResizeImages\">
            <summary>
            A flag indicating if the images from the web page can be resized to optimize memory usage.
            
            Note: This is used only by the WebKit rendering engine.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HTMLConvertAPI.ImgConverter.UsePrintCSSMediaType\">
            <summary>
            A flag indicating if @media print css styles are used or not.
            The default is false and @media screen css styles are used.
            
            Note: This is used only by the WebKit rendering engine.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HTMLConvertAPI.ImgConverter.DrawTransparenciesThreshold\">
            <summary>
            Internal use. 
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HTMLConvertAPI.ImgConverter.SplitThreshold\">
            <summary>
            Internal use. 
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HTMLConvertAPI.ImgConverter.ActiveXEnabled\">
            <summary>
            Enable ActiveX controls when rendering HTML to image. 
            Default is true.
            
            Note: This is used only by the IE rendering engine.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HTMLConvertAPI.ImgConverter.BehaviorsEnabled\">
            <summary>
            Enable behaviors when rendering HTML to image. 
            Default is false.
            
            Note: This is used only by the IE rendering engine.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HTMLConvertAPI.ImgConverter.AddPadding\">
            <summary>
            Add padding at the end of the conversion result. 
            Default is false.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HTMLConvertAPI.ImgConverter.BinaryBehaviorsEnabled\">
            <summary>
            Internal use. 
            Default is false.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HTMLConvertAPI.ImgConverter.InternetSecurityZone\">
            <summary>
            Specifies the internet security zone settings used by the HTML converter to convert web sites.
            
            Note: This is used only by the IE rendering engine.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HTMLConvertAPI.ImgConverter.ProxyOptions\">
            <summary>
            Gets a reference to an object encapsulating the proxy options used to access the HTML document to convert.
            
            Note: This is used only by the WebKit rendering engine.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HTMLConvertAPI.ImgConverter.AuthenticationUsername\">
            <summary>
            Optionally set the Username property to authenticate to web server
            before accessing the URL to be converted (e.g handles any IIS authentication method)
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HTMLConvertAPI.ImgConverter.AuthenticationPassword\">
            <summary>
            Optionally set the Password property to authenticate to web server
            before accessing the URL to be converted (e.g handles any IIS authentication method)
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HTMLConvertAPI.ImgConverter.ConversionDelay\">
            <summary>
            An additional time in seconds to wait for asynchronous items to be loaded
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HTMLConvertAPI.ImgConverter.NavigationTimeout\">
            <summary>
            The navigation timeout in seconds. Default value is 60.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HTMLConvertAPI.ImgConverter.HttpCookies\">
            <summary>
            Gets a collection of custom HTTP cookies to be sent by the converter to the web server 
            when the web page to convert and the resources (image, css, etc) referenced by the web page are requested. A cookie is defined by a name and a value pair
            that can be added to the collection using the Add(string, string) method of the HttpCookies property.
            
            Note: This is used only by the WebKit rendering engine.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HTMLConvertAPI.ImgConverter.HttpHeaders\">
            <summary>
            Gets a collection of custom HTTP headers to be sent by the converter to the web server 
            when the web page is requested from a URL. A custom HTTP header is defined by a name and a value pair
            that can be added to the collection using the Add(string, string) method of the HttpHeaders property.
            The custom HTTP headers can be used to define cookies, authentication options, URL referer or any other
            HTTP header to be sent to the web browser. The preferred method to send cookies is to use the HttpCookies property.
            
            Note: This is used only by the WebKit rendering engine.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HTMLConvertAPI.ImgConverter.HttpRequestHeaders\">
            <summary>
            Gets or sets a string containing the HTTP headers sent by the convertor to the web server 
            when the web page is requested from a URL.
            The HTTP headers string can be used to define cookies, authentication options, URL referer or any other
            HTTP header to be sent to the web browser.
            
            Note: This is used only by the IE rendering engine.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HTMLConvertAPI.ImgConverter.SerializeLoadHtml\">
            <summary>
            A flag indicating if the download and execution of the HTML code is serialized
            when the converter is called simultaneously from multiple threads of an application.
            Default value is false.
            
            Note: This is used only by the IE rendering engine.
            </summary>
        </member>
        <member name=\"T:ExpertPdf.PdfCreator.HtmlConvertException\">
            <summary>
            An exception thrown when adding a HtmlToPdfElement
            </summary>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.HtmlConvertException.#ctor(System.String)\">
            <summary>
            Constructor
            </summary>
            <param name=\"message\">The exception message</param>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.HtmlConvertException.#ctor(System.String,System.Exception)\">
            <summary>
            Constructor
            </summary>
            <param name=\"message\">The exception message</param>
            <param name=\"innerException\">The inner exception that produced this exception</param>
        </member>
        <member name=\"T:ExpertPdf.PdfCreator.HtmlDocumentInfo\">
            <summary>
            This class encapsulates the information about a converted HTML document like 
            title, keywords and description.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlDocumentInfo.HtmlDocTitle\">
            <summary>
            The HTML document title or null if the document does not have a title.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlDocumentInfo.HtmlDocKeywords\">
            <summary>
            The HTML document keywords or null if the document does not have keywords.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlDocumentInfo.HtmlDocDescription\">
            <summary>
            The HTML document description or null if the document does not have a description.
            </summary>
        </member>
        <member name=\"T:ExpertPdf.PdfCreator.HtmlElementMapping\">
            <summary>
            Represents te mapping of a HTML element in the PDF document as collection of PDF 
            rectangles. A HTML element can span on many pages in the generated PDF document 
            and therefore, in general, many PDF rectangles are necessary to completely describe 
            the mapping of a HTML element in PDF.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlElementMapping.HtmlElementId\">
            <summary>
            The ID in HTML of the HTML element.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlElementMapping.PdfRectangles\">
            <summary>
            The rectangles occupied by the HTML element in the generated PDF document.
            A HTML element can span on many pages in the generated PDF document 
            and therefore, in general, many PDF rectangles are necessary to completely describe 
            the mapping of a HTML element in PDF.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlElementMapping.HtmlElementText\">
            <summary>
            The text of the HTML element. If the element does not have an
            associated text, this property returns null.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlElementMapping.HtmlElementOuterHtml\">
            <summary>
            The HTML code of the HTML element. 
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlElementMapping.HtmlElementTagName\">
            <summary>
            The HTML tag name of the HTML element. 
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlElementMapping.HtmlElementCssClassName\">
            <summary>
            The CSS class name of the HTML element. 
            </summary>
        </member>
        <member name=\"T:ExpertPdf.PdfCreator.HtmlElementMappingsCollection\">
            <summary>
            Represents a collection of mappings of HTML elements in PDF.
            </summary>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.HtmlElementMappingsCollection.GetEnumerator\">
            <summary>
            Gets the collection enumerator
            </summary>
            <returns>The collection enumerator</returns>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.HtmlElementMappingsCollection.GetElementByHtmlId(System.String)\">
            <summary>
            Gets the mapping in PDF of the HTML element with the specified HTML ID.
            The search is case insensitive. 
            </summary>
            <param name=\"htmlElementId\">The HTML ID of the element.</param>
            <returns>The mapping in PDF of the specified HTML element or null if no element 
            with the specified ID was found.</returns>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.HtmlElementMappingsCollection.GetElementsByTagName(System.String)\">
            <summary>
            Gets the mapping in PDF of the HTML elements with the specified HTML tag name.
            The search is case insensitive.
            </summary>
            <param name=\"htmlElementTagName\">The HTML tag name of the element.</param>
            <returns>The mappings in PDF of the specified HTML elements or null if no element 
            with the specified tag name was found.</returns>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlElementMappingsCollection.Item(System.Int32)\">
            <summary>
            Gets the mapping at the specified zero based index from collection.
            </summary>
            <param name=\"index\">The zero based index of the mapping.</param>
            <returns>The mapping at the specified index in collection. Returns null 
            if the index is out of collection bounds.</returns>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlElementMappingsCollection.Count\">
            <summary>
            Gets the number of mappings in collection.
            </summary>
        </member>
        <member name=\"T:ExpertPdf.PdfCreator.HtmlElementPdfRectangle\">
            <summary>
            Represents the rectangle occupied by a HTML element in a page of the generated PDF document.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlElementPdfRectangle.PageIndex\">
            <summary>
            The zero based index of the PDF page containing this rectangle. 
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlElementPdfRectangle.Rectangle\">
            <summary>
            The rectangle position inside the PDF page drawing area. The drawing area of the PDF page 
            does not include the page margins, header or footer. The rectangle dimensions are expressed 
            in points (1 point is 1/72 inch).
            </summary>
        </member>
        <member name=\"T:ExpertPdf.PdfCreator.HtmlElementsMappingOptions\">
            <summary>
            Defines the necessary API to retrieve the positions in the generated PDF document
            for the HTML elements specified in a list. The HTML elements are specified by their 
            unique HTML ID or HTML tag name.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlElementsMappingOptions.HtmlElementSelectors\">
            <summary>
            Gets or sets the selectors of the HTML elements to be bookmarked.
            For example, the selector for all the H1 elements is \"H1\", the selector for all the elements with the CSS class name 'myclass'
            is \"*.myclass\" and the selector for the elements with the id 'myid' is \"*#myid\".
            
            Note: This is used only by the WebKit rendering engine.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlElementsMappingOptions.HtmlElementIds\">
            <summary>
            This property is used to set an array containing the HTML IDs of the HTML elements for which
            to retrieve position in PDF. The HTML ID of a HTML element is given by its ID or NAME property in the 
            HTML document. The HTML IDs are case insensitive. If there are many HTML elements with the same HTML ID
            in the HTML document, only the first HTML element with that ID will be retrieved. 
            The elements mapping will be retrieved in the HtmlElementsMappingResult property after the HtmlToPdfElement was
            added to the PDF page.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlElementsMappingOptions.HtmlTagNames\">
            <summary>
            This property is used to set an array containing the HTML tag names of the HTML elements for which
            to retrieve position in PDF. The HTML tag names are case insensitive. 
            The elements mapping will be retrieved in the HtmlElementsMappingResult property after the HtmlToPdfElement was
            added to the PDF page.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlElementsMappingOptions.HtmlElementsMappingResult\">
            <summary>
            This property is set by the converter after conversion and returns the mapping of the HTML elements 
            specified by the HtmlElementIds and HtmlTagNames lists. 
            </summary>
        </member>
        <member name=\"T:ExpertPdf.PdfCreator.HtmlExcludedRegionsOptions\">
            <summary>
            Defines the necessary API to define a set of HTML regions to be excluded from conversion to PDF. 
            The HTML regions to be excluded are defined as HTML elements specified by their unique HTML ID or HTML tag name.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlExcludedRegionsOptions.HtmlElementSelectors\">
            <summary>
            Gets or sets the selectors of the HTML elements to be bookmarked.
            For example, the selector for all the H1 elements is \"H1\", the selector for all the elements with the CSS class name 'myclass'
            is \"*.myclass\" and the selector for the elements with the id 'myid' is \"*#myid\".
            
            Note: This is used only by the WebKit rendering engine.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlExcludedRegionsOptions.HtmlElementIds\">
            <summary>
            This property is used to set an array containing the HTML IDs of the HTML elements that will be excluded from conversion to PDF. 
            The HTML ID of a HTML element is given by its ID or NAME property in the 
            HTML document. The HTML IDs are case insensitive. If there are many HTML elements with the same HTML ID
            in the HTML document, only the first HTML element with that ID will be selected. 
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlExcludedRegionsOptions.HtmlTagNames\">
            <summary>
            This property is used to set an array containing the HTML tag names of the HTML elements that will be excluded from conversion to PDF. 
            The HTML tag names are case insensitive.
            </summary>
        </member>
        <member name=\"T:ExpertPdf.PdfCreator.HtmlToImageElement\">
            <summary>
            This class encapsulates a HTML to Image converter. The HTML to Image conversion is performed 
            when the element is added to a PDF page. The resulted image is embedded in the PDF document.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.HtmlToImageElement.DEFAULT_HTML_VIEWER_WIDTH_PX\">
            <summary>
            The default virtual browser width in pixels
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.HtmlToImageElement.AUTO_HTML_VIEWER_HEIGHT_PX\">
            <summary>
            The default virtual browser height in pixels is set to autodetect the HTML content height.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.HtmlToImageElement.AVAILABLE_PDF_WIDTH_POINTS\">
            <summary>
            The default width in PDF of the element is set to available width in PDF page.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.HtmlToImageElement.AUTO_PDF_HEIGHT_POINTS\">
            <summary>
            The default width in PDF of the element is set to available width in PDF page.
            </summary>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.HtmlToImageElement.#ctor(System.String,System.String)\">
            <summary>
            Creates a HTML string to image converter element that will be rendered at the (0,0) location in PDF page. 
            The width of element in PDF page is the available width in PDF page and the height is auto determined.
            </summary>
            <param name=\"htmlStringToConvert\">The HTML string convert to PDF.</param>
            <param name=\"htmlStringBaseURL\">The full URL of the page from where this string was taken used to resolve the images and CSS
            files referenced by a relative URL in the HTML string. This parameter is optional and the default value is NULL.
            When this parameter is NULL no base URL will be used. This paramter has effect only if the specified HTML string contains
            a HEAD element because a <BASE HREF=\"baseURL\"></BASE> will be inserted  automatically by the converter.</param>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.HtmlToImageElement.#ctor(System.String)\">
            <summary>
            Creates a URL to image converter element at the (0,0) location in PDF page.
            The width of element in PDF page is the available width in PDF page and the height is auto determined.
            </summary>
            <param name=\"urlToConvert\">The URL to convert to PDF</param>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.HtmlToImageElement.#ctor(System.Single,System.Single,System.String,System.String)\">
            <summary>
            Creates a HTML string to image converter element at the specified x and y coordinates in PDF page.
            The width of element in PDF page is the available width in PDF page and the height is auto determined.
            </summary>
            <param name=\"x\">The x position in points where the rendered content will be placed </param>
            <param name=\"y\">The y position in points where the rendered content will be placed
            the destination width will be given by the available width in page</param>
            <param name=\"htmlStringToConvert\">The HTML string convert to PDF.</param>
            <param name=\"htmlStringBaseURL\">The full URL of the page from where this string was taken used to resolve the images and CSS
            files referenced by a relative URL in the HTML string. This parameter is optional and the default value is NULL.
            When this parameter is NULL no base URL will be used. This paramter has effect only if the specified HTML string contains
            a HEAD element because a <BASE HREF=\"baseURL\"></BASE> will be inserted  automatically by the converter.</param>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.HtmlToImageElement.#ctor(System.Single,System.Single,System.String)\">
            <summary>
            Creates a URL to image converter element at the specified x and y coordinates in PDF page.
            The width of element in PDF page is the available width in PDF page and the height is auto determined.
            </summary>
            <param name=\"x\">The x position in points where the rendered content will be placed </param>
            <param name=\"y\">The y position in points where the rendered content will be placed
            the destination width will be given by the available width in page</param>
            <param name=\"urlToConvert\">The URL to convert to PDF</param>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.HtmlToImageElement.#ctor(System.Single,System.Single,System.Single,System.String,System.String)\">
            <summary>
            Creates a HTML string to image converter element at the specified x and y coordinates with the specified
            width. The height in PDF is auto determined.
            </summary>
            <param name=\"x\">The x position in points where the rendered content will be placed </param>
            <param name=\"y\">The y position in points where the rendered content will be placed</param>
            <param name=\"width\">The destination width in points  for the rendered content. If the specified with is less or equal 0,
            the destination width will be given by the available width in page</param>
            <param name=\"htmlStringToConvert\">The HTML string convert to PDF.</param>
            <param name=\"htmlStringBaseURL\">The full URL of the page from where this string was taken used to resolve the images and CSS
            files referenced by a relative URL in the HTML string. This parameter is optional and the default value is NULL.
            When this parameter is NULL no base URL will be used. This paramter has effect only if the specified HTML string contains
            a HEAD element because a <BASE HREF=\"baseURL\"></BASE> will be inserted  automatically by the converter.</param>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.HtmlToImageElement.#ctor(System.Single,System.Single,System.Single,System.String)\">
            <summary>
            Creates a URL to image converter element at the specified x and y coordinates with the specified
            width. The height in PDF is auto determined.
            </summary>
            <param name=\"x\">The x position in points where the rendered content will be placed </param>
            <param name=\"y\">The y position in points where the rendered content will be placed</param>
            <param name=\"width\">The destination width in points  for the rendered content. If the specified with is less or equal 0,
            the destination width will be given by the available width in page</param>
            <param name=\"urlToConvert\">The URL to convert to PDF</param>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.HtmlToImageElement.#ctor(System.Single,System.Single,System.Single,System.Single,System.String,System.String)\">
            <summary>
            Creates a HTML string to image converter element at the specified x and y coordinates with the specified
            width and height. 
            </summary>
            <param name=\"x\">The x position in points where the rendered content will be placed </param>
            <param name=\"y\">The y position in points where the rendered content will be placed</param>
            <param name=\"width\">The destination width in points  for the rendered content. If the specified with is less or equal 0,
            the destination width will be given by the available width in page</param>
            <param name=\"height\">The destination height in points  for the rendered content. If the specified height is less or equal 0,
            the destination height will be auto determined so all the content can be rendered. Please note that the specified height is 
            the effective height that will be rendered in the PDF document and does not include for example 
            the empty spaces introduced by custom or auomatic page breaks.</param>
            <param name=\"htmlStringToConvert\">The HTML string convert to PDF.</param>
            <param name=\"htmlStringBaseURL\">The full URL of the page from where this string was taken used to resolve the images and CSS
            files referenced by a relative URL in the HTML string. This parameter is optional and the default value is NULL.
            When this parameter is NULL no base URL will be used. This paramter has effect only if the specified HTML string contains
            a HEAD element because a <BASE HREF=\"baseURL\"></BASE> will be inserted  automatically by the converter.</param>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.HtmlToImageElement.#ctor(System.Single,System.Single,System.Single,System.Single,System.String)\">
            <summary>
            Creates a URL to image converter element at the specified x and y coordinates with the specified
            width and height. 
            </summary>
            <param name=\"x\">The x position in points where the rendered content will be placed </param>
            <param name=\"y\">The y position in points where the rendered content will be placed</param>
            <param name=\"width\">The destination width in points  for the rendered content. If the specified with is less or equal 0,
            the destination width will be given by the available width in page</param>
            <param name=\"height\">The destination height in points  for the rendered content. If the specified height is less or equal 0,
            the destination height will be auto determined so all the content can be rendered. Please note that the specified height is 
            the effective height that will be rendered in the PDF document and does not include for example 
            the empty spaces introduced by custom or auomatic page breaks.</param>
            <param name=\"urlToConvert\">The URL to convert to PDF</param>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.HtmlToImageElement.#ctor(System.Single,System.Single,System.Single,System.String,System.String,System.Int32)\">
            <summary>
            Create a HTML string to image converter element at the specified x and y coordinates with the specified
            width. The height in PDF is auto determined. The virtual browser width in pixels is specified by the htmlViewerWidth parameter.
            </summary>
            <param name=\"x\">The x position in points where the rendered content will be placed </param>
            <param name=\"y\">The y position in points where the rendered content will be placed</param>
            <param name=\"width\">The destination width in points  for the rendered content. If the specified with is less or equal 0,
            the destination width will be given by the available width in page</param>
            <param name=\"htmlStringToConvert\">The HTML string convert to PDF.</param>
            <param name=\"htmlStringBaseURL\">The full URL of the page from where this string was taken used to resolve the images and CSS
            files referenced by a relative URL in the HTML string. This parameter is optional and the default value is NULL.
            When this parameter is NULL no base URL will be used. This paramter has effect only if the specified HTML string contains
            a HEAD element because a <BASE HREF=\"baseURL\"></BASE> will be inserted  automatically by the converter.</param>
            <param name=\"htmlViewerWidth\">The virtual browser width in pixels. The default value is 1024 pixels. The effect of this parameter
            is similar with viewing the HTML page in a browser window with the specified width. When this parameter is less or equal 0, the
            converter will try to auto-determine the HTML page width from the body element width.</param>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.HtmlToImageElement.#ctor(System.Single,System.Single,System.Single,System.String,System.Int32)\">
            <summary>
            Creates a URL to image converter element at the specified x and y coordinates with the specified
            width. The height in PDF is auto determined. The virtual browser width in pixels is specified by the htmlViewerWidth parameter.
            </summary>
            <param name=\"x\">The x position in points where the rendered content will be placed </param>
            <param name=\"y\">The y position in points where the rendered content will be placed</param>
            <param name=\"width\">The destination width in points  for the rendered content. If the specified with is less or equal 0,
            the destination width will be given by the available width in page</param>
            <param name=\"urlToConvert\">The URL to convert to PDF</param>
            <param name=\"htmlViewerWidth\">The virtual browser width in pixels. The default value is 1024 pixels. The effect of this parameter
            is similar with viewing the HTML page in a browser window with the specified width. When this parameter is less or equal 0, the
            converter will try to auto-determine the HTML page width from the body element width.</param>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.HtmlToImageElement.#ctor(System.Single,System.Single,System.Single,System.Single,System.String,System.String,System.Int32,System.Int32)\">
            <summary>
            Creates a HTML string to image converter element at the specified x and y coordinates with the specified
            width and height. The virtual browser width and height in pixels is specified by 
            the htmlViewerWidth and htmlViewerHeight parameters.
            </summary>
            <param name=\"x\">The x position in points where the rendered content will be placed </param>
            <param name=\"y\">The y position in points where the rendered content will be placed</param>
            <param name=\"width\">The destination width in points  for the rendered content. If the specified with is less or equal 0,
            the destination width will be given by the available width in page</param>
            <param name=\"height\">The destination height in points  for the rendered content. If the specified height is less or equal 0,
            the destination height will be auto determined so all the content can be rendered. Please note that the specified height is 
            the effective height that will be rendered in the PDF document and does not include for example 
            the empty spaces introduced by custom or auomatic page breaks.</param>
            <param name=\"htmlStringToConvert\">The HTML string convert to PDF.</param>
            <param name=\"htmlStringBaseURL\">The full URL of the page from where this string was taken used to resolve the images and CSS
            files referenced by a relative URL in the HTML string. This parameter is optional and the default value is NULL.
            When this parameter is NULL no base URL will be used. This paramter has effect only if the specified HTML string contains
            a HEAD element because a <BASE HREF=\"baseURL\"></BASE> will be inserted  automatically by the converter.</param>
            <param name=\"htmlViewerWidth\">The virtual browser width in pixels. The default value is 1024 pixels. The effect of this parameter
            is similar with viewing the HTML page in a browser window with the specified width. When this parameter is less or equal 0, the
            converter will try to auto-determine the HTML page width from the body element width.</param>
            <param name=\"htmlViewerHeight\">The virtual browser height in pixels. The default value is 0 which means the height will
            be auto-determined. The effect of this parameter is similar with viewing the HTML page in a browser window `
            with the specified width and height. When this paramter is less or equal 0, the converter will try to auto-determine the 
            HTML page height from the body element height.</param>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.HtmlToImageElement.#ctor(System.Single,System.Single,System.Single,System.Single,System.String,System.String,System.String,System.Int32,System.Int32)\">
            <summary>
            Creates a HTML string to image converter element at the specified x and y coordinates with the specified
            width and height. The virtual browser width and height in pixels is specified by 
            the htmlViewerWidth and htmlViewerHeight parameters.
            </summary>
            <param name=\"x\">The x position in points where the rendered content will be placed </param>
            <param name=\"y\">The y position in points where the rendered content will be placed</param>
            <param name=\"width\">The destination width in points  for the rendered content. If the specified with is less or equal 0,
            the destination width will be given by the available width in page</param>
            <param name=\"height\">The destination height in points  for the rendered content. If the specified height is less or equal 0,
            the destination height will be auto determined so all the content can be rendered. Please note that the specified height is 
            the effective height that will be rendered in the PDF document and does not include for example 
            the empty spaces introduced by custom or auomatic page breaks.</param>
            <param name=\"htmlStringToConvert\">The HTML string convert to PDF.</param>
            <param name=\"htmlStringBaseURL\">The full URL of the page from where this string was taken used to resolve the images and CSS
            files referenced by a relative URL in the HTML string. This parameter is optional and the default value is NULL.
            When this parameter is NULL no base URL will be used. This paramter has effect only if the specified HTML string contains
            a HEAD element because a <BASE HREF=\"baseURL\"></BASE> will be inserted  automatically by the converter.</param>
            <param name=\"internalLinksDocUrl\">The full URL of the document referenced by the internal links from the HTML string. 
            </param>
            <param name=\"htmlViewerWidth\">The virtual browser width in pixels. The default value is 1024 pixels. The effect of this parameter
            is similar with viewing the HTML page in a browser window with the specified width. When this parameter is less or equal 0, the
            converter will try to auto-determine the HTML page width from the body element width.</param>
            <param name=\"htmlViewerHeight\">The virtual browser height in pixels. The default value is 0 which means the height will
            be auto-determined. The effect of this parameter is similar with viewing the HTML page in a browser window `
            with the specified width and height. When this paramter is less or equal 0, the converter will try to auto-determine the 
            HTML page height from the body element height.</param>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.HtmlToImageElement.#ctor(System.Single,System.Single,System.Single,System.Single,System.String,System.Int32,System.Int32)\">
            <summary>
            Create a URL to image converter element at the specified x and y coordinates with the specified
            width and height. The virtual browser width and height in pixels are specified by the 
            htmlViewerWidth and htmlViewerHeight paramenters.
            </summary>
            <param name=\"x\">The x position in points where the rendered content will be placed </param>
            <param name=\"y\">The y position in points where the rendered content will be placed</param>
            <param name=\"width\">The destination width in points  for the rendered content. If the specified with is less or equal 0,
            the destination width will be given by the available width in page</param>
            <param name=\"height\">The destination height in points  for the rendered content. If the specified height is less or equal 0,
            the destination height will be auto determined so all the content can be rendered. Please note that the specified height is 
            the effective height that will be rendered in the PDF document and does not include for example 
            the empty spaces introduced by custom or auomatic page breaks.</param>
            <param name=\"urlToConvert\">The URL to convert to PDF</param>
            <param name=\"htmlViewerWidth\">The virtual browser width in pixels. The default value is 1024 pixels. The effect of this parameter
            is similar with viewing the HTML page in a browser window with the specified width. When this parameter is less or equal 0, the
            converter will try to auto-determine the HTML page width from the body element width.</param>
            <param name=\"htmlViewerHeight\">The virtual browser height in pixels. The default value is 0 which means the height will
            be auto-determined. The effect of this parameter is similar with viewing the HTML page in a browser window `
            with the specified width and height. When this paramter is less or equal 0, the converter will try to auto-determine the 
            HTML page height from the body element height.</param>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.HtmlToImageElement.#ctor(System.Single,System.Single,System.Single,System.Single,System.String,System.Int32,System.Int32,System.String)\">
            <summary>
            Create a URL to image converter element at the specified x and y coordinates with the specified
            width and height. The virtual browser width and height in pixels are specified by the 
            htmlViewerWidth and htmlViewerHeight paramenters.
            </summary>
            <param name=\"x\">The x position in points where the rendered content will be placed </param>
            <param name=\"y\">The y position in points where the rendered content will be placed</param>
            <param name=\"width\">The destination width in points  for the rendered content. If the specified with is less or equal 0,
            the destination width will be given by the available width in page</param>
            <param name=\"height\">The destination height in points  for the rendered content. If the specified height is less or equal 0,
            the destination height will be auto determined so all the content can be rendered. Please note that the specified height is 
            the effective height that will be rendered in the PDF document and does not include for example 
            the empty spaces introduced by custom or auomatic page breaks.</param>
            <param name=\"urlToConvert\">The URL to convert to PDF</param>
            <param name=\"htmlViewerWidth\">The virtual browser width in pixels. The default value is 1024 pixels. The effect of this parameter
            is similar with viewing the HTML page in a browser window with the specified width. When this parameter is less or equal 0, the
            converter will try to auto-determine the HTML page width from the body element width.</param>
            <param name=\"htmlViewerHeight\">The virtual browser height in pixels. The default value is 0 which means the height will
            be auto-determined. The effect of this parameter is similar with viewing the HTML page in a browser window `
            with the specified width and height. When this paramter is less or equal 0, the converter will try to auto-determine the 
            HTML page height from the body element height.</param>
            <param name=\"internalLinksDocUrl\">The full URL of the document referenced by the internal links from the HTML document. This parameter 
            is necessary when the converted URL is not the full URL of a document.
            </param>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.HtmlToImageElement.GetImage\">
            <summary>
            Renders a System.Drawing.Image object from HTML 
            </summary>
            <returns>The rendered image object</returns>
        </member>
        <member name=\"E:ExpertPdf.PdfCreator.HtmlToImageElement.BeforeCreateNextPageEvent\">
            <summary>
            This event is raised when the next page is about to be created to continue rendering.
            The element rendering can be cancelled from the event handler of this event.
            </summary>
        </member>
        <member name=\"E:ExpertPdf.PdfCreator.HtmlToImageElement.BeforeRenderNextPageEvent\">
            <summary>
            This is event is raised before rendering the content on a page, including the intial page.
            The element rendering can be cancelled from the event handler of this event.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlToImageElement.HtmlViewerWidth\">
            <summary>
            Gets or sets the HTML viewer width in pixels
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlToImageElement.HtmlViewerHeight\">
            <summary>
            Gets or sets the HTML viewer height in pixels. If the viewer width was not set, 
            this property has no effect
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlToImageElement.ClipHtmlView\">
            <summary>
            If the HTML content is not entirely visible in the HTML viewer at the specified width, the ClipHtmlView property will control whether the 
            HTML content is clipped or the HTML viewer width is automatically extended to make visible the whole HTML content. 
            The HTML viewer width is given by the HtmlViewerWidth property. 
            The default value of this property is false.
            
            Note: This is used only by the WebKit rendering engine.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlToImageElement.InternalFileName\">
            <summary>
            Sets the full path of the helper file. 
            
            Note: This is used only by the WebKit rendering engine.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlToImageElement.CacheFolder\">
            <summary>
            Use this property to enable caching of web requests. Sets the full path of the local cache folder. 
            
            Note: This is used only by the WebKit rendering engine.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlToImageElement.RenderElementId\">
            <summary>
            Use this property to convert only a certain section of the page, specified by the html element ID.
            
            Note: This is used only by the WebKit rendering engine.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlToImageElement.StartupMode\">
            <summary>
            Use this property to specify the converter startup mode. By default this is set to Automatic and the conversion is started as soon as the page loads (and ConversionDelay elapses). 
            If set to Manual, the conversion is started only by a javascript call to ExpertPdfJSObj.startConversion()
            
            Note: This is used only by the WebKit rendering engine.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlToImageElement.StartupScript\">
            <summary>
            Use this property to specify some JavaScript code that will be injected into the page that is converted. The JavaScript code specified here will run before any other script on the page.
            
            Note: This is used only by the WebKit rendering engine.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlToImageElement.FitWidth\">
            <summary>
            When this property is true the resulted image will be resized if necessary to fit the available width in PDF page.
            When false the image will be rendered at the real size. By default this property is true and 
            the image will be resized if necessary to fit the available width in PDF page.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlToImageElement.FitHeight\">
            <summary>
            When this property is true the resulted image will be resized if necessary to fit the available height in PDF page.
            By default this property is false.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlToImageElement.StretchToFit\">
            <summary>
            This property has effect only when FitWidth property is true. When FitWidth is true and this property is true 
            the HTML content will be stretched if necessary to fit the available width in PDF page.
            By default this property is false and the content will not be stretched to fit the available width in PDF page. 
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlToImageElement.LiveUrlsEnabled\">
            <summary>
            When true this options instructs the converter to convert the HTML links in PDF links. 
            The default value is true.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlToImageElement.InternalLinksEnabled\">
            <summary>
            When true this options instructs the converter to convert the internal HTML links to internal PDF links. 
            The default value is true.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlToImageElement.BatchConversion\">
            <summary>
            Set this true when using the converter for batch conversion in a loop
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlToImageElement.ScriptsEnabled\">
            <summary>
            Enable scripts when rendering HTML to image. 
            Default is true.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlToImageElement.ActiveXEnabled\">
            <summary>
            Enable ActiveX controls when rendering HTML to image. 
            Default is true.
            
            Note: This is used only by the IE rendering engine.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlToImageElement.PluginsEnabled\">
            <summary>
            A flag indicating if plugins are enabled in converter. 
            The default is true.
            
            Note: This is used only by the WebKit rendering engine.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlToImageElement.BehaviorsEnabled\">
            <summary>
            Enable behaviors when rendering HTML to image. 
            Default is false.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlToImageElement.AddPadding\">
            <summary>
            Add padding at the end of the conversion result.
            Default is false.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlToImageElement.BinaryBehaviorsEnabled\">
            <summary>
            Internal use. 
            Default is false.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlToImageElement.InternetSecurityZone\">
            <summary>
            Specifies the internet security zone settings used by the HTML converter to convert web sites.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlToImageElement.Paginate\">
            <summary>
            When true the element can be paginated
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlToImageElement.ConversionDelay\">
            <summary>
            An additional time in seconds to wait for asynchronous items to be loaded
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlToImageElement.NavigationTimeout\">
            <summary>
            The navigation timeout in seconds. Default value is 60.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlToImageElement.HttpRequestHeaders\">
            <summary>
            Gets or sets a string containing the HTTP headers sent by the convertor to the web server 
            when the web page is requested from a URL.
            The HTTP headers string can be used to define cookies, authentication options, URL referer or any other
            HTTP header to be sent to the web browser.
            
            Note: This is used only by the IE rendering engine.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlToImageElement.HttpCookies\">
            <summary>
            Gets a collection of custom HTTP cookies to be sent by the converter to the web server 
            when the web page to convert and the resources (image, css, etc) referenced by the web page are requested. A cookie is defined by a name and a value pair
            that can be added to the collection using the Add(string, string) method of the HttpCookies property.
            
            Note: This is used only by the WebKit rendering engine.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlToImageElement.HttpHeaders\">
            <summary>
            Gets a collection of custom HTTP headers to be sent by the converter to the web server 
            when the web page is requested from a URL. A custom HTTP header is defined by a name and a value pair
            that can be added to the collection using the Add(string, string) method of the HttpHeaders property.
            The custom HTTP headers can be used to define cookies, authentication options, URL referer or any other
            HTTP header to be sent to the web browser. The preferred method to send cookies is to use the HttpCookies property.
            
            Note: This is used only by the WebKit rendering engine.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlToImageElement.ProxyOptions\">
            <summary>
            Gets a reference to an object encapsulating the proxy options used to access the HTML document to convert.
            
            Note: This is used only by the WebKit rendering engine.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlToImageElement.SerializeLoadHtml\">
            <summary>
            A flag indicating if the download and execution of the HTML code is serialized
            when the converter is called simultaneously from multiple threads of an application.
            Default value is false.
            
            Note: This is used only by the IE rendering engine.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlToImageElement.AuthenticationOptions\">
            <summary>
            Server authentication options (e.g IIS authentication)
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlToImageElement.ShowHeaderOnOddPages\">
            <summary>
            Show or not the document header on odd pages generated by this element. By default the header is displayed both on odd and even pages.
            The ShowHeaderTemplate property of the page to which this element is added has priority over ShowHeaderOnOddPages.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlToImageElement.ShowHeaderOnEvenPages\">
            <summary>
            Show or not the document header on even pages generated by this element. By default the header is displayed both on odd and even pages. 
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlToImageElement.ShowFooterOnOddPages\">
            <summary>
            Show or not the document footer on odd pages generated by this element. By default the footer is displayed both on odd and even pages.
            The ShowFooterTemplate property of the page to which this element is added has priority over ShowFooterOnOddPages.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlToImageElement.ShowFooterOnEvenPages\">
            <summary>
            Show or not the document footer on even pages generated by this element. By default the footer is displayed both on odd and even pages.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlToImageElement.RenderingEngine\">
            <summary>
            Gets or sets the rendering engine used by the converter to load and render the html. The possible values are WebKit and IE. 
            The Webkit rendering engine is internal and renders similar to Chrome and Safari. For IE, the component uses the IE engine from the machine.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlToImageElement.PdfBookmarkOptions\">
            <summary>
            Gets a reference to the object controlling the bookmarks creation for the rendered PDF document.
            In order to enable creation of bookmarks you have to set the TagNames property of PdfBookmarkOptions
            with the names of the HTML tags you want to bookmark.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlToImageElement.HtmlElementsMappingOptions\">
            <summary>
            Gets a reference to the object controlling the retrieval of HTML elements position in the generated PDF.
            In order to retrieve the position in PDF for a list of HTML elements, the HtmlElementIds property of 
            HtmlElementsMappingOptions must be set with an array of strings containing the HTML IDs of the HTML elements.
            The positions of the HTML elements in the generated PDF document will be returned in the 
            HtmlElementsMappingResult object after the element was added to the page.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlToImageElement.RenderedPagesRectangles\">
            <summary>
            The bounds of the rendered rectangle on each PDF page. This property is assigned
            after the element has been added to a PDF page.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlToImageElement.HtmlDocumentInfo\">
            <summary>
            Gets an object populated after conversion with the title, keywords, and description of the converted HTML document.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlToImageElement.SamplingEnabled\">
            <summary>
            Internal use only
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlToImageElement.OptimizeMemoryUsage\">
            <summary>
            When this property is true the library will try to release the unused memory as soon as possible.
            The default value is false.
            </summary>
        </member>
        <member name=\"T:ExpertPdf.PdfCreator.HtmlToPdfElement\">
            <summary>
            This class encapsulates a HTML to PDF converter. The HTML to PDF conversion is performed 
            when the element is added to a PDF page.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.HtmlToPdfElement.DEFAULT_HTML_VIEWER_WIDTH_PX\">
            <summary>
            The default virtual browser width in pixels
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.HtmlToPdfElement.AUTO_HTML_VIEWER_HEIGHT_PX\">
            <summary>
            The default virtual browser height in pixels is set to auto detect the HTML content height.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.HtmlToPdfElement.AVAILABLE_PDF_WIDTH_POINTS\">
            <summary>
            The default width in PDF of the element is set to available width in PDF page.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.HtmlToPdfElement.AUTO_PDF_HEIGHT_POINTS\">
            <summary>
            The default width in PDF of the element is set to available width in PDF page.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.HtmlToPdfElement.paginate\">
            <summary>
            When true the text can be paginated
            </summary>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.HtmlToPdfElement.#ctor(System.String,System.String)\">
            <summary>
            Creates a HTML string to PDF converter element that will be rendered at the (0,0) location in PDF page. 
            The width of element in PDF page is the available width in PDF page and the height is auto determined.
            </summary>
            <param name=\"htmlStringToConvert\">The HTML string convert to PDF.</param>
            <param name=\"htmlStringBaseURL\">The full URL of the page from where this string was taken used to resolve the images and CSS
            files referenced by a relative URL in the HTML string. This parameter is optional and the default value is NULL.
            When this parameter is NULL no base URL will be used. This paramter has effect only if the specified HTML string contains
            a HEAD element because a <BASE HREF=\"baseURL\"></BASE> will be inserted  automatically by the converter.</param>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.HtmlToPdfElement.#ctor(System.String,System.String,System.String)\">
            <summary>
            Creates a HTML string to PDF converter element that will be rendered at the (0,0) location in PDF page. 
            The width of element in PDF page is the available width in PDF page and the height is auto determined.
            </summary>
            <param name=\"htmlStringToConvert\">The HTML string convert to PDF.</param>
            <param name=\"htmlStringBaseURL\">The full URL of the page from where this string was taken used to resolve the images and CSS
            files referenced by a relative URL in the HTML string. This parameter is optional and the default value is NULL.
            When this parameter is NULL no base URL will be used. This paramter has effect only if the specified HTML string contains
            a HEAD element because a <BASE HREF=\"baseURL\"></BASE> will be inserted  automatically by the converter.</param>
            <param name=\"internalLinksDocUrl\">The full URL of the document referenced by the internal links from the HTML string. 
            </param>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.HtmlToPdfElement.#ctor(System.String)\">
            <summary>
            Creates a URL to PDF converter element at the (0,0) location in PDF page.
            The width of element in PDF page is the available width in PDF page and the height is auto determined.
            </summary>
            <param name=\"urlToConvert\">The URL to convert to PDF</param>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.HtmlToPdfElement.#ctor(System.Single,System.Single,System.String,System.String)\">
            <summary>
            Creates a HTML string to PDF converter element at the specified x and y coordinates in PDF page.
            The width of element in PDF page is the available width in PDF page and the height is auto determined.
            </summary>
            <param name=\"x\">The x position in points where the rendered content will be placed </param>
            <param name=\"y\">The y position in points where the rendered content will be placed
            the destination width will be given by the available width in page</param>
            <param name=\"htmlStringToConvert\">The HTML string convert to PDF.</param>
            <param name=\"htmlStringBaseURL\">The full URL of the page from where this string was taken used to resolve the images and CSS
            files referenced by a relative URL in the HTML string. This parameter is optional and the default value is NULL.
            When this parameter is NULL no base URL will be used. This paramter has effect only if the specified HTML string contains
            a HEAD element because a <BASE HREF=\"baseURL\"></BASE> will be inserted  automatically by the converter.</param>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.HtmlToPdfElement.#ctor(System.Single,System.Single,System.String,System.String,System.String)\">
            <summary>
            Creates a HTML string to PDF converter element at the specified x and y coordinates in PDF page.
            The width of element in PDF page is the available width in PDF page and the height is auto determined.
            </summary>
            <param name=\"x\">The x position in points where the rendered content will be placed </param>
            <param name=\"y\">The y position in points where the rendered content will be placed
            the destination width will be given by the available width in page</param>
            <param name=\"htmlStringToConvert\">The HTML string convert to PDF.</param>
            <param name=\"htmlStringBaseURL\">The full URL of the page from where this string was taken used to resolve the images and CSS
            files referenced by a relative URL in the HTML string. This parameter is optional and the default value is NULL.
            When this parameter is NULL no base URL will be used. This paramter has effect only if the specified HTML string contains
            a HEAD element because a <BASE HREF=\"baseURL\"></BASE> will be inserted  automatically by the converter.</param>
            <param name=\"internalLinksDocUrl\">The full URL of the document referenced by the internal links from the HTML string. 
            </param>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.HtmlToPdfElement.#ctor(System.Single,System.Single,System.String)\">
            <summary>
            Creates a URL to PDF converter element at the specified x and y coordinates in PDF page.
            The width of element in PDF page is the available width in PDF page and the height is auto determined.
            </summary>
            <param name=\"x\">The x position in points where the rendered content will be placed </param>
            <param name=\"y\">The y position in points where the rendered content will be placed
            the destination width will be given by the available width in page</param>
            <param name=\"urlToConvert\">The URL to convert to PDF</param>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.HtmlToPdfElement.#ctor(System.Single,System.Single,System.Single,System.String,System.String)\">
            <summary>
            Creates a HTML string to PDF converter element at the specified x and y coordinates with the specified
            width. The height in PDF is auto determined.
            </summary>
            <param name=\"x\">The x position in points where the rendered content will be placed </param>
            <param name=\"y\">The y position in points where the rendered content will be placed</param>
            <param name=\"width\">The destination width in points  for the rendered content. If the specified with is less or equal 0,
            the destination width will be given by the available width in page</param>
            <param name=\"htmlStringToConvert\">The HTML string convert to PDF.</param>
            <param name=\"htmlStringBaseURL\">The full URL of the page from where this string was taken used to resolve the images and CSS
            files referenced by a relative URL in the HTML string. This parameter is optional and the default value is NULL.
            When this parameter is NULL no base URL will be used. This paramter has effect only if the specified HTML string contains
            a HEAD element because a <BASE HREF=\"baseURL\"></BASE> will be inserted  automatically by the converter.</param>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.HtmlToPdfElement.#ctor(System.Single,System.Single,System.Single,System.String,System.String,System.String)\">
            <summary>
            Creates a HTML string to PDF converter element at the specified x and y coordinates with the specified
            width. The height in PDF is auto determined.
            </summary>
            <param name=\"x\">The x position in points where the rendered content will be placed </param>
            <param name=\"y\">The y position in points where the rendered content will be placed</param>
            <param name=\"width\">The destination width in points  for the rendered content. If the specified with is less or equal 0,
            the destination width will be given by the available width in page</param>
            <param name=\"htmlStringToConvert\">The HTML string convert to PDF.</param>
            <param name=\"htmlStringBaseURL\">The full URL of the page from where this string was taken used to resolve the images and CSS
            files referenced by a relative URL in the HTML string. This parameter is optional and the default value is NULL.
            When this parameter is NULL no base URL will be used. This paramter has effect only if the specified HTML string contains
            a HEAD element because a <BASE HREF=\"baseURL\"></BASE> will be inserted  automatically by the converter.</param>
            <param name=\"internalLinksDocUrl\">The full URL of the document referenced by the internal links from the HTML string. 
            </param>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.HtmlToPdfElement.#ctor(System.Single,System.Single,System.Single,System.String)\">
            <summary>
            Creates a URL to PDF converter element at the specified x and y coordinates with the specified
            width. The height in PDF is auto determined.
            </summary>
            <param name=\"x\">The x position in points where the rendered content will be placed </param>
            <param name=\"y\">The y position in points where the rendered content will be placed</param>
            <param name=\"width\">The destination width in points  for the rendered content. If the specified with is less or equal 0,
            the destination width will be given by the available width in page</param>
            <param name=\"urlToConvert\">The URL to convert to PDF</param>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.HtmlToPdfElement.#ctor(System.Single,System.Single,System.Single,System.Single,System.String,System.String)\">
            <summary>
            Creates a HTML string to PDF converter element at the specified x and y coordinates with the specified
            width and height. 
            </summary>
            <param name=\"x\">The x position in points where the rendered content will be placed </param>
            <param name=\"y\">The y position in points where the rendered content will be placed</param>
            <param name=\"width\">The destination width in points  for the rendered content. If the specified with is less or equal 0,
            the destination width will be given by the available width in page</param>
            <param name=\"height\">The destination height in points  for the rendered content. If the specified height is less or equal 0,
            the destination height will be auto determined so all the content can be rendered. Please note that the specified height is 
            the effective height that will be rendered in the PDF document and does not include for example 
            the empty spaces introduced by custom or auomatic page breaks.</param>
            <param name=\"htmlStringToConvert\">The HTML string convert to PDF.</param>
            <param name=\"htmlStringBaseURL\">The full URL of the page from where this string was taken used to resolve the images and CSS
            files referenced by a relative URL in the HTML string. This parameter is optional and the default value is NULL.
            When this parameter is NULL no base URL will be used. This paramter has effect only if the specified HTML string contains
            a HEAD element because a <BASE HREF=\"baseURL\"></BASE> will be inserted  automatically by the converter.</param>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.HtmlToPdfElement.#ctor(System.Single,System.Single,System.Single,System.Single,System.String,System.String,System.String)\">
            <summary>
            Creates a HTML string to PDF converter element at the specified x and y coordinates with the specified
            width and height. 
            </summary>
            <param name=\"x\">The x position in points where the rendered content will be placed </param>
            <param name=\"y\">The y position in points where the rendered content will be placed</param>
            <param name=\"width\">The destination width in points  for the rendered content. If the specified with is less or equal 0,
            the destination width will be given by the available width in page</param>
            <param name=\"height\">The destination height in points  for the rendered content. If the specified height is less or equal 0,
            the destination height will be auto determined so all the content can be rendered. Please note that the specified height is 
            the effective height that will be rendered in the PDF document and does not include for example 
            the empty spaces introduced by custom or auomatic page breaks.</param>
            <param name=\"htmlStringToConvert\">The HTML string convert to PDF.</param>
            <param name=\"htmlStringBaseURL\">The full URL of the page from where this string was taken used to resolve the images and CSS
            files referenced by a relative URL in the HTML string. This parameter is optional and the default value is NULL.
            When this parameter is NULL no base URL will be used. This paramter has effect only if the specified HTML string contains
            a HEAD element because a <BASE HREF=\"baseURL\"></BASE> will be inserted  automatically by the converter.</param>
            <param name=\"internalLinksDocUrl\">The full URL of the document referenced by the internal links from the HTML string. 
            </param>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.HtmlToPdfElement.#ctor(System.Single,System.Single,System.Single,System.Single,System.String)\">
            <summary>
            Creates a URL to PDF converter element at the specified x and y coordinates with the specified
            width and height. 
            </summary>
            <param name=\"x\">The x position in points where the rendered content will be placed </param>
            <param name=\"y\">The y position in points where the rendered content will be placed</param>
            <param name=\"width\">The destination width in points  for the rendered content. If the specified with is less or equal 0,
            the destination width will be given by the available width in page</param>
            <param name=\"height\">The destination height in points  for the rendered content. If the specified height is less or equal 0,
            the destination height will be auto determined so all the content can be rendered. Please note that the specified height is 
            the effective height that will be rendered in the PDF document and does not include for example 
            the empty spaces introduced by custom or auomatic page breaks.</param>
            <param name=\"urlToConvert\">The URL to convert to PDF</param>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.HtmlToPdfElement.#ctor(System.Single,System.Single,System.Single,System.String,System.String,System.Int32)\">
            <summary>
            Create a HTML string to PDF converter element at the specified x and y coordinates with the specified
            width. The height in PDF is auto determined. The virtual browser width in pixels is specified by the htmlViewerWidth parameter.
            </summary>
            <param name=\"x\">The x position in points where the rendered content will be placed </param>
            <param name=\"y\">The y position in points where the rendered content will be placed</param>
            <param name=\"width\">The destination width in points  for the rendered content. If the specified with is less or equal 0,
            the destination width will be given by the available width in page</param>
            <param name=\"htmlStringToConvert\">The HTML string convert to PDF.</param>
            <param name=\"htmlStringBaseURL\">The full URL of the page from where this string was taken used to resolve the images and CSS
            files referenced by a relative URL in the HTML string. This parameter is optional and the default value is NULL.
            When this parameter is NULL no base URL will be used. This paramter has effect only if the specified HTML string contains
            a HEAD element because a <BASE HREF=\"baseURL\"></BASE> will be inserted  automatically by the converter.</param>
            <param name=\"htmlViewerWidth\">The virtual browser width in pixels. The default value is 1024 pixels. The effect of this parameter
            is similar with viewing the HTML page in a browser window with the specified width. When this parameter is less or equal 0, the
            converter will try to auto-determine the HTML page width from the body element width.</param>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.HtmlToPdfElement.#ctor(System.Single,System.Single,System.Single,System.String,System.String,System.String,System.Int32)\">
            <summary>
            Create a HTML string to PDF converter element at the specified x and y coordinates with the specified
            width. The height in PDF is auto determined. The virtual browser width in pixels is specified by the htmlViewerWidth parameter.
            </summary>
            <param name=\"x\">The x position in points where the rendered content will be placed </param>
            <param name=\"y\">The y position in points where the rendered content will be placed</param>
            <param name=\"width\">The destination width in points  for the rendered content. If the specified with is less or equal 0,
            the destination width will be given by the available width in page</param>
            <param name=\"htmlStringToConvert\">The HTML string convert to PDF.</param>
            <param name=\"htmlStringBaseURL\">The full URL of the page from where this string was taken used to resolve the images and CSS
            files referenced by a relative URL in the HTML string. This parameter is optional and the default value is NULL.
            When this parameter is NULL no base URL will be used. This paramter has effect only if the specified HTML string contains
            a HEAD element because a <BASE HREF=\"baseURL\"></BASE> will be inserted  automatically by the converter.</param>
            <param name=\"internalLinksDocUrl\">The full URL of the document referenced by the internal links from the HTML string. 
            </param>
            <param name=\"htmlViewerWidth\">The virtual browser width in pixels. The default value is 1024 pixels. The effect of this parameter
            is similar with viewing the HTML page in a browser window with the specified width. When this parameter is less or equal 0, the
            converter will try to auto-determine the HTML page width from the body element width.</param>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.HtmlToPdfElement.#ctor(System.Single,System.Single,System.Single,System.String,System.Int32)\">
            <summary>
            Creates a URL to PDF converter element at the specified x and y coordinates with the specified
            width. The height in PDF is auto determined. The virtual browser width in pixels is specified by the htmlViewerWidth parameter.
            </summary>
            <param name=\"x\">The x position in points where the rendered content will be placed </param>
            <param name=\"y\">The y position in points where the rendered content will be placed</param>
            <param name=\"width\">The destination width in points  for the rendered content. If the specified with is less or equal 0,
            the destination width will be given by the available width in page</param>
            <param name=\"urlToConvert\">The URL to convert to PDF</param>
            <param name=\"htmlViewerWidth\">The virtual browser width in pixels. The default value is 1024 pixels. The effect of this parameter
            is similar with viewing the HTML page in a browser window with the specified width. When this parameter is less or equal 0, the
            converter will try to auto-determine the HTML page width from the body element width.</param>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.HtmlToPdfElement.#ctor(System.Single,System.Single,System.Single,System.Single,System.String,System.String,System.Int32,System.Int32)\">
            <summary>
            Creates a HTML string to PDF converter element at the specified x and y coordinates with the specified
            width and height. The virtual browser width and height in pixels is specified by 
            the htmlViewerWidth and htmlViewerHeight parameters.
            </summary>
            <param name=\"x\">The x position in points where the rendered content will be placed </param>
            <param name=\"y\">The y position in points where the rendered content will be placed</param>
            <param name=\"width\">The destination width in points  for the rendered content. If the specified with is less or equal 0,
            the destination width will be given by the available width in page</param>
            <param name=\"height\">The destination height in points  for the rendered content. If the specified height is less or equal 0,
            the destination height will be auto determined so all the content can be rendered. Please note that the specified height is 
            the effective height that will be rendered in the PDF document and does not include for example 
            the empty spaces introduced by custom or auomatic page breaks.</param>
            <param name=\"htmlStringToConvert\">The HTML string convert to PDF.</param>
            <param name=\"htmlStringBaseURL\">The full URL of the page from where this string was taken used to resolve the images and CSS
            files referenced by a relative URL in the HTML string. This parameter is optional and the default value is NULL.
            When this parameter is NULL no base URL will be used. This paramter has effect only if the specified HTML string contains
            a HEAD element because a <BASE HREF=\"baseURL\"></BASE> will be inserted  automatically by the converter.</param>
            <param name=\"htmlViewerWidth\">The virtual browser width in pixels. The default value is 1024 pixels. The effect of this parameter
            is similar with viewing the HTML page in a browser window with the specified width. When this parameter is less or equal 0, the
            converter will try to auto-determine the HTML page width from the body element width.</param>
            <param name=\"htmlViewerHeight\">The virtual browser height in pixels. The default value is 0 which means the height will
            be auto-determined. The effect of this parameter is similar with viewing the HTML page in a browser window `
            with the specified width and height. When this paramter is less or equal 0, the converter will try to auto-determine the 
            HTML page height from the body element height.</param>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.HtmlToPdfElement.#ctor(System.Single,System.Single,System.Single,System.Single,System.String,System.String,System.String,System.Int32,System.Int32)\">
            <summary>
            Creates a HTML string to PDF converter element at the specified x and y coordinates with the specified
            width and height. The virtual browser width and height in pixels is specified by 
            the htmlViewerWidth and htmlViewerHeight parameters.
            </summary>
            <param name=\"x\">The x position in points where the rendered content will be placed </param>
            <param name=\"y\">The y position in points where the rendered content will be placed</param>
            <param name=\"width\">The destination width in points  for the rendered content. If the specified with is less or equal 0,
            the destination width will be given by the available width in page</param>
            <param name=\"height\">The destination height in points  for the rendered content. If the specified height is less or equal 0,
            the destination height will be auto determined so all the content can be rendered. Please note that the specified height is 
            the effective height that will be rendered in the PDF document and does not include for example 
            the empty spaces introduced by custom or auomatic page breaks.</param>
            <param name=\"htmlStringToConvert\">The HTML string convert to PDF.</param>
            <param name=\"htmlStringBaseURL\">The full URL of the page from where this string was taken used to resolve the images and CSS
            files referenced by a relative URL in the HTML string. This parameter is optional and the default value is NULL.
            When this parameter is NULL no base URL will be used. This paramter has effect only if the specified HTML string contains
            a HEAD element because a <BASE HREF=\"baseURL\"></BASE> will be inserted  automatically by the converter.</param>
            <param name=\"internalLinksDocUrl\">The full URL of the document referenced by the internal links from the HTML string. 
            </param>
            <param name=\"htmlViewerWidth\">The virtual browser width in pixels. The default value is 1024 pixels. The effect of this parameter
            is similar with viewing the HTML page in a browser window with the specified width. When this parameter is less or equal 0, the
            converter will try to auto-determine the HTML page width from the body element width.</param>
            <param name=\"htmlViewerHeight\">The virtual browser height in pixels. The default value is 0 which means the height will
            be auto-determined. The effect of this parameter is similar with viewing the HTML page in a browser window `
            with the specified width and height. When this paramter is less or equal 0, the converter will try to auto-determine the 
            HTML page height from the body element height.</param>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.HtmlToPdfElement.#ctor(System.Single,System.Single,System.Single,System.Single,System.String,System.Int32,System.Int32)\">
            <summary>
            Create a URL to PDF converter element at the specified x and y coordinates with the specified
            width and height. The virtual browser width and height in pixels are specified by the 
            htmlViewerWidth and htmlViewerHeight paramenters.
            </summary>
            <param name=\"x\">The x position in points where the rendered content will be placed </param>
            <param name=\"y\">The y position in points where the rendered content will be placed</param>
            <param name=\"width\">The destination width in points  for the rendered content. If the specified with is less or equal 0,
            the destination width will be given by the available width in page</param>
            <param name=\"height\">The destination height in points  for the rendered content. If the specified height is less or equal 0,
            the destination height will be auto determined so all the content can be rendered. Please note that the specified height is 
            the effective height that will be rendered in the PDF document and does not include for example 
            the empty spaces introduced by custom or auomatic page breaks.</param>
            <param name=\"urlToConvert\">The URL to convert to PDF</param>
            <param name=\"htmlViewerWidth\">The virtual browser width in pixels. The default value is 1024 pixels. The effect of this parameter
            is similar with viewing the HTML page in a browser window with the specified width. When this parameter is less or equal 0, the
            converter will try to auto-determine the HTML page width from the body element width.</param>
            <param name=\"htmlViewerHeight\">The virtual browser height in pixels. The default value is 0 which means the height will
            be auto-determined. The effect of this parameter is similar with viewing the HTML page in a browser window `
            with the specified width and height. When this paramter is less or equal 0, the converter will try to auto-determine the 
            HTML page height from the body element height.</param>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.HtmlToPdfElement.#ctor(System.Single,System.Single,System.Single,System.Single,System.String,System.Int32,System.Int32,System.String)\">
            <summary>
            Create a URL to PDF converter element at the specified x and y coordinates with the specified
            width and height. The virtual browser width and height in pixels are specified by the 
            htmlViewerWidth and htmlViewerHeight paramenters.
            </summary>
            <param name=\"x\">The x position in points where the rendered content will be placed </param>
            <param name=\"y\">The y position in points where the rendered content will be placed</param>
            <param name=\"width\">The destination width in points  for the rendered content. If the specified with is less or equal 0,
            the destination width will be given by the available width in page</param>
            <param name=\"height\">The destination height in points  for the rendered content. If the specified height is less or equal 0,
            the destination height will be auto determined so all the content can be rendered. Please note that the specified height is 
            the effective height that will be rendered in the PDF document and does not include for example 
            the empty spaces introduced by custom or auomatic page breaks.</param>
            <param name=\"urlToConvert\">The URL to convert to PDF</param>
            <param name=\"htmlViewerWidth\">The virtual browser width in pixels. The default value is 1024 pixels. The effect of this parameter
            is similar with viewing the HTML page in a browser window with the specified width. When this parameter is less or equal 0, the
            converter will try to auto-determine the HTML page width from the body element width.</param>
            <param name=\"htmlViewerHeight\">The virtual browser height in pixels. The default value is 0 which means the height will
            be auto-determined. The effect of this parameter is similar with viewing the HTML page in a browser window `
            with the specified width and height. When this paramter is less or equal 0, the converter will try to auto-determine the 
            HTML page height from the body element height.</param>
            <param name=\"internalLinksDocUrl\">The full URL of the document referenced by the internal links from the HTML document. This parameter 
            is necessary when the converted URL is not the full URL of a document.
            </param>
        </member>
        <member name=\"E:ExpertPdf.PdfCreator.HtmlToPdfElement.BeforeCreateNextPageEvent\">
            <summary>
            This event is raised when the next page is about to be created to continue rendering.
            The element rendering can be canceled from the event handler of this event.
            </summary>
        </member>
        <member name=\"E:ExpertPdf.PdfCreator.HtmlToPdfElement.BeforeRenderNextPageEvent\">
            <summary>
            This is event is raised before rendering the content on a page, including the initial page.
            The element rendering can be canceled from the event handler of this event.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlToPdfElement.HtmlViewerWidth\">
            <summary>
            Gets or sets the HTML viewer width in pixels
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlToPdfElement.HtmlViewerHeight\">
            <summary>
            Gets or sets the HTML viewer height in pixels. If the viewer width was not set, 
            this property has no effect
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlToPdfElement.ClipHtmlView\">
            <summary>
            If the HTML content is not entirely visible in the HTML viewer at the specified width, the ClipHtmlView property will control whether the 
            HTML content is clipped or the HTML viewer width is automatically extended to make visible the whole HTML content. 
            The HTML viewer width is given by the HtmlViewerWidth property. 
            The default value of this property is false.
            
            Note: This is used only by the WebKit rendering engine.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlToPdfElement.InternalFileName\">
            <summary>
            Sets the full path of the helper file. 
            
            Note: This is used only by the WebKit rendering engine.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlToPdfElement.CacheFolder\">
            <summary>
            Use this property to enable caching of web requests. Sets the full path of the local cache folder. 
            
            Note: This is used only by the WebKit rendering engine.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlToPdfElement.RenderElementId\">
            <summary>
            Use this property to convert only a certain section of the page, specified by the html element ID.
            
            Note: This is used only by the WebKit rendering engine.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlToPdfElement.StartupMode\">
            <summary>
            Use this property to specify the converter startup mode. By default this is set to Automatic and the conversion is started as soon as the page loads (and ConversionDelay elapses). 
            If set to Manual, the conversion is started only by a javascript call to ExpertPdfJSObj.startConversion()
            
            Note: This is used only by the WebKit rendering engine.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlToPdfElement.StartupScript\">
            <summary>
            Use this property to specify some JavaScript code that will be injected into the page that is converted. The JavaScript code specified here will run before any other script on the page.
            
            Note: This is used only by the WebKit rendering engine.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlToPdfElement.UseFontTempFolder\">
            <summary>
            Use this property to specify if the web fonts are kept in memory or on the disk in a temporary file.
            
            Note: This is used only by the WebKit rendering engine.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlToPdfElement.FontTempFolder\">
            <summary>
            Use this property to specify the path where temporary font files are saved. If this is not specified, the system temporary folder is used.
            
            Note: This is used only by the WebKit rendering engine.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlToPdfElement.AvoidTextBreak\">
            <summary>
            When true this property instructs the converter to try to
            avoid cutting off the text between PDF pages
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlToPdfElement.AvoidImageBreak\">
            <summary>
            When true this property instructs the converter to try to
            avoid cutting off the images between PDF pages
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlToPdfElement.FitWidth\">
            <summary>
            When this property is true the HTML content will be resized if necessary to fit the available width in PDF page.
            When false the HTML content will be rendered at the real size. By default this property is true and 
            the content will be resized if necessary to fit the available width in PDF page.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlToPdfElement.FitHeight\">
            <summary>
            When this property is true the HTML content will be resized if necessary to fit the available height in PDF page.
            By default this property is false.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlToPdfElement.StretchToFit\">
            <summary>
            This property has effect only when FitWidth property is true. When FitWidth is true and this property is true 
            the HTML content will be stretched if necessary to fit the available width in PDF page.
            By default this property is false and the content will not be stretched to fit the available width in PDF page. 
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlToPdfElement.LiveUrlsEnabled\">
            <summary>
            When true this options instructs the converter to convert the HTML links in PDF links. 
            The default value is true.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlToPdfElement.InternalLinksEnabled\">
            <summary>
            When true this options instructs the converter to convert the internal HTML links to internal PDF links. 
            The default value is true.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlToPdfElement.AdjustBorderSize\">
            <summary>
            There are situations when a fraction of the right and bottom borders of an image or 
            table cell are overwritten by the image content or table cell background when the PDF document is viewed with Adobe Reader. 
            The AdjustBorderSize value is subtracted from the background width and height. 
            The default value is 0 points. 
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlToPdfElement.DrawBackground\">
            <summary>
            Gets or sets a flag indicating if the HTML page background is rendered in PDF.
            Default value is  true. Setting this property to false can make visible the existing
            PDF content behind this element.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlToPdfElement.BkgTransparency\">
            <summary>
            Modify background transparency. 0 means transparent, 100 means opaque.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlToPdfElement.ImgTransparency\">
            <summary>
            Modify images transparency. 0 means transparent, 100 means opaque.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlToPdfElement.AlphaBlendEnabled\">
            <summary>
            Enables or disables alpha blending for transparent images. Default is true.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlToPdfElement.MaskBltEnabled\">
            <summary>
            Enables or disables masking for transparent images. Default is true.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlToPdfElement.RightToLeftEnabled\">
            <summary>
            This property is obsolete. Setting this property is not necessary anymore when converting pages in 
            right-to-left languages like Hebrew or Arabic.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlToPdfElement.BatchConversion\">
            <summary>
            Set this true when using the converter for batch conversion in a loop
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlToPdfElement.ScriptsEnabled\">
            <summary>
            Enable scripts when rendering HTML to selectable PDF. 
            Default is true.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlToPdfElement.ScriptsEnabledInImage\">
            <summary>
            Enable scripts when rendering HTML to image. 
            Default is true.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlToPdfElement.ActiveXEnabled\">
            <summary>
            Enable ActiveX when rendering HTML to selectable PDF. 
            Default is false.
            
            Note: This is used only by the IE rendering engine.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlToPdfElement.ActiveXEnabledInImage\">
            <summary>
            Enable ActiveX when rendering HTML to image. 
            Default is true.
            
            Note: This is used only by the IE rendering engine.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlToPdfElement.PluginsEnabled\">
            <summary>
            A flag indicating if plugins are enabled in converter. 
            The default is true.
            
            Note: This is used only by the WebKit rendering engine.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlToPdfElement.UseGlyphs\">
            <summary>
            A flag indicating if texts are rendered using glyphs or regular characters.
            The default is false and regular characters are used if possible. Glyphs are forced for special languages (such as right to left or Asian).
            
            Note: This is used only by the WebKit rendering engine.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlToPdfElement.RenderOnTimeout\">
            <summary>
            A flag indicating if the page is rendered even if a navigation timeout occurs. The default value is false and a navigation timeout exception is raised.
            
            Note: This is used only by the WebKit rendering engine.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlToPdfElement.ResizeImages\">
            <summary>
            A flag indicating if the images from the web page can be resized to optimize memory usage.
            
            Note: This is used only by the WebKit rendering engine.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlToPdfElement.UsePrintCSSMediaType\">
            <summary>
            A flag indicating if @media print css styles are used or not.
            The default is false and @media screen css styles are used.
            
            Note: This is used only by the WebKit rendering engine.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlToPdfElement.DrawTransparenciesThreshold\">
            <summary>
            Internal use. 
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlToPdfElement.SplitThreshold\">
            <summary>
            Internal use. 
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlToPdfElement.BehaviorsEnabled\">
            <summary>
            Enable behaviors when rendering HTML to image. 
            Default is false.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlToPdfElement.AddPadding\">
            <summary>
            Add padding at the end of the conversion result.
            Default is false.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlToPdfElement.BinaryBehaviorsEnabled\">
            <summary>
            Internal use. 
            Default is false.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlToPdfElement.InternetSecurityZone\">
            <summary>
            Specifies the internet security zone settings used by the HTML converter to convert web sites.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlToPdfElement.ExternalSampling\">
            <summary>
            Internal use only
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlToPdfElement.SamplingEnabled\">
            <summary>
            Internal use only
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlToPdfElement.SamplingModeAuto\">
            <summary>
            Internal use only
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlToPdfElement.SampleHtmlString\">
            <summary>
            Internal use only
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlToPdfElement.TruncateOutOfBoundsText\">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlToPdfElement.DrawTextInsideRectangle\">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlToPdfElement.OptimizePdfPageBreaks\">
            <summary>
            A flag indicating if the converter uses an optimized page breaks algorithm to improve 
            document scrolling inside a PDF Viewer. The optimized algorithm can introduce a small 
            additional processing time when the PDF document is generated.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlToPdfElement.OptimizeMemoryUsage\">
            <summary>
            When this property is true the library will try to release the unused memory as soon as possible.
            The default value is false.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlToPdfElement.Paginate\">
            <summary>
            When true the element can be paginated
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlToPdfElement.EmbedFonts\">
            <summary>
            When true this options instructs the converter to embed all the true type fonts into the PDF document. 
            The default value is false.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlToPdfElement.ConversionDelay\">
            <summary>
            An additional time in seconds to wait for asynchronous items to be loaded
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlToPdfElement.NavigationTimeout\">
            <summary>
            The navigation timeout in seconds. Default value is 60.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlToPdfElement.HttpRequestHeaders\">
            <summary>
            Gets or sets a string containing the HTTP headers sent by the convertor to the web server 
            when the web page is requested from a URL.
            The HTTP headers string can be used to define cookies, authentication options, URL referer or any other
            HTTP header to be sent to the web browser.
            
            Note: This is used only by the IE rendering engine.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlToPdfElement.HttpCookies\">
            <summary>
            Gets a collection of custom HTTP cookies to be sent by the converter to the web server 
            when the web page to convert and the resources (image, css, etc) referenced by the web page are requested. A cookie is defined by a name and a value pair
            that can be added to the collection using the Add(string, string) method of the HttpCookies property.
            
            Note: This is used only by the WebKit rendering engine.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlToPdfElement.HttpHeaders\">
            <summary>
            Gets a collection of custom HTTP headers to be sent by the converter to the web server 
            when the web page is requested from a URL. A custom HTTP header is defined by a name and a value pair
            that can be added to the collection using the Add(string, string) method of the HttpHeaders property.
            The custom HTTP headers can be used to define cookies, authentication options, URL referer or any other
            HTTP header to be sent to the web browser. The preferred method to send cookies is to use the HttpCookies property.
            
            Note: This is used only by the WebKit rendering engine.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlToPdfElement.ProxyOptions\">
            <summary>
            Gets a reference to an object encapsulating the proxy options used to access the HTML document to convert.
            
            Note: This is used only by the WebKit rendering engine.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlToPdfElement.AuthenticationOptions\">
            <summary>
            Server authentication options (e.g IIS authentication)
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlToPdfElement.ShowHeaderOnOddPages\">
            <summary>
            Show or not the document header on odd pages generated by this element. By default the header is displayed both on odd and even pages.
            The ShowHeaderTemplate property of the page to which this element is added has priority over ShowHeaderOnOddPages.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlToPdfElement.ShowHeaderOnEvenPages\">
            <summary>
            Show or not the document header on even pages generated by this element. By default the header is displayed both on odd and even pages. 
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlToPdfElement.ShowFooterOnOddPages\">
            <summary>
            Show or not the document footer on odd pages generated by this element. By default the footer is displayed both on odd and even pages.
            The ShowFooterTemplate property of the page to which this element is added has priority over ShowFooterOnOddPages.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlToPdfElement.ShowFooterOnEvenPages\">
            <summary>
            Show or not the document footer on even pages generated by this element. By default the footer is displayed both on odd and even pages.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlToPdfElement.RenderingEngine\">
            <summary>
            Gets or sets the rendering engine used by the converter to load and render the html. The possible values are WebKit and IE. 
            The Webkit rendering engine is internal and renders similar to Chrome and Safari. For IE, the component uses the IE engine from the machine.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlToPdfElement.PdfBookmarkOptions\">
            <summary>
            Gets a reference to the object controlling the bookmarks creation for the rendered PDF document.
            In order to enable creation of bookmarks you have to set the TagNames property of PdfBookmarkOptions
            with the names of the HTML tags you want to bookmark.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlToPdfElement.HtmlElementsMappingOptions\">
            <summary>
            Gets a reference to the object controlling the retrieval of HTML elements position in the generated PDF.
            In order to retrieve the position in PDF for a list of HTML elements, the HtmlElementIds and HtmlTagNames properties of 
            HtmlElementsMappingOptions must be set with an array of strings containing the HTML IDs and tag names of the HTML elements.
            The positions of the HTML elements in the generated PDF document will be returned in the 
            HtmlElementsMappingResult object after the element was added to the page.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlToPdfElement.HtmlExcludedRegionsOptions\">
            <summary>
            Gets a reference to the object controlling the exclusion of HTML elements from rendering to PDF.
            In order to exclude from PDF for a list of HTML elements, the HtmlElementIds and HtmlTagNames properties of 
            HtmlExcludedRegionsOptions must be set with an array of strings containing the HTML IDs or tag names 
            of the HTML elements excluded from conversion to PDF.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlToPdfElement.RenderedPagesRectangles\">
            <summary>
            The bounds of the rendered rectangle on each PDF page. This property is assigned
            after the element has been added to a PDF page.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlToPdfElement.HtmlDocumentInfo\">
            <summary>
            Gets an object populated after conversion with the title, keywords, and description of the converted HTML document.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlToPdfElement.LayoutHtmlTimeoutSec\">
            <summary>
            This static parameter gives the maximum time in seconds necessary to layout a HTML document. The default value is 10 minutes.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlToPdfElement.LoadHtmlConcurrencyLevel\">
            <summary>
            This static parameter gives the maximum number of threads in the current process that can download and execute HTML documents simultaneously. 
            This parameter must be set before the first conversion performed in the current process. 
            When this parameter is 0 or negative and SerializeLoadHtml is false the concurrency level is the maximum value. 
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.HtmlToPdfElement.SerializeLoadHtml\">
            <summary>
            This static flag indicates if the download and execution of the HTML code is serialized when the converter is called simultaneously from multiple threads of an application. 
            This parameter must be set before the first conversion performed in the current process. Default value is false.
            </summary>
        </member>
        <member name=\"T:ExpertPdf.PdfCreator.ImageElement\">
            <summary>
            Represents a PDF image element
            </summary>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.ImageElement.#ctor(System.Single,System.Single,System.String)\">
            <summary>
            Creates an ImageElement from the specified file that will be rendered at the position (x,y)
            with the width equal to available width in page and the height auto determined to keep the initial aspect ratio.
            </summary>
            <param name=\"x\">The X location where this element will be rendered</param>
            <param name=\"y\">The Y location where this element will be rendered</param>
            <param name=\"filePath\">The image file path</param>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.ImageElement.#ctor(System.Single,System.Single,System.Single,System.String)\">
            <summary>
            Creates an ImageElement from the specified file that will be rendered at the position (x,y)
            with the specified width destWidth and the height auto determined to keep the initial aspect ratio.
            </summary>
            <param name=\"x\">The X location where this element will be rendered</param>
            <param name=\"y\">The Y location where this element will be rendered</param>
            <param name=\"destWidth\">The destination rectangle width</param>
            <param name=\"filePath\">The image file path</param>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.ImageElement.#ctor(System.Single,System.Single,System.Drawing.Image)\">
            <summary>
            Creates an ImageElement from the specified System.Drawing.Image object that will be rendered at the position (x,y)
            with a width equal to the available space in page and the height auto determined to keep the aspect ratio.
            </summary>
            <param name=\"x\">The X location where this element will be rendered</param>
            <param name=\"y\">The Y location where this element will be rendered</param>
            <param name=\"imageObj\">The image file path</param>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.ImageElement.#ctor(System.Single,System.Single,System.Single,System.Drawing.Image)\">
            <summary>
            Creates an ImageElement from the specified System.Drawing.Image object that will be rendered at the position (x,y)
            with the specified width destWidth and the height auto determined to keep the aspect ratio.
            </summary>
            <param name=\"x\">The X location where this element will be rendered</param>
            <param name=\"y\">The Y location where this element will be rendered</param>
            <param name=\"destWidth\">The destination rectangle width</param>
            <param name=\"imageObj\">The image file path</param>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.ImageElement.#ctor(System.Single,System.Single,System.Single,System.Single,System.String)\">
            <summary>
            Creates an ImageElement from the specified file that will be rendered at the position (x,y)
            with the (destWidth,destHeight) size.
            </summary>
            <param name=\"x\">The X location where this element will be rendered</param>
            <param name=\"y\">The Y location where this element will be rendered</param>
            <param name=\"destWidth\">The destination rectangle width</param>
            <param name=\"destHeight\">The destination rectangle height</param>
            <param name=\"filePath\">The image file path</param>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.ImageElement.#ctor(System.Single,System.Single,System.Single,System.Single,System.Drawing.Image)\">
            <summary>
            Creates an ImageElement from the specified System.Drawing.Image object that will be rendered at the position (x,y)
            with the (destWidth,destHeight) size.
            </summary>
            <param name=\"x\">The X location where this element will be rendered</param>
            <param name=\"y\">The Y location where this element will be rendered</param>
            <param name=\"destWidth\">The destination rectangle width</param>
            <param name=\"destHeight\">The destination rectangle height</param>
            <param name=\"imageObj\">The System.Drawing.Image object</param>
        </member>
        <member name=\"E:ExpertPdf.PdfCreator.ImageElement.BeforeCreateNextPageEvent\">
            <summary>
            This event is raised when the next page is about to be created to continue rendering.
            The element rendering can be cancelled from the event handler of this event.
            </summary>
        </member>
        <member name=\"E:ExpertPdf.PdfCreator.ImageElement.BeforeRenderNextPageEvent\">
            <summary>
            This is event is raised before rendering the content on a page, including the intial page.
            The element rendering can be cancelled from the event handler of this event.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.ImageElement.XLocation\">
            <summary>
            Gets or sets the image location on X
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.ImageElement.YLocation\">
            <summary>
            Gets or sets the image location on Y
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.ImageElement.DestWidth\">
            <summary>
            Gets or sets the image destination width
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.ImageElement.DestHeight\">
            <summary>
            Gets or sets the image destination height
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.ImageElement.Paginate\">
            <summary>
            When true the element can be paginated
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.ImageElement.RenderMultiFrame\">
            <summary>
            Set this property to enable/disable multi-frame images rendering when necessary
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.ImageElement.RenderTransparentImage\">
            <summary>
            A flag indicating if the image alpha transparency information is used when the image is rendered in PDF.
            The default value is true. Set this property to true to use transparency information from the transparent 
            PNG images and bitmap images with alpha channel when the image is rendered in PDF.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.ImageElement.ImageObj\">
            <summary>
            Gets the underlying image object
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.ImageElement.ImageWidth\">
            <summary>
            Gets the underlying image width.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.ImageElement.ImageHeight\">
            <summary>
            Gets the underlying image height.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.ImageElement.ImageFrameCount\">
            <summary>
            Gets the number of frames of a multi-frame image (eg. tiff image).
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.ImageElement.ImageActiveFrame\">
            <summary>
            Gets or sets the active frame number of a multi-frame image (e.g tiff image).
            </summary>
        </member>
        <member name=\"T:ExpertPdf.PdfCreator.InternalLinkElement\">
            <summary>
            Represents a text link in the PDF document
            </summary>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.InternalLinkElement.#ctor(System.Drawing.RectangleF,ExpertPdf.PdfCreator.ExplicitDestination)\">
            <summary>
            Constructs an PDF internal link element
            </summary>
            <param name=\"linkRectangle\">The link rectangle in page</param>
            <param name=\"linkDestination\">The link destination</param>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.InternalLinkElement.LinkRectangle\">
            <summary>
            Gets or sets the link rectangle in page
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.InternalLinkElement.LinkDestination\">
            <summary>
            Gets or sets the link destination
            </summary>
        </member>
        <member name=\"T:ExpertPdf.PdfCreator.InternetSecurityZone\">
            <summary>
            Specifies the internet security zone settings used by the HTML converter to convert web sites.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.InternetSecurityZone.Default\">
            <summary>
            Use the default autodetected security zone.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.InternetSecurityZone.LocalMachine\">
            <summary>
            Use the Local Machine security zone settings.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.InternetSecurityZone.Intranet\">
            <summary>
            Use the Intranet security zone settings.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.InternetSecurityZone.Trusted\">
            <summary>
            Use the Trusted security zone settings.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.InternetSecurityZone.Internet\">
            <summary>
            Use the Internet security zone settings.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.InternetSecurityZone.Untrusted\">
            <summary>
            Use the Untrsuted security zone settings.
            </summary>
        </member>
        <member name=\"T:ExpertPdf.PdfCreator.LicensingManager\">
            <summary>
            This class offers the interface for setting the license key
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.LicensingManager.LicenseKey\">
            <summary>
            Set this property with a valid license key string to unlock the product
            </summary>
        </member>
        <member name=\"T:ExpertPdf.PdfCreator.LineCapStyle\">
            <summary>
            The line cap style
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.LineCapStyle.Default\">
            <summary>
            Default line cap style.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.LineCapStyle.ButtCap\">
            <summary>
            The stroke is squared off at the endpoint of the path. There is no
            projection beyond the end of the path.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.LineCapStyle.RoundCap\">
            <summary>
            A semicircular arc with a diameter equal to the line width is
            drawn around the endpoint and filled in.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.LineCapStyle.ProjectingSquareCap\">
            <summary>
            The stroke continues beyond the endpoint of the path
            for a distance equal to half the line width and is then squared off.
            </summary>
        </member>
        <member name=\"T:ExpertPdf.PdfCreator.LineDashStyle\">
            <summary>
            Specifies the style of a dashed line.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.LineDashStyle.Default\">
            <summary>
            Default dash style
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.LineDashStyle.Solid\">
            <summary>
            Specifies a solid line
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.LineDashStyle.Dash\">
            <summary>
            Specifies a line consisting of dashes.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.LineDashStyle.Dot\">
            <summary>
            Specifies a line consisting of dots.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.LineDashStyle.DashDot\">
            <summary>
            Specifies a line consisting of a repeating pattern of dash-dot.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.LineDashStyle.DashDotDot\">
            <summary>
            Specifies a line consisting of a repeating pattern of dash-dot-dot.
            </summary>
        </member>
        <member name=\"T:ExpertPdf.PdfCreator.LineElement\">
            <summary>
            This class represents a line
            </summary>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.LineElement.#ctor(System.Single,System.Single,System.Single,System.Single)\">
            <summary>
            Constructs a line element 
            </summary>
            <param name=\"startX\">The start X coordinate</param>
            <param name=\"startY\">The start Y coordinate</param>
            <param name=\"endX\">The end X coordinate</param>
            <param name=\"endY\">The end Y coordinate</param>
        </member>
        <member name=\"T:ExpertPdf.PdfCreator.LineJoinStyle\">
            <summary>
            Line join style
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.LineJoinStyle.Default\">
            <summary>
            Default line join style.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.LineJoinStyle.MitterJoin\">
            <summary>
            The outer edges of the strokes for the two segments are extended until they meet at an angle,
            as in a picture frame. If the segments meet at too sharp an angle (as defined by the miter limit
            parameter— see \"Miter Limit\"), a bevel join is used instead.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.LineJoinStyle.RoundJoin\">
            <summary>
            An arc of a circle with a diameter equal to the line width is drawn around the point
            where the two segments meet, connecting the outer edges of the strokes for the two segments.
            This pie slice-shaped figure is filled in, producing a rounded corner.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.LineJoinStyle.BevelJoin\">
            <summary>
            The two segments are finished with caps (see \"Line Cap Style\")
            and the resulting notch beyond the ends of the segments is filled with a triangle.
            </summary>
        </member>
        <member name=\"T:ExpertPdf.PdfCreator.LineStyle\">
            <summary>
            The line style for a graphic element which draws lines
            </summary>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.LineStyle.#ctor\">
            <summary>
            Constructs a default line style
            </summary>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.LineStyle.#ctor(System.Single)\">
            <summary>
            Constructs a line style with the specified line width
            </summary>
            <param name=\"lineWidth\">The line width</param>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.LineStyle.#ctor(ExpertPdf.PdfCreator.LineDashStyle)\">
            <summary>
            Constructs a style for a dashed line
            </summary>
            <param name=\"lineDashStyle\">The dash style</param>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.LineStyle.#ctor(System.Single,ExpertPdf.PdfCreator.LineDashStyle)\">
            <summary>
            Constructs a style for a dashed line
            </summary>
            <param name=\"lineWidth\">The line width</param>
            <param name=\"lineDashStyle\">The dash style</param>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.LineStyle.#ctor(System.Single,ExpertPdf.PdfCreator.LineCapStyle,ExpertPdf.PdfCreator.LineJoinStyle)\">
            <summary>
            Constructs a style for a line with the specified width, cap and join styles
            </summary>
            <param name=\"lineWidth\">The line width in graphic units</param>
            <param name=\"lineCapStyle\">The line cap style</param>
            <param name=\"lineJoinStyle\">The line join style</param>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.LineStyle.LineWidth\">
            <summary>
            The line width
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.LineStyle.LineCapStyle\">
            <summary>
            Gets or sets the line cap style
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.LineStyle.LineJoinStyle\">
            <summary>
            Gets or sets the line join style
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.LineStyle.LineDashStyle\">
            <summary>
            Gets or sets the line dash pattern
            </summary>
        </member>
        <member name=\"T:ExpertPdf.PdfCreator.Margins\">
            <summary>
            Represents a PDF page mergins
            </summary>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.Margins.#ctor\">
            <summary>
            Initializes all margins with 0
            </summary>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.Margins.#ctor(System.Single)\">
            <summary>
            Initializes all margins with the same value
            </summary>
            <param name=\"all\">The value for all document margins.</param>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.Margins.#ctor(System.Single,System.Single,System.Single,System.Single)\">
            <summary>
            Default constructor initializes with 0 all the margins
            </summary>
            <param name=\"left\">The left margin</param>
            <param name=\"right\">The right margin</param>
            <param name=\"top\">The top margin</param>
            <param name=\"bottom\">The ottom margin</param>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.Margins.Empty\">
            <summary>
            Empty margins object
            </summary>
        </member>
        <member name=\"T:ExpertPdf.PdfCreator.MergePdf\">
            <summary>
            This class offers the necessary interfaces to merge PDF files and streams
            </summary>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.MergePdf.Merge(System.String[],System.String)\">
            <summary>
            Merges the specified PDF files into a PDF file on disk.
            </summary>
            <param name=\"srcPdfFilePaths\">The PDF files to be merged.</param>
            <param name=\"destFilePath\">The path to the PDF file resulted after merge.</param>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.MergePdf.Merge(System.IO.Stream[],System.IO.Stream)\">
            <summary>
            Merges the specified PDF streams into a PDF stream.
            </summary>
            <param name=\"destPdfStream\">The stream to receive the PDF document resulted after the merge.</param>
            <param name=\"srcPdfStreams\">The PDF streams to be merged.</param>
        </member>
        <member name=\"T:ExpertPdf.PdfCreator.PageCollection\">
            <summary>
            Represents a collection of pages of a document.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.PageCollection.document\">
            <summary>
            The parent PDF Document.
            </summary>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.PageCollection.#ctor(ExpertPdf.PdfCreator.Document)\">
            <summary>
            Creates a collection of pages for this document.
            </summary>
            <param name=\"document\">The PDF document for which this collection is created.</param>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.PageCollection.GetEnumerator\">
            <summary>
            Gets the collection enumerator.
            </summary>
            <returns>The collection enumerator.</returns>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.PageCollection.AddNewPage\">
            <summary>
            Creates a new PDF page and adds it to the collection. If there is a previous page in the
            collection, the orientation and size are inherited from the that page otherwise a first page with
            the default A4 size and Portrait orientation is created. The page margins are inherited from the
            default document margins.
            </summary>
            <returns>The newly created PDF page.</returns>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.PageCollection.AddNewPage(ExpertPdf.PdfCreator.Margins)\">
            <summary>
            Creates a new PDF page and adds it to the collection. If there is a previous page in the
            collection, the orientation and size are inherited from the that page otherwise a first page with
            the default A4 size and Portrait orientation is created.
            </summary>
            <param name=\"pageMargins\">The PDF page margins.</param>
            <returns>The newly created PDF page.</returns>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.PageCollection.AddNewPage(ExpertPdf.PdfCreator.PageSize,ExpertPdf.PdfCreator.Margins)\">
            <summary>
            Creates a new PDF page and adds it to the collection. If there is a previous page in the
            collection, the page orientation is inherited from the that page otherwise a first page with
            the specified size and Portrait orientation is created.
            </summary>
            <param name=\"pageSize\">The page size in points.</param>
            <param name=\"pageMargins\">The page mergins in points.</param>
            <returns>The newly created PDF page.</returns>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.PageCollection.AddNewPage(ExpertPdf.PdfCreator.PageSize,ExpertPdf.PdfCreator.Margins,ExpertPdf.PdfCreator.PageOrientation)\">
            <summary>
            Creates a new PDF page with the specified size, margins and orientation and adds it to the collection.
            </summary>
            <param name=\"pageSize\">The PDF page size in points.</param>
            <param name=\"pageMargins\">The PDF page margins in points.</param>
            <param name=\"pageOrientation\">The PDF page orientation.</param>
            <returns>The newly created PDF page.</returns>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.PageCollection.InsertNewPage(System.Int32,ExpertPdf.PdfCreator.PageSize,ExpertPdf.PdfCreator.Margins,ExpertPdf.PdfCreator.PageOrientation)\">
            <summary>
            Creates a new PDF page with the specified size, margins and orientation and inserts it into the collection
            at the specified index
            </summary>
            <param name=\"index\">The index where to insert the new page.</param>
            <param name=\"pageSize\">The PDF page size in points.</param>
            <param name=\"pageMargins\">The PDF page margins in points.</param>
            <param name=\"pageOrientation\">The PDF page orientation.</param>
            <returns>The newly created PDF page.</returns>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.PageCollection.Add(ExpertPdf.PdfCreator.PdfPage)\">
            <summary>
            Adds the specified page to the document pages collection. The page to be added is allowed to be
            from another document.
            The source document of the page to be added must remain opened until the
            current document is saved.
            </summary>
            <param name=\"pdfPage\">The page to be added to the collection.</param>
            <returns>The index of the page in collection. If the page already exists, 
            this method returns the index of the existing page</returns>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.PageCollection.AddRange(ExpertPdf.PdfCreator.PdfPage[])\">
            <summary>
            Adds the specified array of pages to the PDF document pages. The page to be added are allowed to be
            from another document. The source document of the pages to be added must remain opened until the
            current document is saved.
            </summary>
            <param name=\"pages\">The PDF pages to be added.</param>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.PageCollection.Insert(System.Int32,ExpertPdf.PdfCreator.PdfPage)\">
            <summary>
            Inserts the specified page into the document pages collection at the specified index. 
            The page to be added is allowed to be from another document. 
            The source document of the page to be inserted must remain opened until the
            current document is saved.
            </summary>
            <param name=\"pageIndex\">The index where the page will be inserted.</param>
            <param name=\"pdfPage\">The PDF page to be inserted.</param>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.PageCollection.Contains(ExpertPdf.PdfCreator.PdfPage)\">
            <summary>
            Indicates if the collection contains specified page.
            </summary>
            <param name=\"pdfPage\">The PDF page to search.</param>
            <returns>True if the collection contains specified page.</returns>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.PageCollection.IndexOf(ExpertPdf.PdfCreator.PdfPage)\">
            <summary>
            Returns the index of specified page in collection.
            </summary>
            <param name=\"pdfPage\">PDF page to search.</param>
            <returns>The index of the page in collection.</returns>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.PageCollection.Remove(ExpertPdf.PdfCreator.PdfPage)\">
            <summary>
            Removes the specified PDF page.
            </summary>
            <param name=\"pdfPage\">The PDF page to be removed.</param>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.PageCollection.Remove(System.Int32)\">
            <summary>
            Removes the PDF page at the specified index in collection.
            </summary>
            <param name=\"pageIndex\">The zero based index of the PDF page to be removed.</param>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.PageCollection.Document\">
            <summary>
            The parent document of this collection
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.PageCollection.Item(System.Int32)\">
            <summary>
            Gets or sets the page at the specified zero based index in the pages collection.
            </summary>
            <param name=\"pageIndex\">The zero based page index in the collection.</param>
            <returns>The PDF page at the specified index</returns>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.PageCollection.Count\">
            <summary>
            The number of pages in collection.
            </summary>
        </member>
        <member name=\"T:ExpertPdf.PdfCreator.PageOrientation\">
            <summary>
            PDF page orientation
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.PageOrientation.Portrait\">
            <summary>
            Portrait.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.PageOrientation.Landscape\">
            <summary>
            Landscape.
            </summary>
        </member>
        <member name=\"T:ExpertPdf.PdfCreator.PageSize\">
            <summary>
            The PDF page size.
            </summary>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.PageSize.#ctor\">
            <summary>
            Default contructor constructs a A4 page size
            </summary>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.PageSize.#ctor(System.Single,System.Single)\">
            <summary>
            Constructs a custom page size
            </summary>
            <param name=\"width\">The page width in points</param>
            <param name=\"height\">The page height in points</param>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.PageSize.Letter\">
            <summary>
            Letter
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.PageSize.Note\">
            <summary>
            Note
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.PageSize.Legal\">
            <summary>
            Legal
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.PageSize.A0\">
            <summary>
            A0
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.PageSize.A1\">
            <summary>
            A1
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.PageSize.A2\">
            <summary>
            A2
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.PageSize.A3\">
            <summary>
            A3
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.PageSize.A4\">
            <summary>
            A4
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.PageSize.A5\">
            <summary>
            A5
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.PageSize.A6\">
            <summary>
            A6
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.PageSize.A7\">
            <summary>
            A7
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.PageSize.A8\">
            <summary>
            A8
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.PageSize.A9\">
            <summary>
            A9
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.PageSize.A10\">
            <summary>
            A10
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.PageSize.B0\">
            <summary>
            B0
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.PageSize.B1\">
            <summary>
            B1
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.PageSize.B2\">
            <summary>
            B2
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.PageSize.B3\">
            <summary>
            B3
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.PageSize.B4\">
            <summary>
            B4
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.PageSize.B5\">
            <summary>
            B5
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.PageSize.ArchE\">
            <summary>
            ArchE
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.PageSize.ArchD\">
            <summary>
            ArchD
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.PageSize.ArchC\">
            <summary>
            ArchC
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.PageSize.ArchB\">
            <summary>
            ArchB
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.PageSize.ArchA\">
            <summary>
            ArchA
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.PageSize.Flsa\">
            <summary>
            Flsa
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.PageSize.HalfLetter\">
            <summary>
            HalfLetter
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.PageSize.Letter11x17\">
            <summary>
            11x17
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.PageSize.Ledger\">
            <summary>
            Ledger
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.PageSize.Width\">
            <summary>
            Gets or sets the page width
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.PageSize.Height\">
            <summary>
            Gets or sets the page height
            </summary>
        </member>
        <member name=\"T:ExpertPdf.PdfCreator.PdfAction\">
            <summary>
            Base class for the PDF actions (Go To, JavaScript, etc)
            </summary>
        </member>
        <member name=\"T:ExpertPdf.PdfCreator.PdfActionGoTo\">
            <summary>
            Represents a Go To action in the PDF document.
            </summary>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.PdfActionGoTo.#ctor(ExpertPdf.PdfCreator.ExplicitDestination)\">
            <summary>
            Creates a Go To action based on the sepecified explicit destination.
            </summary>
            <param name=\"goToDestination\">The destination of the Go To action.</param>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.PdfActionGoTo.Destination\">
            <summary>
            Gets or sets the explicit destination of the Go To action.
            </summary>
        </member>
        <member name=\"T:ExpertPdf.PdfCreator.PdfActionJavaScript\">
            <summary>
            Represents a JavaScript action in the PDF document.
            </summary>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.PdfActionJavaScript.#ctor(System.String)\">
            <summary>
            Creates a JavaScript action based on a JavaScript string.
            </summary>
            <param name=\"javaScript\">The JavaScript string.</param>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.PdfActionJavaScript.JavaScriptCode\">
            <summary>
            Gets or sets the JavaScript code executed by this action.
            </summary>
        </member>
        <member name=\"T:ExpertPdf.PdfCreator.PdfBookmarkOptions\">
            <summary>
            Controls the bookmark generation
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.PdfBookmarkOptions.HtmlElementSelectors\">
            <summary>
            Gets or sets the selectors of the HTML elements to be bookmarked.
            For example, the selector for all the H1 elements is \"H1\", the selector for all the elements with the CSS class name 'myclass'
            is \"*.myclass\" and the selector for the elements with the id 'myid' is \"*#myid\".
            
            Note: This is used only by the WebKit rendering engine.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.PdfBookmarkOptions.TagNames\">
            <summary>
            Gets or sets the names of the HTML tags to be bookmarked, e.g. \"H1\".
            If null or empty no bookmark will be generated for the PDF document.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.PdfBookmarkOptions.ClassNameFilter\">
            <summary>
            An additional filter to be applied to the tag name filter. This must be identical with the string
            set for the 'class' atttribute of the HTML tag.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.PdfBookmarkOptions.AllowDefaultTitle\">
            <summary>
            By default the converter will not generate bookmarks for the tags that don't have a text (e.g IMG tag).
            Setting this property true will instruct the converter to use the DefaultTitle or the tag outer HTML as 
            bookmark title. The default value is false and therefore the converter will ignore the bookmarks for which a title
            cannot be automatically determined.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.PdfBookmarkOptions.DefaultTitle\">
            <summary>
            Gets or sets the default title to be used for bookmarks that don't have an associated text. This property has effect only if AllowDefaultTitle
            is true and DefaultTitleToOuterHtml is false. This property defaults to \"Bookmark\" text.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.PdfBookmarkOptions.DefaultTitleToOuterHtml\">
            <summary>
            When is true this property instructs the converter to use the tag outer HTML code as title when a correct title cannot be automatically determined
            for the bookmark. This property has effect only when the AllowDefaultTitle property is true and it has priority over the 
            DefaultTitle property. The default value is false.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.PdfBookmarkOptions.BookmarkHiddenElements\">
            <summary>
            When this property is true the converter will generate bookmarks for hidden HTML elements. 
            Default value is true.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.PdfBookmarkOptions.MaxTitleLength\">
            <summary>
            Gets or sets the maximum accepted length of the bookmark title string. If a positive value is set for this 
            property the bookmark title will be truncated if necessary. The default value is -1 and the bookmark  title will not be truncated.
            </summary>
        </member>
        <member name=\"T:ExpertPdf.PdfCreator.PdfColor\">
            <summary>
            Represents a PDF color
            </summary>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.PdfColor.#ctor(System.Drawing.Color)\">
            <summary>
            Creates a color based on a .NET Color structure
            </summary>
            <param name=\"color\">The .NET Color structure.</param>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.PdfColor.#ctor(System.Single)\">
            <summary>
            Creates a Grayscale color based on gray level
            </summary>
            <param name=\"gray\">A value between 0 and 1 to specify the gray level</param>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.PdfColor.#ctor(System.Byte,System.Byte,System.Byte)\">
            <summary>
            Creates a color based on RGB values.
            </summary>
            <param name=\"red\">Red value.</param>
            <param name=\"green\">Green value.</param>
            <param name=\"blue\">Blue value.</param>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.PdfColor.#ctor(System.Single,System.Single,System.Single,System.Single)\">
            <summary>
            Creates a color based on GMYK values.
            </summary>
            <param name=\"cyan\">Cyan value.</param>
            <param name=\"magenta\">Magenta value.</param>
            <param name=\"yellow\">Yellow value.</param>
            <param name=\"key\">Key value.</param>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.PdfColor.op_Implicit(System.Drawing.Color)~ExpertPdf.PdfCreator.PdfColor\">
            <summary>
            Implicit operator to convert a .NET Color structure a PDF color.
            </summary>
            <param name=\"color\">The .NET Color object</param>
            <returns>The PDF color.</returns>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.PdfColor.op_Implicit(ExpertPdf.PdfCreator.PdfColor)~System.Drawing.Color\">
            <summary>
            Implicit operator to convert a PDF color to a .NET Color structure.
            </summary>
            <param name=\"color\">The PDF color object</param>
            <returns>The .NET color object.</returns>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.PdfColor.Empty\">
            <summary>
            The null color.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.PdfColor.Red\">
            <summary>
            Gets or sets the Red of this PDF color.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.PdfColor.Blue\">
            <summary>
            Gets or sets the Blue value of this PDF color.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.PdfColor.Green\">
            <summary>
            Gets or sets the Green value of this PDF color.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.PdfColor.Gray\">
            <summary>
            Gets or sets Gray level.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.PdfColor.Cyan\">
            <summary>
            Gets or sets Cyan value.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.PdfColor.Magenta\">
            <summary>
            Gets sets Magenta value.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.PdfColor.Yellow\">
            <summary>
            Gets  sets Yellow chanel value.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.PdfColor.Key\">
            <summary>
            Gets or sets Black value.
            </summary>
        </member>
        <member name=\"T:ExpertPdf.PdfCreator.PdfCreatorException\">
            <summary>
            Exception thrown by the Pdf Creator library
            </summary>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.PdfCreatorException.#ctor(System.String)\">
            <summary>
            Constructor
            </summary>
            <param name=\"message\">The exception message</param>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.PdfCreatorException.#ctor(System.String,System.Exception)\">
            <summary>
            Constructor
            </summary>
            <param name=\"message\">The exception message</param>
            <param name=\"innerException\">The inner exception that triggered this exception</param>
        </member>
        <member name=\"T:ExpertPdf.PdfCreator.PdfFont\">
            <summary>
            Represents a font in the PDF document.
            </summary>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.PdfFont.GetCharWidth(System.Char)\">
            <summary>
            Gets the width of the specified character in points.
            </summary>
            <param name=\"c\">The character.</param>
            <returns>The character width in points.</returns>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.PdfFont.GetTextWidth(System.String)\">
            <summary>
            Get the width in points of the specified string.
            </summary>
            <param name=\"text\">The measured string.</param>
            <returns>The width of the string in points.</returns>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.PdfFont.GetTextSize(System.String)\">
            <summary>
            Gets the size of the specified string in points.
            </summary>
            <param name=\"text\">The measured string.</param>
            <returns>The size of the string in points.</returns>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.PdfFont.GetSystemFont\">
            <summary>
            Converts this font to a corresponding system font.
            </summary>
            <returns>A system font corresponding to this font object.</returns>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.PdfFont.Clone(ExpertPdf.PdfCreator.Document)\">
            <summary>
            Creates a clone of this font in the specified document.
            </summary>
            <param name=\"document\">The cloned font document.</param>
            <returns>The font object clone.</returns>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.PdfFont.FontFamily\">
            <summary>
            Gets the name of the font family.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.PdfFont.Height\">
            <summary>
            Gets the font height.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.PdfFont.Size\">
            <summary>
            Gets or sets font size in points.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.PdfFont.FontBaseFamily\">
            <summary>
            Gets the predefined family name.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.PdfFont.IsUnderline\">
            <summary>
            A flag to indicate if the font is underline.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.PdfFont.IsStrikeout\">
            <summary>
            A flag to indicate if the font is strikeout.
            </summary>
        </member>
        <member name=\"T:ExpertPdf.PdfCreator.PdfPage\">
            <summary>
            Represents a PDF document page
            </summary>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.PdfPage.AddElement(ExpertPdf.PdfCreator.PageElement)\">
            <summary>
            Add the specified element to this page.
            </summary>
            <param name=\"pageElement\">The element to be added to this page</param>
            <returns>The result of adding the element to this page</returns>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.PdfPage.Orientation\">
            <summary>
            The PDF page orientation.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.PdfPage.RotationAngle\">
            <summary>
            The PDF page rotation angle.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.PdfPage.CustomHeaderTemplate\">
            <summary>
            Represents the custom header template for the page. It will replace the document header template 
            on this page.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.PdfPage.CustomFooterTemplate\">
            <summary>
            Represents the custom footer template for the page. It will replace the document footer template 
            on this page.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.PdfPage.CustomLeftTemplate\">
            <summary>
            Represents the custom left template for the page. It will replace the document left template 
            on this page.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.PdfPage.CustomRightTemplate\">
            <summary>
            Represents the custom right template for the page. It will replace the document right template 
            on this page.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.PdfPage.ShowHeaderTemplate\">
            <summary>
            Show header on this page.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.PdfPage.ShowFooterTemplate\">
            <summary>
            Show footer on this page.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.PdfPage.ShowLeftTemplate\">
            <summary>
            Show document left template on this page.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.PdfPage.ShowRightTemplate\">
            <summary>
            Show document right template on this page.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.PdfPage.Margins\">
            <summary>
            Gets the page margins in points.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.PdfPage.PageSize\">
            <summary>
            Gets the PDF page size in points.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.PdfPage.Document\">
            <summary>
            The parent document of this page.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.PdfPage.PageIndex\">
            <summary>
            The page index in pages collection.
            </summary>
        </member>
        <member name=\"T:ExpertPdf.PdfCreator.PdfStandardSubset\">
            <summary>
            The PDF subset used by the document.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.PdfStandardSubset.Full\">
            <summary>
            The full PDF features can be used in the generated PDF document.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.PdfStandardSubset.Pdf_A_1b\">
            <summary>
            The generated PDF is in conformance with PDF/A 1b standard which makes the document
            suitable for long term archiving. 
            All the true type fonts are embedded in the PDF document, external HTTP links are disabled, 
            transparencies are disabled, and some special metadata to identify the document as PDF/A compliant 
            is inserted in the generated document.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.PdfStandardSubset.Pdf_X_1a\">
            <summary>
            The generated PDF is in conformance with PDF/X 1a standard which makes the document 
            suitable for graphics exchange. 
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.PdfStandardSubset.Pdf_SiqQ_a\">
            <summary>
            The generated PDF is in conformance with PDF/SiqQ Level A standard which makes the document 
            suitable for being digitally signed. 
            In PDF/SiqQ Level A all the true type fonts are embedded in the PDF document and the 
            external HTTP links are disabled.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.PdfStandardSubset.Pdf_SiqQ_b\">
            <summary>
            The generated PDF is in conformance with PDF/SiqQ Level B standard which makes the document 
            suitable for being digitally signed. In PDF/SiqQ Level A all the true type fonts are embedded 
            in the generated PDF document.
            </summary>
        </member>
        <member name=\"T:ExpertPdf.PdfCreator.PolygonElement\">
            <summary>
            Represents a polygon
            </summary>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.PolygonElement.#ctor(System.Drawing.PointF[])\">
            <summary>
            Constructs a polygon element
            </summary>
            <param name=\"points\">The points to be connected</param>
        </member>
        <member name=\"T:ExpertPdf.PdfCreator.ProxyOptions\">
            <summary>
            The proxy settings used to resolve the requests.
            
            Note: This is used only by the WebKit rendering engine.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.ProxyOptions.HostName\">
            <summary>
            Gets or sets the host name of the proxy host 
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.ProxyOptions.Password\">
            <summary>
            Gets or sets the password used for authentication 
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.ProxyOptions.PortNumber\">
            <summary>
            Gets or sets the port number of the proxy host 
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.ProxyOptions.Type\">
            <summary>
            Gets or sets the proxy type  
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.ProxyOptions.Username\">
            <summary>
            Gets or sets the user name used for authentication 
            </summary>
        </member>
        <member name=\"T:ExpertPdf.PdfCreator.NetworkProxyType\">
            <summary>
            The type of proxy used by converter to resolve requests 
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.NetworkProxyType.None\">
            <summary>
            None
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.NetworkProxyType.Socks5\">
            <summary>
            Socks5
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.NetworkProxyType.Http\">
            <summary>
            Http
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.NetworkProxyType.HttpCaching\">
            <summary>
            HttpCaching
            </summary>
        </member>
        <member name=\"T:ExpertPdf.PdfCreator.RectangleElement\">
            <summary>
            This class represents a rectangle
            </summary>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.RectangleElement.#ctor(System.Single,System.Single,System.Single,System.Single)\">
            <summary>
            Constructs a rectangle element 
            </summary>
            <param name=\"x\">The X coordinate</param>
            <param name=\"y\">The Y coordinate</param>
            <param name=\"width\">The rectangle width</param>
            <param name=\"height\">The rectangle height</param>
        </member>
        <member name=\"T:ExpertPdf.PdfCreator.RenderingEngine\">
            <summary>
            Specifies the rendering engine used by the converter to load and render the html.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.RenderingEngine.WebKit\">
            <summary>
            The WebKit rendering engine, used in Google's Chrome and Apple's Safari
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.RenderingEngine.IE\">
            <summary>
            The mshtml rendering engine, used in IE
            </summary>
        </member>
        <member name=\"T:ExpertPdf.PdfCreator.RotationAngle\">
            <summary>
            Standard rotation angles for PDF pages.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.RotationAngle.Rotate_0\">
            <summary>
            0 degrees rotation
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.RotationAngle.Rotate_90\">
            <summary>
            90 degrees rotation
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.RotationAngle.Rotate_180\">
            <summary>
            180 degrees rotation
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.RotationAngle.Rotate_270\">
            <summary>
            270 degrees rotation
            </summary>
        </member>
        <member name=\"T:ExpertPdf.PdfCreator.RtfConvertException\">
            <summary>
            An exception thrown when adding a RtfToPdfElement.
            </summary>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.RtfConvertException.#ctor(System.String)\">
            <summary>
            Constructor
            </summary>
            <param name=\"message\">The exception message</param>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.RtfConvertException.#ctor(System.String,System.Exception)\">
            <summary>
            Constructor
            </summary>
            <param name=\"message\">The exception message</param>
            <param name=\"innerException\">The inner exception that produced this exception</param>
        </member>
        <member name=\"T:ExpertPdf.PdfCreator.RtfToPdfElement\">
            <summary>
            RTF to PDF Converter element
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.RtfToPdfElement.DEFAULT_RTF_VIEWER_WIDTH_PX\">
            <summary>
            The default virtual viewer width in pixels
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.RtfToPdfElement.paginate\">
            <summary>
            When true the text can be paginated
            </summary>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.RtfToPdfElement.#ctor(System.String)\">
            <summary>
            Creates a RTF to PDF converter element for the specified RTF string with the
            default virtual viewer width and an auto detected height. The start position is (0,0)
            and the rendered width is given by the available space in start page.
            </summary>
            <param name=\"rtfString\">The RTF string to convert to PDF</param>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.RtfToPdfElement.#ctor(System.String,System.Int32)\">
            <summary>
            Creates a RTF to PDF converter element for the specified RTF string with the
            specified virtual viewer width and an auto detected height. The start position is (0,0)
            and the rendered width is given by the available space in start page.
            </summary>
            <param name=\"rtfString\">The RTF string to convert to PDF</param>
            <param name=\"rtfViewerWidth\">The virtual viewer width</param>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.RtfToPdfElement.#ctor(System.String,System.Int32,System.Int32)\">
            <summary>
            Creates a RTF to PDF converter element for the specified RTF string with the
            specified virtual viewer width and height. The start position is (0,0)
            and the rendered width is given by the available space in start page.
            </summary>
            <param name=\"rtfString\">The RTF string to convert to PDF</param>
            <param name=\"rtfViewerWidth\">The virtual viewer width</param>
            <param name=\"rtfViewerHeight\">The virtual viewer height</param>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.RtfToPdfElement.#ctor(System.Single,System.Single,System.String)\">
            <summary>
            Creates a RTF to PDF converter element for the specified RTF string with the
            default virtual viewer width and an auto detected height.
            </summary>
            <param name=\"x\">The x position in points where the rendered content will be placed </param>
            <param name=\"y\">The y position in points where the rendered content will be placed</param>
            <param name=\"rtfString\">The RTF string to convert to PDF</param>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.RtfToPdfElement.#ctor(System.Single,System.Single,System.String,System.Int32)\">
            <summary>
            Creates a RTF to PDF converter element for the specified RTF string with the
            specified virtual viewer width and an auto detected height.
            </summary>
            <param name=\"x\">The x position in points where the rendered content will be placed </param>
            <param name=\"y\">The y position in points where the rendered content will be placed</param>
            <param name=\"rtfString\">The RTF string to convert to PDF</param>
            <param name=\"rtfViewerWidth\">The virtual viewer width</param>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.RtfToPdfElement.#ctor(System.Single,System.Single,System.String,System.Int32,System.Int32)\">
            <summary>
            Creates a RTF to PDF converter element for the specified RTF string with the
            specified virtual viewer width and height.
            </summary>
            <param name=\"x\">The x position in points where the rendered content will be placed </param>
            <param name=\"y\">The y position in points where the rendered content will be placed</param>
            <param name=\"rtfString\">The RTF string to convert to PDF</param>
            <param name=\"rtfViewerWidth\">The virtual viewer width</param>
            <param name=\"rtfViewerHeight\">The virtual viewer height</param>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.RtfToPdfElement.#ctor(System.Single,System.Single,System.Single,System.String)\">
            <summary>
            Creates a RTF to PDF converter element for the specified RTF string with the
            default virtual viewer width and an auto detected height.
            </summary>
            <param name=\"x\">The x position in points where the rendered content will be placed </param>
            <param name=\"y\">The y position in points where the rendered content will be placed</param>
            <param name=\"width\">The destination width in points  for the rendered content. If the specified with is less or equal 0,
            the destination width will be given by the available width in page</param>
            <param name=\"rtfString\">The RTF string to convert to PDF</param>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.RtfToPdfElement.#ctor(System.Single,System.Single,System.Single,System.String,System.Int32)\">
            <summary>
            Creates a RTF to PDF converter element for the specified RTF string with the
            specified virtual viewer width and an auto detected height.
            </summary>
            <param name=\"x\">The x position in points where the rendered content will be placed </param>
            <param name=\"y\">The y position in points where the rendered content will be placed</param>
            <param name=\"width\">The destination width in points  for the rendered content. If the specified with is less or equal 0,
            the destination width will be given by the available width in page</param>
            <param name=\"rtfString\">The RTF string to convert to PDF</param>
            <param name=\"rtfViewerWidth\">The virtual viewer width</param>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.RtfToPdfElement.#ctor(System.Single,System.Single,System.Single,System.String,System.Int32,System.Int32)\">
            <summary>
            Creates a RTF to PDF converter element for the specified RTF string with the
            specified virtual viewer width and height.
            </summary>
            <param name=\"x\">The x position in points where the rendered content will be placed </param>
            <param name=\"y\">The y position in points where the rendered content will be placed</param>
            <param name=\"width\">The destination width in points  for the rendered content. If the specified with is less or equal 0,
            the destination width will be given by the available width in page</param>
            <param name=\"rtfString\">The RTF string to convert to PDF</param>
            <param name=\"rtfViewerWidth\">The virtual viewer width</param>
            <param name=\"rtfViewerHeight\">The virtual viewer height</param>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.RtfToPdfElement.#ctor(System.Single,System.Single,System.Single,System.Single,System.String,System.Int32,System.Int32)\">
            <summary>
            Creates a RTF to PDF converter element for the specified RTF string with the
            specified virtual viewer width and height.
            </summary>
            <param name=\"x\">The x position in points where the rendered content will be placed </param>
            <param name=\"y\">The y position in points where the rendered content will be placed</param>
            <param name=\"width\">The destination width in points  for the rendered content. If the specified with is less or equal 0,
            the destination width will be given by the available width in page</param>
            <param name=\"height\">The destination height in points  for the rendered content. If the specified height is less or equal 0,
            the destination height will be auto determined so all the content can be rendered. Please note that the specified height is 
            the effective height that will be rendered in the PDF document and does not include for example 
            the empty spaces introduced by custom or auomatic page breaks.</param>
            <param name=\"rtfString\">The RTF string to convert to PDF</param>
            <param name=\"rtfViewerWidth\">The virtual viewer width</param>
            <param name=\"rtfViewerHeight\">The virtual viewer height</param>
        </member>
        <member name=\"E:ExpertPdf.PdfCreator.RtfToPdfElement.BeforeCreateNextPageEvent\">
            <summary>
            This event is raised when the next page is about to be created to continue rendering.
            The element rendering can be cancelled from the event handler of this event.
            </summary>
        </member>
        <member name=\"E:ExpertPdf.PdfCreator.RtfToPdfElement.BeforeRenderNextPageEvent\">
            <summary>
            This is event is raised before rendering the content on a page, including the intial page.
            The element rendering can be cancelled from the event handler of this event.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.RtfToPdfElement.Paginate\">
            <summary>
            When true the element can be paginated
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.RtfToPdfElement.TruncateOutOfBoundsText\">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.RtfToPdfElement.OptimizePdfPageBreaks\">
            <summary>
            A flag indicating if the converter uses an optimized page breaks algorithm to improve 
            document scrolling inside a PDF Viewer. The optimized algorithm can introduce a small 
            additional processing time when the PDF document is generated.
            The default value is true and the optimized page breaks algorithm is used by default.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.RtfToPdfElement.OptimizeMemoryUsage\">
            <summary>
            When this property is true the library will try to release the unused memory as soon as possible.
            The default value is false.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.RtfToPdfElement.EmbedFonts\">
            <summary>
            When true this options instructs the converter to embed all the true type fonts into the PDF document. 
            The default value is false.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.RtfToPdfElement.RtfViewerWidth\">
            <summary>
            Gets or sets the virtual RTF viewer width
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.RtfToPdfElement.RtfViewerHeight\">
            <summary>
            Gets or sets the virtual RTF viewer height. If the viewer width was not set, 
            this property has no effect and the height will be auto detected
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.RtfToPdfElement.AvoidTextBreak\">
            <summary>
            When true this property instructs the converter to try to
            avoid cutting off the text at PDF page boundry
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.RtfToPdfElement.RightToLeftEnabled\">
            <summary>
            This property is obsolete. Setting this property is not necessary anymore when converting documents in 
            right-to-left languages like Hebrew or Arabic.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.RtfToPdfElement.FitWidth\">
            <summary>
            When this property is true the RTF content will be resized if necessary to fit the available width in PDF page.
            When false the HTML content will be rendered at the real size. By default this property is true and 
            the content will be resized if necessary to fit the available width in PDF page
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.RtfToPdfElement.FitHeight\">
            <summary>
            When this property is true the RTF content will be resized if necessary to fit the available height in PDF page.
            By default this property is false.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.RtfToPdfElement.AdjustBorderSize\">
            <summary>
            There are situations when a fraction of the right and bottom borders of an image or 
            table cell are overwritten by the image content or table cell background when the PDF document is viewed with Adobe Reader. 
            The AdjustBorderSize value is subtracted from the background width and height. 
            The default value is 0 points. 
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.RtfToPdfElement.BkgTransparency\">
            <summary>
            Modify background transparency. 0 means transparent, 100 means opaque.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.RtfToPdfElement.ImgTransparency\">
            <summary>
            Modify images transparency. 0 means transparent, 100 means opaque.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.RtfToPdfElement.AlphaBlendEnabled\">
            <summary>
            Enables or disables alpha blending for transparent images. Default is true.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.RtfToPdfElement.MaskBltEnabled\">
            <summary>
            Enables or disables masking for transparent images. Default is true.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.RtfToPdfElement.RenderedPagesRectangles\">
            <summary>
            The bounds of the rendered rectangle on each PDF page. This property is assigned
            after the element has been added to a PDF page.
            </summary>
        </member>
        <member name=\"T:ExpertPdf.PdfCreator.Security\">
            <summary>
            This class encapsulates the options to control the PDF document
            security options. The Document class defines 
            a reference to an object of this type
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.Security.CanAssembleDocument\">
            <summary>
            Can assemble the document (create bookmarks, thumbnail images or insert, rotate, delete
            pages). This property has effect when a 128 bit key is used. 
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.Security.CanCopyContent\">
            <summary>
            Can copy the document content. 
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.Security.CanAccessibilityCopyContent\">
            <summary>
            Can copy the document content for accessibility. 
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.Security.CanEditAnnotations\">
            <summary>
            Can edit PDF document annotations. 
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.Security.CanEditContent\">
            <summary>
            Can edit PDF document content. 
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.Security.CanFillFormFields\">
            <summary>
            Can fill the form fields. This property has effect when a 128 bit key is used. To disable form filling the CanEditContent and CanEditAnnotations must be set on false.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.Security.CanPrint\">
            <summary>
            Can print the document.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.Security.KeySize\">
            <summary>
            The dimension of the encryption key. The default the key size is 128 bits for a newly created document.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.Security.OwnerPassword\">
            <summary>
            The password required to change permissions of the PDF document like printing or editing.
            If the OwnerPassword property is an empty string and the UserPassword is not empty,
            the OwnerPassword will be automatically assigned with the value from UserPassword and when the PDF document is opened in the viewer using the user password (which is also the owner password) 
            all the operations like printing, copying, etc will be allowed.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.Security.UserPassword\">
            <summary>
            The password required to open the PDF document. If the OwnerPassword property is an empty string and the UserPassword is not empty,
            the OwnerPassword will be automatically assigned with the value from UserPassword and when the PDF document is opened in the viewer using the user password (which is also the owner password) 
            all the operations like printing, copying, etc will be allowed.
            </summary>
        </member>
        <member name=\"T:ExpertPdf.PdfCreator.SoundLinkElement\">
            <summary>
            Represents a link to a sound file in PDF
            </summary>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.SoundLinkElement.#ctor(System.Drawing.RectangleF,System.String)\">
            <summary>
            Constructs a sound link element
            </summary>
            <param name=\"linkRectangle\">The link rectangle in page</param>
            <param name=\"filePath\">The sound file</param>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.SoundLinkElement.LinkRectangle\">
            <summary>
            Gets or sets the link rectangle in page
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.SoundLinkElement.FilePath\">
            <summary>
            Gets or sets the external file path
            </summary>
        </member>
        <member name=\"T:ExpertPdf.PdfCreator.SplitPdf\">
            <summary>
            This class offers the necessary interface to extract pages from a PDF document
            </summary>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.SplitPdf.ExtractPages(System.String,System.Int32,System.Int32)\">
            <summary>
            This function extracts pageCount pages from the srcPdfFilePath PDF file starting with the page at startPage index
            and creates a new Document containing the extracted pages. The resulted document can be further saved 
            into a file on disk or into a stream.
            </summary>
            <param name=\"srcPdfFilePath\">The path to the PDF file from where to extract pages.</param>
            <param name=\"startPageIndex\">The 0 based page index from where to start extraction.</param>
            <param name=\"pageCount\">The number of pages to extract.</param>
            <returns>The Document containing the extracted pages.</returns>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.SplitPdf.ExtractPages(ExpertPdf.PdfCreator.Document,System.Int32,System.Int32)\">
            <summary>
            This function extracts pageCount pages from the srcPdfDocument starting with the page at startPage index
            and creates a new Document containing the extracted pages. The resulted document can be further saved 
            into a file on disk or into a stream.
            </summary>
            <param name=\"srcPdfDocument\">The PDF document from where to extract pages.</param>
            <param name=\"startPageIndex\">The 0 based page index from where to start extraction.</param>
            <param name=\"pageCount\">The number of pages to extract.</param>
            <returns>The Document containing the extracted pages.</returns>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.SplitPdf.ExtractPages(System.String,System.Int32,System.Int32,System.String)\">
            <summary>
            This function extracts pageCount pages from the srcPdfFilePath PDF file starting with the page at startPage index
            and creates a new Document containing the extracted pages. The resulted document is saved into the destFilePath file.
            </summary>
            <param name=\"srcPdfFilePath\">The path to the PDF file from where to extract pages.</param>
            <param name=\"startPageIndex\">The 0 based page index from where to start extraction.</param>
            <param name=\"pageCount\">The number of pages to extract.</param>
            <param name=\"destFilePath\">The destination file for the extracted pages.</param>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.SplitPdf.ExtractPages(ExpertPdf.PdfCreator.Document,System.Int32,System.Int32,System.String)\">
            <summary>
            This function extracts pageCount pages from the srcPdfDocument starting with the page at startPage index
            and creates a new Document containing the extracted pages. The resulted document is saved into the destFilePath file.
            </summary>
            <param name=\"srcPdfDocument\">The PDF document from where to extract pages.</param>
            <param name=\"startPageIndex\">The 0 based page index from where to start extraction.</param>
            <param name=\"pageCount\">The number of pages to extract.</param>
            <param name=\"destFilePath\">The destination file for the extracted pages.</param>
        </member>
        <member name=\"T:ExpertPdf.PdfCreator.StandardCJKFont\">
            <summary>
            The Korean-Japanesse-Chinese (CJK) predefined fonts.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.StandardCJKFont.HeiseiKakuGothicW5\">
            <summary>
            Heisei Kaku Gothic W5 Japanese font.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.StandardCJKFont.HeiseiMinchoW3\">
            <summary>
            Heisei Mincho W3 Japanese font.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.StandardCJKFont.HanyangSystemsGothicMedium\">
            <summary>
            Hanyang Systems Gothic Medium Korean font.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.StandardCJKFont.HanyangSystemsShinMyeongJoMedium\">
            <summary>
            Hanyang Systems Shin MyeongJo Medium Korean font.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.StandardCJKFont.MonotypeHeiMedium\">
            <summary>
            Monotype Hei Medium Chinese traditional font.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.StandardCJKFont.MonotypeSungLight\">
            <summary>
            Monotype Sung Light Chinese traditional font.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.StandardCJKFont.SinoTypeSongLight\">
            <summary>
            SinoType Song Light Chinese simplified font.
            </summary>
        </member>
        <member name=\"T:ExpertPdf.PdfCreator.StdFontBaseFamily\">
            <summary>
            Standard PDF font families.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.StdFontBaseFamily.Custom\">
            <summary>
            Custom font.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.StdFontBaseFamily.Helvetica\">
            <summary>
            Helvetica
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.StdFontBaseFamily.HelveticaBold\">
            <summary>
            Helvetica Bold
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.StdFontBaseFamily.HelveticaOblique\">
            <summary>
            Helvetica Oblique
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.StdFontBaseFamily.HelveticaBoldOblique\">
            <summary>
            Helvetica Bold Oblique
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.StdFontBaseFamily.Courier\">
            <summary>
            Courier
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.StdFontBaseFamily.CourierBold\">
            <summary>
            Courier Bold
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.StdFontBaseFamily.CourierOblique\">
            <summary>
            Courier Oblique
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.StdFontBaseFamily.CourierBoldOblique\">
            <summary>
            Courier Bold Oblique
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.StdFontBaseFamily.TimesRoman\">
            <summary>
            Times Roman
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.StdFontBaseFamily.TimesBold\">
            <summary>
            Times Bold
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.StdFontBaseFamily.TimesBoldItalic\">
            <summary>
            Times Bold Italic
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.StdFontBaseFamily.TimesItalic\">
            <summary>
            Times Italic
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.StdFontBaseFamily.Symbol\">
            <summary>
            Symbol
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.StdFontBaseFamily.ZapfDingbats\">
            <summary>
            ZapfDingbats
            </summary>
        </member>
        <member name=\"T:ExpertPdf.PdfCreator.StartupMode\">
            <summary>
            Specifies the converter startup mode. By default this is set to Automatic and the conversion is started as soon as the page loads (and ConversionDelay elapses). 
            If set to Manual, the conversion is started only by a javascript call to ExpertPdfJSObj.startConversion()
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.StartupMode.Automatic\">
            <summary>
            The conversion starts right after the page load
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.StartupMode.Manual\">
            <summary>
            The conversion starts only when called from JavaScript
            </summary>
        </member>
        <member name=\"T:ExpertPdf.PdfCreator.Template\">
            <summary>
            Represents a document template repeated on each document page
            </summary>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.Template.AddElement(ExpertPdf.PdfCreator.PageElement)\">
            <summary>
            Add a page element to the template
            </summary>
            <param name=\"pageElement\">The page element to be added</param>
            <returns>The result of element rendering</returns>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.Template.Width\">
            <summary>
            Gets or sets template width for a custom template.
            Setting this property for a default document template has no effect.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.Template.Height\">
            <summary>
            Gets or sets template height for a custom template.
            Setting this property for a default document template has no effect.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.Template.Bounds\">
            <summary>
            Gets or sets the template bounds rectangle. Setting this property for 
            a default template has no effect.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.Template.Docking\">
            <summary>
            Gets or sets the template docking inside the PDF page
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.Template.Anchoring\">
            <summary>
            Gets or sets the template anchoring inside the PDF page
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.Template.DrawOnOddPages\">
            <summary>
            Set this property to indicate whether the template is drawn or not on the odd pages.
            By default this property is true.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.Template.DrawOnEvenPages\">
            <summary>
            Set this property to indicate whether the template is drawn or not on the odd pages.
            By default this property is true.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.Template.DrawOnFirstPage\">
            <summary>
            Set this property to indicate whether the template is drawn or not on the first page.
            By default this property is true.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.Template.PageNumberingStartIndex\">
            <summary>
            Gets or sets the start index for page numbering using the &amp;p; variable in a TextElement
            added to the template.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.Template.PageNumberingPageCountIncrement\">
            <summary>
            Gets or sets an increment for the total number of pages displayed using &amp;P; variable in a TextElement
            added to the template.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.Template.BringToFront\">
            <summary>
            When true, this property makes the template to be rendered in front of the 
            page main content. By default this property is true.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.Template.SendToBackground\">
            <summary>
            When true, this property makes the template to be rendered in the back of the 
            page main content. By default this property is false.
            </summary>
        </member>
        <member name=\"T:ExpertPdf.PdfCreator.TemplateAnchoring\">
            <summary>
            The anchoring position of the PDF template.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.TemplateAnchoring.NotAnchored\">
            <summary>
            The template is not anchored.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.TemplateAnchoring.Center\">
            <summary>
            The template will be anchored in the center of the PDF page.
            The center of the template rectangle will be same with the center of the page. 
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.TemplateAnchoring.TopLeft\">
            <summary>
            The template will be anchored in the top left corner of the page.
            The template location will be the top left corner of the page.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.TemplateAnchoring.TopRight\">
            <summary>
            The template will be anchored in the top right corner of the page.
            The right side of the template will be aligned with the right side of the page,
            and the top side of the template will be aligned with the top side of the page
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.TemplateAnchoring.BottomLeft\">
            <summary>
            The template will be anchored in the bottom left corner of the page.
            The left side of the template will be aligned with the left side of the 
            page and the bottom side of the document will be aligned with the bottom
            side of the page.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.TemplateAnchoring.BottomRight\">
            <summary>
            The template will be anchored in the bottom left corner of the page.
            The right side of the document will be aligned with the right side of the 
            PDF page and the bottom side of the document will be aligned with the bottom 
            side of the PDF page
            </summary>
        </member>
        <member name=\"T:ExpertPdf.PdfCreator.TemplateCollection\">
            <summary>
            The PDF document templates. A document template is repeated on each page
            of the document.
            </summary>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.TemplateCollection.GetEnumerator\">
            <summary>
            Gets the collection enumerator.
            </summary>
            <returns>The collection enumerator.</returns>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.TemplateCollection.AddNewTemplate(System.Single,System.Single)\">
            <summary>
            Add a new template with the specified width and height to the document templates collection.
            The template location is top left corner of the page.
            </summary>
            <param name=\"width\">The width in points of the template.</param>
            <param name=\"height\">The height in points of the template.</param>
            <returns></returns>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.TemplateCollection.AddNewTemplate(System.Drawing.RectangleF)\">
            <summary>
            Add a new template with the specified bounds to the document templates collection.
            </summary>
            <param name=\"bounds\">The template element bounds in points.</param>
            <returns>The newly added template.</returns>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.TemplateCollection.Item(System.Int32)\">
            <summary>
            Gets the template at the specified index zero base index.
            </summary>
            <param name=\"templateIndex\"></param>
            <returns>The template at the specified zero based index.</returns>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.TemplateCollection.Count\">
            <summary>
            The number of templates in collection.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.TemplateCollection.HeaderTemplate\">
            <summary>
            Represents the default PDF document header template. This header is automatically considered
            when calculating the available space for drawing in a PDF page. This template is automatically 
            docked to the top of the PDF page.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.TemplateCollection.FooterTemplate\">
            <summary>
            Represents the default PDF document footer template. This footer is automatically considered
            when calculating the available space for rendering in a PDF page. This template is automatically 
            docked to the bottom of the PDF page.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.TemplateCollection.LeftTemplate\">
            <summary>
            Represents the default PDF document left template. This left template is automatically considered
            when calculating the available space for rendering in a PDF page. This template is automatically 
            docked to the left side of the PDF page.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.TemplateCollection.RightTemplate\">
            <summary>
            Represents the default PDF document right template. This right template is automatically considered
            when calculating the available space for rendering in a PDF page. This template is automatically 
            docked to the right side of the PDF page.
            </summary>
        </member>
        <member name=\"T:ExpertPdf.PdfCreator.TemplateDocking\">
            <summary>
            The docking style of the PDF template.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.TemplateDocking.NotDocked\">
            <summary>
            The template is not docked in PDF page.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.TemplateDocking.Top\">
            <summary>
            The template is docked to the the top of the PDF page. 
            The template width and location will be adjusted for docking.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.TemplateDocking.Bottom\">
            <summary>
            The template is docked to the bottom of the PDF page. 
            The template width and location will be adjusted for docking.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.TemplateDocking.Left\">
            <summary>
            The template is docked to the left of the PDF page.
            The template location and height will be adjusted for docking.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.TemplateDocking.Right\">
            <summary>
            The template is docked to the right of the PDF page.
            The template location and height will be adjusted for docking.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.TemplateDocking.Fill\">
            <summary>
            The template fills the PDF page. The template location will be the 
            top left corner and the size will be the size of the PDF page. The docking
            will take into account the existing document Header, Footer, Left and Right templates.
            </summary>
        </member>
        <member name=\"T:ExpertPdf.PdfCreator.TextElement\">
            <summary>
            Represents a text element to be added to a PDF page or template.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.TextElement.text\">
            <summary>
            The string to be written
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.TextElement.x\">
            <summary>
            The start x position
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.TextElement.y\">
            <summary>
            The start y position
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.TextElement.width\">
            <summary>
            The width of destination rectangle
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.TextElement.height\">
            <summary>
            The height of the destination rectangle 
            Is optional
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.TextElement.clipRectangle\">
            <summary>
            A rectangle to be added to the current cliping path
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.TextElement.font\">
            <summary>
            The text font
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.TextElement.multiPageText\">
            <summary>
            When true a paginable text is rendered
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.TextElement.paginate\">
            <summary>
            When true the text can be paginated
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.TextElement.textAlign\">
            <summary>
            Horizontal text alignment.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.TextElement.verticalTextAlign\">
            <summary>
            Vertical text alignment.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.TextElement.rightToLeft\">
            <summary>
            Indicates whether RTL should be checked.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.TextElement.characterSpacing\">
            <summary>
            Character spacing value.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.TextElement.wordSpacing\">
            <summary>
            Word spacing value.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.TextElement.leading\">
            <summary>
            Text leading.
            </summary>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.TextElement.#ctor(System.Single,System.Single,System.String,ExpertPdf.PdfCreator.PdfFont)\">
            <summary>
            Contructs a paginable text element that will be rendered at the specified (x,y) position using the specified font. 
            The height of the rendered text will be auto-determined. The width is the available width in page.
            
            The Unicode text is supported only for embedded true type fonts. A font can be embedded in the generated PDF document
            if the embedFont parameter of Document.Fonts.Add(System.Drawing.Font font, bool embedFont) is true.
            
            If the text pagination is not allowed ( Paginate property is false ), the text will be written on current page, 
            the rendered text height being limited by the available height on page. The remaining text
            and the text bounds inside the current page are returned in the AddTextElementResult object when the element is added 
            to a renderer.
            
            If the text pagination is allowed ( Paginate property is true ) and the text needs pagination (the auto-determined text height is bigger 
            than the available space on page), all the text will be rendered using the necessary
            height. The text bounds inside the last page and the last page index are returned in the AddTextElementResult object when 
            the element is added to a renderer. 
            
            </summary>
            <param name=\"x\">The start x coordinate where the text will be rendered</param>
            <param name=\"y\">The start y coordinate where the text </param>
            <param name=\"text\">The text to be rendered</param>
            <param name=\"font\">The text font. The true type fonts must be embedded in PDF when it is added to the document 
            in order to support Unicode texts.
            
            </param>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.TextElement.#ctor(System.Single,System.Single,System.String,ExpertPdf.PdfCreator.PdfFont,ExpertPdf.PdfCreator.PdfColor)\">
            <summary>
            Contructs a paginable text element that will be rendered at the specified (x,y) position using the specified font and colot. 
            The height of the rendered text will be auto-determined. The width is the available width in page.
            
            The Unicode text is supported only for embedded true type fonts. A font can be embedded in the generated PDF document
            if the embedFont parameter of Document.Fonts.Add(System.Drawing.Font font, bool embedFont) is true.
            
            If the text pagination is not allowed ( Paginate property is false ), the text will be written on current page, 
            the rendered text height being limited by the available height on page. The remaining text
            and the text bounds inside the current page are returned in the AddTextElementResult object when the element is added 
            to a renderer.
            
            If the text pagination is allowed ( Paginate property is true ) and the text needs pagination (the auto-determined text height is bigger 
            than the available space on page), all the text will be rendered using the necessary
            height. The text bounds inside the last page and the last page index are returned in the AddTextElementResult object when 
            the element is added to a renderer. 
            
            </summary>
            <param name=\"x\">The start x coordinate where the text will be rendered</param>
            <param name=\"y\">The start y coordinate where the text </param>
            <param name=\"text\">The text to be rendered</param>
            <param name=\"font\">The text font. The true type fonts must be embedded in PDF when it is added to the document 
            in order to support Unicode texts.</param>
            <param name=\"textColor\">The text color</param>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.TextElement.#ctor(System.Single,System.Single,System.Single,System.String,ExpertPdf.PdfCreator.PdfFont)\">
            <summary>
            Contructs a paginable text element that will be rendered at the specified (x,y) position using the specified width and font. 
            The height of the rendered text will be auto-determined.
            
            The Unicode text is supported only for embedded true type fonts. A font can be embedded in the generated PDF document
            if the embedFont parameter of Document.Fonts.Add(System.Drawing.Font font, bool embedFont) is true.
            
            If the text pagination is not allowed ( Paginate property is false ), the text will be written on current page, 
            the rendered text height being limited by the available height on page. The remaining text
            and the text bounds inside the current page are returned in the AddTextElementResult object when the element is added 
            to a renderer.
            
            If the text pagination is allowed ( Paginate property is true ) and the text needs pagination (the auto-determined text height is bigger 
            than the available space on page), all the text will be rendered using the necessary
            height. The text bounds inside the last page and the last page index are returned in the AddTextElementResult object when 
            the element is added to a renderer. 
            
            </summary>
            <param name=\"x\">The start x coordinate where the text will be rendered</param>
            <param name=\"y\">The start y coordinate where the text </param>
            <param name=\"width\">The width of the destination rectangle</param>
            <param name=\"text\">The text to be rendered</param>
            <param name=\"font\">The text font. The true type fonts must be embedded in PDF when it is added to the document 
            in order to support Unicode texts.</param>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.TextElement.#ctor(System.Single,System.Single,System.Single,System.Single,System.String,ExpertPdf.PdfCreator.PdfFont)\">
            <summary>
            Contructs a paginable text element that will be rendered in the specified rectangle using the specified width, height and font. 
            
            The Unicode text is supported only for embedded true type fonts. A font can be embedded in the generated PDF document
            if the embedFont parameter of Document.Fonts.Add(System.Drawing.Font font, bool embedFont) is true.
            
            If the text pagination is not allowed ( Paginate property is false ), the text will be written on current page, the rendered text height 
            being given by the minimum between the specified height and the available height on page. The remaining text
            and the text bounds inside the current page are returned in the AddTextElementResult object when the element is added 
            to a renderer.
            
            If the text pagination is allowed ( Paginate property is true ) and the text needs pagination (the specified height is bigger 
            than the available space on page), the height parameter will be ignored and the text will be rendered to the end using the necessary
            height. The text bounds inside the last page and the last page index are returned in the AddTextElementResult object when 
            the element is added to a renderer. 
            
            If the text pagination is allowed but the text does not need pagination (the specified height is less than the available space on page),
            the rendered text will be truncated to fit the specified height. The text bounds inside the current page and the last page index are 
            returned in the AddTextElementResult object when the element is added to a renderer.
            </summary>
            <param name=\"x\">The start x coordinate where the text will be rendered</param>
            <param name=\"y\">The start y coordinate where the text </param>
            <param name=\"width\">The width of the destination rectangle</param>
            <param name=\"height\">The height of the destination rectangle</param>
            <param name=\"text\">The text to be rendered</param>
            <param name=\"font\">The text font. The true type fonts must be embedded in PDF when it is added to the document 
            in order to support Unicode texts.</param>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.TextElement.#ctor(System.Single,System.Single,System.Single,System.String,ExpertPdf.PdfCreator.PdfFont,ExpertPdf.PdfCreator.PdfColor)\">
            <summary>
            Contructs a paginable text element that will be rendered at the specified (x,y) position using the specified width, font and color. 
            The height of the rendered text will be auto-determined.
            
            The Unicode text is supported only for embedded true type fonts. A font can be embedded in the generated PDF document
            if the embedFont parameter of Document.Fonts.Add(System.Drawing.Font font, bool embedFont) is true.
            
            If the text pagination is not allowed ( Paginate property is false ), the text will be written on current page, 
            the rendered text height being limited by the available height on page. The remaining text
            and the text bounds inside the current page are returned in the AddTextElementResult object when the element is added 
            to a renderer.
            
            If the text pagination is allowed ( Paginate property is true ) and the text needs pagination (the auto-determined text height is bigger 
            than the available space on page), all the text will be rendered using the necessary
            height. The text bounds inside the last page and the last page index are returned in the AddTextElementResult object when 
            the element is added to a renderer. 
            
            </summary>
            <param name=\"x\">The start x coordinate where the text will be rendered</param>
            <param name=\"y\">The start y coordinate where the text </param>
            <param name=\"width\">The width of the destination rectangle</param>
            <param name=\"text\">The text to be rendered</param>
            <param name=\"font\">The text font. The true type fonts must be embedded in PDF when it is added to the document 
            in order to support Unicode texts.</param>
            <param name=\"textColor\">The text color</param>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.TextElement.#ctor(System.Single,System.Single,System.Single,System.Single,System.String,ExpertPdf.PdfCreator.PdfFont,ExpertPdf.PdfCreator.PdfColor)\">
            <summary>
            Contructs a paginable text element that will be rendered in the specified rectangle using the specified width, height, font and color. 
            
            The Unicode text is supported only for embedded true type fonts. A font can be embedded in the generated PDF document
            if the embedFont parameter of Document.Fonts.Add(System.Drawing.Font font, bool embedFont) is true.
            
            If the text pagination is not allowed ( Paginate property is false ), the text will be written on current page, the rendered text height 
            being given by the minimum between the specified height and the available height on page. The remaining text
            and the text bounds inside the current page are returned in the AddTextElementResult object when the element is added 
            to a renderer.
            
            If the text pagination is allowed ( Paginate property is true ) and the text needs pagination (the specified height is bigger 
            than the available space on page), the height parameter will be ignored and the text will be rendered to the end using the necessary
            height. The text bounds inside the last page and the last page index are returned in the AddTextElementResult object when 
            the element is added to a renderer. 
            
            If the text pagination is allowed but the text does not need pagination (the specified height is less than the available space on page),
            the rendered text will be truncated to fit the specified height. The text bounds inside the current page and the last page index are 
            returned in the AddTextElementResult object when the element is added to a renderer.
            </summary>
            <param name=\"x\">The start x coordinate where the text will be rendered</param>
            <param name=\"y\">The start y coordinate where the text </param>
            <param name=\"width\">The width of the destination rectangle</param>
            <param name=\"height\">The height of the destination rectangle</param>
            <param name=\"text\">The text to be rendered</param>
            <param name=\"font\">The text font. The true type fonts must be embedded in PDF when it is added to the document 
            in order to support Unicode texts.</param>
            <param name=\"textColor\">The text color</param>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.TextElement.Render(ExpertPdf.PdfCreator.ElementsRenderer)\">
            <summary>
            Renders the text using the specified renderer. The renderer can be a page or a template.
            </summary>
            <param name=\"renderer\">The renderer to render this text element</param>
            <returns>The </returns>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.TextElement.TextAlign\">
            <summary>
            Gets or sets the text alignment.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.TextElement.VerticalTextAlign\">
            <summary>
            Gets or sets the vertical text alignment.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.TextElement.RightToLeftLanguage\">
            <summary>
            Set this property true if the text is in a RTL language.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.TextElement.CharacterSpacing\">
            <summary>
            Gets or sets an additional spacing between characters.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.TextElement.WordSpacing\">
            <summary>
            Gets or sets an aditional spacing between words. The words separator is consider the 
            space character with code 32
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.TextElement.LineSpacing\">
            <summary>
            Gets or sets value that indicates the vertical distance between the baselines of adjacent lines of text.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.TextElement.ClipRectangle\">
            <summary>
            A rectangle to be added to the current cliping path
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.TextElement.TextAngle\">
            <summary>
            Gets or sets an angle to control text counter-clockwise direction. The default value is 0.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.TextElement.TextRise\">
            <summary>
            Gets or sets the distance to move the text baseline up or down from its default location.
            Adjustments to the baseline are useful for drawing superscripts or subscripts.
            Positive values of text rise move the baseline up and creates a superscript text. 
            Negative values of text rise move the baseline down and creates a subscript text. 
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.TextElement.Text\">
            <summary>
            The string to be written
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.TextElement.X\">
            <summary>
            The start x position
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.TextElement.Y\">
            <summary>
            The start y position
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.TextElement.Width\">
            <summary>
            The width of destination rectangle
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.TextElement.Height\">
            <summary>
            The height of the destination rectangle 
            Is optional
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.TextElement.TextFont\">
            <summary>
            The text font
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.TextElement.Paginate\">
            <summary>
            When true the text can be paginated
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.TextElement.IsPaginable\">
            <summary>
            This property tells if the text element was constructed as a paginable
            text element or not. 
            </summary>
        </member>
        <member name=\"T:ExpertPdf.PdfCreator.TextNoteElement\">
            <summary>
            Represents a text annotation in the PDF page.
            </summary>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.TextNoteElement.#ctor(System.Drawing.RectangleF,System.String)\">
            <summary>
            Constructs a sound link element
            </summary>
            <param name=\"linkRectangle\">The link rectangle in page</param>
            <param name=\"text\">The text annontation</param>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.TextNoteElement.LinkRectangle\">
            <summary>
            Gets or sets the link rectangle in page
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.TextNoteElement.Text\">
            <summary>
            Gets or sets the annotation text
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.TextNoteElement.Open\">
            <summary>
            Gets or sets default annotation status. Default value is false and the annotation is closed
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.TextNoteElement.NoteIcon\">
            <summary>
            Gets or sets text note icon in PDF document.
            </summary>
        </member>
        <member name=\"T:ExpertPdf.PdfCreator.TextNoteIcon\">
            <summary>
            Defines set of text annotation types.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.TextNoteIcon.Note\">
            <summary>
            Note.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.TextNoteIcon.Comment\">
            <summary>
            Comment.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.TextNoteIcon.Help\">
            <summary>
            Help.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.TextNoteIcon.Insert\">
            <summary>
            Insert.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.TextNoteIcon.Key\">
            <summary>
            Key.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.TextNoteIcon.NewParagraph\">
            <summary>
            NewParagraph.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.TextNoteIcon.Paragraph\">
            <summary>
            Paragraph.
            </summary>
        </member>
        <member name=\"T:ExpertPdf.PdfCreator.UnitsConverter\">
            <summary>
            Converts between various graphic units (pixels, points, etc)
            </summary>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.UnitsConverter.PointsToPixels(System.Single)\">
            <summary>
            Converts from points to pixels. The result of this method takes into account the 
            current screen resolution.
            </summary>
            <param name=\"points\">The value in points to convert.</param>
            <returns>The value in pixels.</returns>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.UnitsConverter.PixelsToPoints(System.Single)\">
            <summary>
            Converts from pixels to points. The result of this method takes into account the 
            current screen resolution.
            </summary>
            <param name=\"pixels\">The value in pixels to convert.</param>
            <returns>The value in points.</returns>
        </member>
        <member name=\"T:ExpertPdf.PdfCreator.LinkUrlElement\">
            <summary>
            Represents a link to an URL in PDF document.
            </summary>
        </member>
        <member name=\"M:ExpertPdf.PdfCreator.LinkUrlElement.#ctor(System.Drawing.RectangleF,System.String)\">
            <summary>
            Constructs a URL link element
            </summary>
            <param name=\"linkRectangle\">The link rectangle in page</param>
            <param name=\"linkURL\">The link destination URL</param>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.LinkUrlElement.LinkRectangle\">
            <summary>
            Gets or sets the link rectangle in page
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.LinkUrlElement.LinkURL\">
            <summary>
            Gets or sets the link destination URL
            </summary>
        </member>
        <member name=\"T:ExpertPdf.PdfCreator.VerticalTextAlign\">
            <summary>
            Specifies vertical alignment of text.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.VerticalTextAlign.Top\">
            <summary>
            Top aligned.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.VerticalTextAlign.Middle\">
            <summary>
            Center aligned.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.VerticalTextAlign.Bottom\">
            <summary>
            Bottom alligned.
            </summary>
        </member>
        <member name=\"T:ExpertPdf.PdfCreator.ViewerFullScreenExitMode\">
            <summary>
            Used in ViewerPreferences to specify how to display the document on exiting full-screen mode
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.ViewerFullScreenExitMode.UseNone\">
            <summary>
            Neither document outline nor thumbnail images visible.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.ViewerFullScreenExitMode.UseOutlines\">
            <summary>
            Document outline visible (bookmarks visible).
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.ViewerFullScreenExitMode.UseThumbs\">
            <summary>
            Thumbnail images visible.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.ViewerFullScreenExitMode.UseOC\">
            <summary>
            Optional content group panel visible.
            </summary>
        </member>
        <member name=\"T:ExpertPdf.PdfCreator.ViewerPageLayout\">
            <summary>
            A name object specifying the page layout to be used when the
            document is opened.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.ViewerPageLayout.SinglePage\">
            <summary>
            Display one page at a time.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.ViewerPageLayout.OneColumn\">
            <summary>
            Display the pages in one column.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.ViewerPageLayout.TwoColumnLeft\">
            <summary>
            Display the pages in two columns, with odd numbered
            pages on the left.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.ViewerPageLayout.TwoColumnRight\">
            <summary>
            Display the pages in two columns, with odd numbered
            pages on the right.
            </summary>
        </member>
        <member name=\"T:ExpertPdf.PdfCreator.ViewerPageMode\">
            <summary>
            A name object specifying how the document should be displayed when opened.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.ViewerPageMode.UseNone\">
            <summary>
            Neither document outline nor thumbnail images visible.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.ViewerPageMode.UseOutlines\">
            <summary>
            Document outline visible (bookmarks visible).
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.ViewerPageMode.UseThumbs\">
            <summary>
            Thumbnail images visible.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.ViewerPageMode.FullScreen\">
            <summary>
            Full-screen mode, with no menu bar, window
            controls, or any other window visible.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.ViewerPageMode.UseOC\">
            <summary>
            Optional content group panel visible.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.ViewerPageMode.UseAttachments\">
            <summary>
            Document attachments visible.
            </summary>
        </member>
        <member name=\"T:ExpertPdf.PdfCreator.ViewerPreferences\">
            <summary>
            Represents the viewer preferences of the PDF document
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.ViewerPreferences.HideToolbar\">
            <summary>
            A flag specifying whether to hide the viewer application’s tool
            bars when the document is active. Default value: False.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.ViewerPreferences.HideMenuBar\">
            <summary>
            A flag specifying whether to hide the viewer application’s
            menu bar when the document is active. Default value: False.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.ViewerPreferences.HideWindowUI\">
            <summary>
            A flag specifying whether to hide user interface elements in
            the document’s window (such as scroll bars and navigation controls),
            leaving only the document’s contents displayed. Default value: False.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.ViewerPreferences.FitWindow\">
            <summary>
            A flag specifying whether to resize the document’s window to
            fit the size of the first displayed page. Default value: False.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.ViewerPreferences.CenterWindow\">
            <summary>
            A flag specifying whether to position the document’s window
            in the center of the screen. Default value: False.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.ViewerPreferences.DisplayDocTitle\">
            <summary>
            A flag specifying whether the window’s title bar should display the document title
            taken from the title entry of the document information dictionary. Default value: False.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.ViewerPreferences.NonFullScreenPageMode\">
            <summary>
            The document’s page mode, specifying how to display the
            document on exiting full-screen mode. This entry is meaningful only if the value of the PageMode entry in the catalog dictionary 
            is FullScreen; it is ignored otherwise. Default value: UseNone.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.ViewerPreferences.Direction\">
            <summary>
            The predominant reading order for text. Default value: L2R.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.ViewerPreferences.PageMode\">
            <summary>
            Specifies how the document should be displayed when opened. Default value: UseNone.
            </summary>
        </member>
        <member name=\"P:ExpertPdf.PdfCreator.ViewerPreferences.PageLayout\">
            <summary>
            The page layout to be used when the document is opened. Default value: OneColumn.
            </summary>
        </member>
        <member name=\"T:ExpertPdf.PdfCreator.ViewerTextOrder\">
            <summary>
            Used in ViewerPreferences to specify the predominant reading order for text.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.ViewerTextOrder.L2R\">
            <summary>
            Left to right.
            </summary>
        </member>
        <member name=\"F:ExpertPdf.PdfCreator.ViewerTextOrder.R2L\">
            <summary>
            Right to left ( including vertical writing systems such as
            Chinese, Japanese, and Korean ).
            </summary>
        </member>
    </members>
</doc>
